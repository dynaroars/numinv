running geo2
23:15:5:alg:Debug:src: /var/tmp/DIG2_31tNDi/geo2.c
23:15:5:alg:Info:analyze programs/nla/geo2.c
23:15:5:alg:Info:set seed to: 0.0 (test 11)
23:15:5:miscs:Info:autodeg 5
23:15:5:alg:Info:check reachability
23:15:5:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int k)
23:15:6:alg:Debug:l12: infer using 189 exprs
23:15:6:miscs:Debug:solve 126 uks using 189 eqts
23:15:26:alg:Debug:l12: no new results -- break
23:15:26:alg:Debug:l12: got 0 eqts, 0 new inps
23:15:26:alg:Info:0 invs:
l12: 
23:15:26:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int k)
23:15:26:alg:Info:1 locs: check upperbounds for 32 terms
23:15:26:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:15:34:alg:Info:1 locs: compute upperbounds for 1 terms
23:15:34:alg:Debug:l12: compute ub for '-k', start w/ min -2, maxV 10)
23:15:35:alg:Debug:got -k <= -1
23:15:35:alg:Info:1 invs:
l12: -k <= -1
23:15:35:alg:Info:test 1 invs on all 974 traces
23:15:35:alg:Info:find uniq invs
23:15:35:alg:Info:1 invs:
l12: -k <= -1
23:15:35:alg:Info:got 1 invs, 77 inps (test 51): 
l12: -k <= -1
23:15:35:alg:Info:*done* prog programs/nla/geo2.c, invs 1, time 29.2781028748 s
23:15:35:alg:Debug:rm -rf /var/tmp/DIG2_31tNDi
23:15:36:alg:Debug:src: /var/tmp/DIG2_h0eYmx/geo2.c
23:15:36:alg:Info:analyze programs/nla/geo2.c
23:15:36:alg:Info:set seed to: 1.0 (test 83)
23:15:36:miscs:Info:autodeg 5
23:15:36:alg:Info:check reachability
23:15:36:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int k)
23:15:36:alg:Debug:l12: infer using 189 exprs
23:15:36:miscs:Debug:solve 126 uks using 189 eqts
23:15:56:alg:Debug:l12: no new results -- break
23:15:56:alg:Debug:l12: got 0 eqts, 0 new inps
23:15:56:alg:Info:0 invs:
l12: 
23:15:56:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int k)
23:15:56:alg:Info:1 locs: check upperbounds for 32 terms
23:15:56:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:16:4:alg:Info:1 locs: compute upperbounds for 1 terms
23:16:4:alg:Debug:l12: compute ub for '-k', start w/ min -2, maxV 10)
23:16:5:alg:Debug:got -k <= -1
23:16:5:alg:Info:1 invs:
l12: -k <= -1
23:16:5:alg:Info:test 1 invs on all 1031 traces
23:16:5:alg:Info:find uniq invs
23:16:5:alg:Info:1 invs:
l12: -k <= -1
23:16:5:alg:Info:got 1 invs, 79 inps (test 60): 
l12: -k <= -1
23:16:5:alg:Info:*done* prog programs/nla/geo2.c, invs 1, time 29.2994201183 s
23:16:5:alg:Debug:rm -rf /var/tmp/DIG2_h0eYmx
running fermat1
23:26:6:alg:Debug:src: /var/tmp/DIG2_KLWLMt/fermat1.c
23:26:6:alg:Info:analyze programs/nla/fermat1.c
23:26:6:alg:Info:set seed to: 0.0 (test 11)
23:26:6:miscs:Info:autodeg 4
23:26:6:alg:Info:check reachability
23:26:6:alg:Debug:use RT to generate traces for l29,l22,l18
23:26:6:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:26:7:alg:Info:gen eqts at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:26:9:alg:Debug:l18: need more traces (174 eqts, need >= 189)
23:26:11:alg:Debug:obtain 7 new traces
23:26:11:alg:Debug:l18: need more traces (181 eqts, need >= 189)
23:26:13:alg:Debug:obtain 5 new traces
23:26:13:alg:Debug:l18: need more traces (186 eqts, need >= 189)
23:26:15:alg:Debug:obtain 21 new traces
23:26:15:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
23:26:15:alg:Debug:l29: infer using 189 exprs
23:26:15:miscs:Debug:solve 126 uks using 189 eqts
23:26:15:alg:Debug:l22: infer using 189 exprs
23:26:15:miscs:Debug:solve 126 uks using 189 eqts
23:26:33:alg:Debug:l29: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:26:33:alg:Debug:l29: check 1 unchecked (1 candidates)
23:26:36:alg:Debug:l29: no disproved candidates -- break
23:26:33:alg:Debug:l22: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:26:33:alg:Debug:l22: check 1 unchecked (1 candidates)
23:26:36:alg:Debug:l22: no disproved candidates -- break
23:26:15:alg:Debug:l18: infer using 189 exprs
23:26:15:miscs:Debug:solve 126 uks using 189 eqts
23:26:38:alg:Debug:l18: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:26:38:alg:Debug:l18: check 1 unchecked (1 candidates)
23:26:41:alg:Debug:l18: no disproved candidates -- break
23:26:41:alg:Debug:l29: got 1 eqts, 0 new inps
23:26:41:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:26:41:alg:Debug:l22: got 1 eqts, 0 new inps
23:26:41:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:26:41:alg:Debug:l18: got 1 eqts, 0 new inps
23:26:41:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:26:41:alg:Info:3 invs:
l29: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:26:41:alg:Info:gen ieqs at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:26:41:alg:Info:3 locs: check upperbounds for 150 terms
23:26:41:miscs:Debug:workloads 'prove' 19: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6]
23:27:3:alg:Info:3 locs: compute upperbounds for 89 terms
23:27:3:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 13]
23:27:3:alg:Debug:l22: compute ub for '-u + v', start w/ min -2, maxV 10)
23:27:19:alg:Debug:got -u + v <= -2
23:27:19:alg:Debug:l22: compute ub for '-r', start w/ min 9, maxV 10)
23:27:22:alg:Debug:got -r <= 9
23:27:22:alg:Debug:l22: compute ub for 'r - v', start w/ min 9, maxV 10)
23:27:25:alg:Debug:got r - v <= 9
23:27:25:alg:Debug:l22: compute ub for '-R + v', start w/ min 9, maxV 10)
23:27:28:alg:Debug:got -R + v <= 9
23:27:3:alg:Debug:l29: compute ub for 'r - v', start w/ min 8, maxV 10)
23:27:9:alg:Debug:got r - v <= 8
23:27:9:alg:Debug:l29: compute ub for '-R + v', start w/ min 9, maxV 10)
23:27:12:alg:Debug:got -R + v <= 9
23:27:12:alg:Debug:l29: compute ub for '-R', start w/ min -3, maxV 10)
23:27:28:alg:Debug:got -R <= -2
23:27:28:alg:Debug:l29: compute ub for 'R - v', start w/ min 9, maxV 10)
23:27:31:alg:Debug:got R - v <= 9
23:27:3:alg:Debug:l29: compute ub for '-A - v', start w/ min -10, maxV 10)
23:27:15:alg:Debug:got -A - v <= -6
23:27:16:alg:Debug:l29: compute ub for '-R + r', start w/ min 9, maxV 10)
23:27:19:alg:Debug:got -R + r <= 9
23:27:19:alg:Debug:l22: compute ub for '-A + u', start w/ min 2, maxV 10)
23:27:31:alg:Debug:got -A + u <= 2
23:27:32:alg:Debug:l22: compute ub for '-R - r', start w/ min 9, maxV 10)
23:27:35:alg:Debug:got -R - r <= 9
23:27:3:alg:Debug:l29: compute ub for 'r', start w/ min 9, maxV 10)
23:27:6:alg:Debug:l29: compute ub for 'R', start w/ min 8, maxV 10)
23:27:12:alg:Debug:got R <= 8
23:27:12:alg:Debug:l29: compute ub for '-A - R', start w/ min -8, maxV 10)
23:27:25:alg:Debug:got -A - R <= -5
23:27:25:alg:Debug:l29: compute ub for '-A - r', start w/ min -5, maxV 10)
23:27:37:alg:Debug:got -A - r <= -3
23:27:3:alg:Debug:l29: compute ub for 'A - u', start w/ min 8, maxV 10)
23:27:9:alg:Debug:got A - u <= 8
23:27:9:alg:Debug:l29: compute ub for '-R - r', start w/ min 9, maxV 10)
23:27:12:alg:Debug:got -R - r <= 9
23:27:12:alg:Debug:l29: compute ub for '-u + v', start w/ min -2, maxV 10)
23:27:28:alg:Debug:got -u + v <= -2
23:27:28:alg:Debug:l29: compute ub for '-A', start w/ min -5, maxV 10)
23:27:41:alg:Debug:got -A <= -3
23:27:3:alg:Debug:l22: compute ub for '-r - u', start w/ min -5, maxV 10)
23:27:19:alg:Debug:got -r - u <= -5
23:27:19:alg:Debug:l22: compute ub for '-R - u', start w/ min -10, maxV 10)
23:27:31:alg:Debug:got -R - u <= -7
23:27:31:alg:Debug:l22: compute ub for 'r', start w/ min 9, maxV 10)
23:27:34:alg:Debug:l22: compute ub for 'R', start w/ min 8, maxV 10)
23:27:41:alg:Debug:got R <= 8
23:27:3:alg:Debug:l29: compute ub for '-A + u', start w/ min 2, maxV 10)
23:27:15:alg:Debug:got -A + u <= 2
23:27:16:alg:Debug:l29: compute ub for '-u', start w/ min -7, maxV 10)
23:27:31:alg:Debug:got -u <= -5
23:27:31:alg:Debug:l29: compute ub for 'u - v', start w/ min 8, maxV 10)
23:27:38:alg:Debug:got u - v <= 8
23:27:38:alg:Debug:l29: compute ub for '-r', start w/ min 9, maxV 10)
23:27:41:alg:Debug:got -r <= 9
23:27:3:alg:Debug:l18: compute ub for 'A - u', start w/ min 8, maxV 10)
23:27:9:alg:Debug:got A - u <= 8
23:27:9:alg:Debug:l18: compute ub for '-R - r', start w/ min -3, maxV 10)
23:27:22:alg:Debug:got -R - r <= -1
23:27:22:alg:Debug:l18: compute ub for '-u + v', start w/ min -2, maxV 10)
23:27:37:alg:Debug:got -u + v <= -2
23:27:37:alg:Debug:l18: compute ub for '-A', start w/ min -5, maxV 10)
23:27:46:alg:Debug:got -A <= -1
23:27:3:alg:Debug:l18: compute ub for '-A + u', start w/ min 2, maxV 10)
23:27:15:alg:Debug:got -A + u <= 2
23:27:15:alg:Debug:l18: compute ub for '-u', start w/ min -7, maxV 10)
23:27:28:alg:Debug:got -u <= -3
23:27:28:alg:Debug:l18: compute ub for 'u - v', start w/ min 8, maxV 10)
23:27:30:alg:Debug:l18: compute ub for '-r', start w/ min 0, maxV 10)
23:27:46:alg:Debug:got -r <= 0
23:27:3:alg:Debug:l22: compute ub for 'u - v', start w/ min 8, maxV 10)
23:27:5:alg:Debug:l22: compute ub for '-A', start w/ min -5, maxV 10)
23:27:18:alg:Debug:got -A <= -3
23:27:18:alg:Debug:l22: compute ub for '-A + v', start w/ min 0, maxV 10)
23:27:33:alg:Debug:got -A + v <= 0
23:27:33:alg:Debug:l22: compute ub for '-v', start w/ min -1, maxV 10)
23:27:47:alg:Debug:got -v <= -1
23:27:3:alg:Debug:l22: compute ub for 'R - u', start w/ min -4, maxV 10)
23:27:18:alg:Debug:got R - u <= -3
23:27:18:alg:Debug:l22: compute ub for 'r - u', start w/ min -3, maxV 10)
23:27:34:alg:Debug:got r - u <= -3
23:27:34:alg:Debug:l22: compute ub for '-A - v', start w/ min -6, maxV 10)
23:27:45:alg:Debug:got -A - v <= -4
23:27:45:alg:Debug:l22: compute ub for '-R + r', start w/ min 9, maxV 10)
23:27:3:alg:Debug:l22: compute ub for '-A - R', start w/ min -8, maxV 10)
23:27:15:alg:Debug:got -A - R <= -5
23:27:16:alg:Debug:l22: compute ub for '-A - r', start w/ min -5, maxV 10)
23:27:28:alg:Debug:got -A - r <= -3
23:27:28:alg:Debug:l22: compute ub for 'A - u', start w/ min 8, maxV 10)
23:27:34:alg:Debug:got A - u <= 8
23:27:34:alg:Debug:l22: compute ub for '-u', start w/ min -7, maxV 10)
23:27:49:alg:Debug:got -u <= -5
23:27:3:alg:Debug:l18: compute ub for '-R - u', start w/ min -10, maxV 10)
23:27:18:alg:Debug:got -R - u <= -4
23:27:19:alg:Debug:l18: compute ub for 'R', start w/ min 8, maxV 10)
23:27:25:alg:Debug:got R <= 8
23:27:25:alg:Debug:l18: compute ub for '-A - R', start w/ min -8, maxV 10)
23:27:40:alg:Debug:got -A - R <= -2
23:27:41:alg:Debug:l18: compute ub for '-A - r', start w/ min -5, maxV 10)
23:27:49:alg:Debug:got -A - r <= -1
23:27:3:alg:Debug:l18: compute ub for '-A + v', start w/ min 0, maxV 10)
23:27:19:alg:Debug:got -A + v <= 0
23:27:19:alg:Debug:l18: compute ub for '-v', start w/ min -1, maxV 10)
23:27:34:alg:Debug:got -v <= -1
23:27:34:alg:Debug:l18: compute ub for '-r - u', start w/ min -7, maxV 10)
23:27:47:alg:Debug:got -r - u <= -3
23:27:47:alg:Debug:l18: compute ub for '-R + r', start w/ min 9, maxV 10)
23:27:3:alg:Debug:l22: compute ub for '-R', start w/ min -3, maxV 10)
23:27:18:alg:Debug:got -R <= -2
23:27:18:alg:Debug:l22: compute ub for 'R - v', start w/ min 9, maxV 10)
23:27:21:alg:Debug:got R - v <= 9
23:27:21:alg:Debug:l22: compute ub for '-R - v', start w/ min -4, maxV 10)
23:27:36:alg:Debug:got -R - v <= -3
23:27:36:alg:Debug:l22: compute ub for '-r - v', start w/ min -2, maxV 10)
23:27:52:alg:Debug:got -r - v <= -2
23:27:3:alg:Debug:l22: compute ub for '-u - v', start w/ min -8, maxV 10)
23:27:19:alg:Debug:got -u - v <= -6
23:27:19:alg:Debug:l22: compute ub for '-A - u', start w/ min -10, maxV 10)
23:27:34:alg:Debug:got -A - u <= -8
23:27:34:alg:Debug:l22: compute ub for '-A + r', start w/ min -1, maxV 10)
23:27:50:alg:Debug:got -A + r <= -1
23:27:50:alg:Debug:l22: compute ub for '-A + R', start w/ min -2, maxV 10)
23:27:59:alg:Debug:got -A + R <= -1
23:27:3:alg:Debug:l29: compute ub for '-A + v', start w/ min 0, maxV 10)
23:27:18:alg:Debug:got -A + v <= 0
23:27:19:alg:Debug:l29: compute ub for '-v', start w/ min -3, maxV 10)
23:27:34:alg:Debug:got -v <= -3
23:27:34:alg:Debug:l29: compute ub for '-r - u', start w/ min -5, maxV 10)
23:27:50:alg:Debug:got -r - u <= -5
23:27:50:alg:Debug:l29: compute ub for '-R - u', start w/ min -10, maxV 10)
23:28:0:alg:Debug:got -R - u <= -7
23:27:3:alg:Debug:l29: compute ub for '-R - v', start w/ min -7, maxV 10)
23:27:18:alg:Debug:got -R - v <= -5
23:27:19:alg:Debug:l29: compute ub for '-r - v', start w/ min -3, maxV 10)
23:27:34:alg:Debug:got -r - v <= -3
23:27:34:alg:Debug:l29: compute ub for '-u - v', start w/ min -10, maxV 10)
23:27:50:alg:Debug:got -u - v <= -8
23:27:50:alg:Debug:l29: compute ub for '-A - u', start w/ min -10, maxV 10)
23:28:1:alg:Debug:got -A - u <= -8
23:27:3:alg:Debug:l29: compute ub for '-A + r', start w/ min -2, maxV 10)
23:27:19:alg:Debug:got -A + r <= -2
23:27:19:alg:Debug:l29: compute ub for '-A + R', start w/ min -2, maxV 10)
23:27:34:alg:Debug:got -A + R <= -1
23:27:34:alg:Debug:l29: compute ub for 'R - u', start w/ min -4, maxV 10)
23:27:49:alg:Debug:got R - u <= -3
23:27:49:alg:Debug:l29: compute ub for 'r - u', start w/ min -3, maxV 10)
23:28:2:alg:Debug:got r - u <= -3
23:27:3:alg:Debug:l18: compute ub for 'r - v', start w/ min 9, maxV 10)
23:27:6:alg:Debug:got r - v <= 9
23:27:6:alg:Debug:l18: compute ub for 'R - v', start w/ min 9, maxV 10)
23:27:9:alg:Debug:got R - v <= 9
23:27:9:alg:Debug:l18: compute ub for '-R', start w/ min -3, maxV 10)
23:27:21:alg:Debug:got -R <= -1
23:27:21:alg:Debug:l18: compute ub for '-R - v', start w/ min -4, maxV 10)
23:27:33:alg:Debug:got -R - v <= -2
23:27:33:alg:Debug:l18: compute ub for '-r - v', start w/ min -1, maxV 10)
23:27:48:alg:Debug:got -r - v <= -1
23:27:48:alg:Debug:l18: compute ub for '-u - v', start w/ min -8, maxV 10)
23:27:57:alg:Debug:got -u - v <= -4
23:27:58:alg:Debug:l18: compute ub for '-A - u', start w/ min -10, maxV 10)
23:28:8:alg:Debug:got -A - u <= -4
23:28:9:alg:Debug:l18: compute ub for '-A + r', start w/ min -1, maxV 10)
23:28:21:alg:Debug:got -A + r <= -1
23:28:21:alg:Debug:l18: compute ub for '-A + R', start w/ min -2, maxV 10)
23:28:28:alg:Debug:got -A + R <= 0
23:28:28:alg:Debug:l18: compute ub for 'R - u', start w/ min -4, maxV 10)
23:28:36:alg:Debug:got R - u <= -2
23:28:36:alg:Debug:l18: compute ub for 'r - u', start w/ min -3, maxV 10)
23:28:47:alg:Debug:got r - u <= -3
23:28:47:alg:Debug:l18: compute ub for '-A - v', start w/ min -6, maxV 10)
23:28:53:alg:Debug:got -A - v <= -2
23:28:53:alg:Debug:l18: compute ub for 'R - r', start w/ min 9, maxV 10)
23:28:56:alg:Debug:got R - r <= 9
23:28:56:alg:Info:86 invs:
l29: -r <= 9, -A <= -3, u - v <= 8, -u + v <= -2, -u <= -5, -A + u <= 2, R <= 8, -A - v <= -6, -R <= -2, -R + r <= 9, -A - r <= -3, -A - R <= -5, -R + v <= 9, -R - r <= 9, A - u <= 8, R - v <= 9, r - v <= 8, -A + v <= 0, -v <= -3, -r - u <= -5, -R - u <= -7, -R - v <= -5, -r - v <= -3, -u - v <= -8, -A - u <= -8, -A + r <= -2, -A + R <= -1, R - u <= -3, r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: r - v <= 9, -R - u <= -7, -r - u <= -5, R <= 8, -A + u <= 2, -R + v <= 9, -R - r <= 9, -r <= 9, -A - u <= -8, -A + r <= -1, -A + R <= -1, -u - v <= -6, -A + v <= 0, -A - v <= -4, A - u <= 8, -r - v <= -2, -u <= -5, r - u <= -3, -A <= -3, -v <= -1, -R <= -2, -A - R <= -5, -R - v <= -3, R - u <= -3, R - v <= 9, -A - r <= -3, -u + v <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: r - v <= 9, R - v <= 9, -R <= -1, -R - v <= -2, -r - v <= -1, -u - v <= -4, -A - u <= -4, -A + r <= -1, -A + R <= 0, R - u <= -2, r - u <= -3, -A - v <= -2, R - r <= 9, -A <= -1, -u + v <= -2, -A + u <= 2, -R - r <= -1, -u <= -3, -A + v <= 0, A - u <= 8, -v <= -1, -r - u <= -3, -A - R <= -2, -R - u <= -4, -r <= 0, -A - r <= -1, R <= 8, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:28:56:alg:Info:test 86 invs on all 1105 traces
23:28:56:ds:Warn:l29: -R - r <= 9 disproved
23:28:56:ds:Warn:l29: R <= 8 disproved
23:28:56:ds:Warn:l29: u - v <= 8 disproved
23:28:56:ds:Warn:l29: A - u <= 8 disproved
23:28:56:ds:Warn:l29: -R + v <= 9 disproved
23:28:56:ds:Warn:l29: R - v <= 9 disproved
23:28:56:ds:Warn:l29: r - v <= 8 disproved
23:28:56:ds:Warn:l29: -r <= 9 disproved
23:28:56:ds:Warn:l29: -R + r <= 9 disproved
23:28:56:ds:Warn:l22: -R - r <= 9 disproved
23:28:56:ds:Warn:l22: -R + v <= 9 disproved
23:28:56:ds:Warn:l22: R <= 8 disproved
23:28:56:ds:Warn:l22: A - u <= 8 disproved
23:28:56:ds:Warn:l22: R - v <= 9 disproved
23:28:56:ds:Warn:l22: -r <= 9 disproved
23:28:56:ds:Warn:l22: r - v <= 9 disproved
23:28:57:ds:Warn:l18: R <= 8 disproved
23:28:57:ds:Warn:l18: A - u <= 8 disproved
23:28:57:ds:Warn:l18: R - v <= 9 disproved
23:28:57:ds:Warn:l18: r - v <= 9 disproved
23:28:57:ds:Warn:l18: R - r <= 9 disproved
23:28:57:alg:Info:find uniq invs
23:28:57:alg:Info:65 invs:
l29: -A <= -3, -u + v <= -2, -u <= -5, -A + u <= 2, -A - v <= -6, -R <= -2, -A - r <= -3, -A - R <= -5, -A + v <= 0, -v <= -3, -r - u <= -5, -R - u <= -7, -R - v <= -5, -r - v <= -3, -u - v <= -8, -A - u <= -8, -A + r <= -2, -A + R <= -1, R - u <= -3, r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: -R - u <= -7, -r - u <= -5, -A + u <= 2, -A - u <= -8, -A + r <= -1, -A + R <= -1, -u - v <= -6, -A + v <= 0, -A - v <= -4, -r - v <= -2, -u <= -5, r - u <= -3, -A <= -3, -v <= -1, -R <= -2, -A - R <= -5, -R - v <= -3, R - u <= -3, -A - r <= -3, -u + v <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: -R <= -1, -R - v <= -2, -r - v <= -1, -u - v <= -4, -A - u <= -4, -A + r <= -1, -A + R <= 0, R - u <= -2, r - u <= -3, -A - v <= -2, -A <= -1, -u + v <= -2, -A + u <= 2, -R - r <= -1, -u <= -3, -A + v <= 0, -v <= -1, -r - u <= -3, -A - R <= -2, -R - u <= -4, -r <= 0, -A - r <= -1, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:28:57:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
23:28:58:alg:Info:removed 40 redundant invs
23:28:58:alg:Info:got 25 invs, 20 inps (test 51): 
l29: -A + r <= -2, R - u <= -3, -R <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -u + v <= -2, -A + u <= 2, -v <= -3, r - u <= -3, -r - v <= -3
l22: -v <= -1, -r - v <= -2, R - u <= -3, -A + u <= 2, -r - u <= -5, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, r - u <= -3, -u + v <= -2, -R <= -2
l18: r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -R <= -1, -A + u <= 2, -v <= -1, -r <= 0, R - u <= -2
23:28:58:alg:Info:*done* prog programs/nla/fermat1.c, invs 25, time 171.27667594 s
23:28:58:alg:Debug:rm -rf /var/tmp/DIG2_KLWLMt
23:28:59:alg:Debug:src: /var/tmp/DIG2_9f7pHA/fermat1.c
23:28:59:alg:Info:analyze programs/nla/fermat1.c
23:28:59:alg:Info:set seed to: 1.0 (test 83)
23:28:59:miscs:Info:autodeg 4
23:28:59:alg:Info:check reachability
23:28:59:alg:Debug:use RT to generate traces for l29,l22,l18
23:28:59:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:29:0:alg:Info:gen eqts at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:29:1:alg:Debug:l18: need more traces (174 eqts, need >= 189)
23:29:3:alg:Debug:obtain 3 new traces
23:29:3:alg:Debug:l18: need more traces (177 eqts, need >= 189)
23:29:5:alg:Debug:obtain 1 new traces
23:29:5:alg:Debug:l18: need more traces (178 eqts, need >= 189)
23:29:7:alg:Debug:obtain 4 new traces
23:29:7:alg:Debug:l18: need more traces (182 eqts, need >= 189)
23:29:9:alg:Debug:obtain 33 new traces
23:29:9:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
23:29:9:alg:Debug:l29: infer using 189 exprs
23:29:9:miscs:Debug:solve 126 uks using 189 eqts
23:29:9:alg:Debug:l22: infer using 189 exprs
23:29:9:miscs:Debug:solve 126 uks using 189 eqts
23:29:27:alg:Debug:l29: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:29:27:alg:Debug:l29: check 1 unchecked (1 candidates)
23:29:30:alg:Debug:l29: no disproved candidates -- break
23:29:27:alg:Debug:l22: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:29:27:alg:Debug:l22: check 1 unchecked (1 candidates)
23:29:30:alg:Debug:l22: no disproved candidates -- break
23:29:9:alg:Debug:l18: infer using 189 exprs
23:29:9:miscs:Debug:solve 126 uks using 189 eqts
23:29:36:alg:Debug:l18: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:29:36:alg:Debug:l18: check 1 unchecked (1 candidates)
23:29:40:alg:Debug:l18: no disproved candidates -- break
23:29:40:alg:Debug:l29: got 1 eqts, 0 new inps
23:29:40:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:29:40:alg:Debug:l22: got 1 eqts, 0 new inps
23:29:40:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:29:40:alg:Debug:l18: got 1 eqts, 0 new inps
23:29:40:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:29:40:alg:Info:3 invs:
l29: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:29:40:alg:Info:gen ieqs at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:29:40:alg:Info:3 locs: check upperbounds for 150 terms
23:29:40:miscs:Debug:workloads 'prove' 19: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6]
23:30:2:alg:Info:3 locs: compute upperbounds for 89 terms
23:30:2:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 13]
23:30:2:alg:Debug:l22: compute ub for 'R', start w/ min 9, maxV 10)
23:30:5:alg:Debug:got R <= 9
23:30:5:alg:Debug:l22: compute ub for 'r', start w/ min 9, maxV 10)
23:30:8:alg:Debug:l22: compute ub for 'A - u', start w/ min 8, maxV 10)
23:30:15:alg:Debug:got A - u <= 8
23:30:15:alg:Debug:l22: compute ub for '-r - v', start w/ min -2, maxV 10)
23:30:30:alg:Debug:got -r - v <= -2
23:30:2:alg:Debug:l22: compute ub for '-A - v', start w/ min -4, maxV 10)
23:30:18:alg:Debug:got -A - v <= -4
23:30:18:alg:Debug:l22: compute ub for 'u - v', start w/ min 8, maxV 10)
23:30:20:alg:Debug:l22: compute ub for '-A + u', start w/ min 2, maxV 10)
23:30:32:alg:Debug:got -A + u <= 2
23:30:32:alg:Debug:l22: compute ub for '-R + r', start w/ min 9, maxV 10)
23:30:35:alg:Debug:got -R + r <= 9
23:30:2:alg:Debug:l29: compute ub for '-A + u', start w/ min 2, maxV 10)
23:30:14:alg:Debug:got -A + u <= 2
23:30:15:alg:Debug:l29: compute ub for '-R + r', start w/ min 9, maxV 10)
23:30:18:alg:Debug:got -R + r <= 9
23:30:18:alg:Debug:l22: compute ub for '-R - r', start w/ min 9, maxV 10)
23:30:21:alg:Debug:got -R - r <= 9
23:30:21:alg:Debug:l22: compute ub for '-u + v', start w/ min -2, maxV 10)
23:30:37:alg:Debug:got -u + v <= -2
23:30:2:alg:Debug:l29: compute ub for '-u', start w/ min -5, maxV 10)
23:30:18:alg:Debug:got -u <= -5
23:30:18:alg:Debug:l29: compute ub for '-r', start w/ min 9, maxV 10)
23:30:21:alg:Debug:got -r <= 9
23:30:21:alg:Debug:l29: compute ub for '-R + v', start w/ min 9, maxV 10)
23:30:24:alg:Debug:got -R + v <= 9
23:30:24:alg:Debug:l29: compute ub for '-R', start w/ min -2, maxV 10)
23:30:40:alg:Debug:got -R <= -2
23:30:2:alg:Debug:l29: compute ub for '-A + v', start w/ min 0, maxV 10)
23:30:18:alg:Debug:got -A + v <= 0
23:30:18:alg:Debug:l29: compute ub for '-r - u', start w/ min -5, maxV 10)
23:30:33:alg:Debug:got -r - u <= -5
23:30:33:alg:Debug:l29: compute ub for 'R', start w/ min 9, maxV 10)
23:30:37:alg:Debug:got R <= 9
23:30:37:alg:Debug:l29: compute ub for 'r', start w/ min 9, maxV 10)
23:30:2:alg:Debug:l22: compute ub for 'R - v', start w/ min 9, maxV 10)
23:30:5:alg:Debug:got R - v <= 9
23:30:5:alg:Debug:l22: compute ub for '-R', start w/ min -2, maxV 10)
23:30:21:alg:Debug:got -R <= -2
23:30:21:alg:Debug:l22: compute ub for '-R - u', start w/ min -7, maxV 10)
23:30:40:alg:Debug:got -R - u <= -7
23:30:40:alg:Debug:l22: compute ub for '-R + v', start w/ min 9, maxV 10)
23:30:2:alg:Debug:l18: compute ub for '-A + v', start w/ min 0, maxV 10)
23:30:18:alg:Debug:got -A + v <= 0
23:30:18:alg:Debug:l18: compute ub for '-r - u', start w/ min -3, maxV 10)
23:30:33:alg:Debug:got -r - u <= -3
23:30:33:alg:Debug:l18: compute ub for 'R', start w/ min 9, maxV 10)
23:30:36:alg:Debug:got R <= 9
23:30:37:alg:Debug:l18: compute ub for '-A + u', start w/ min 2, maxV 10)
23:30:49:alg:Debug:got -A + u <= 2
23:30:2:alg:Debug:l18: compute ub for '-r', start w/ min 0, maxV 10)
23:30:18:alg:Debug:got -r <= 0
23:30:18:alg:Debug:l18: compute ub for 'R - v', start w/ min 9, maxV 10)
23:30:21:alg:Debug:got R - v <= 9
23:30:21:alg:Debug:l18: compute ub for '-R', start w/ min -1, maxV 10)
23:30:36:alg:Debug:got -R <= -1
23:30:37:alg:Debug:l18: compute ub for '-R - u', start w/ min -4, maxV 10)
23:30:51:alg:Debug:got -R - u <= -4
23:30:2:alg:Debug:l22: compute ub for '-A - r', start w/ min -3, maxV 10)
23:30:18:alg:Debug:got -A - r <= -3
23:30:18:alg:Debug:l22: compute ub for '-A + R', start w/ min -1, maxV 10)
23:30:33:alg:Debug:got -A + R <= -1
23:30:33:alg:Debug:l22: compute ub for '-u', start w/ min -5, maxV 10)
23:30:48:alg:Debug:got -u <= -5
23:30:48:alg:Debug:l22: compute ub for '-r', start w/ min 9, maxV 10)
23:30:52:alg:Debug:got -r <= 9
23:30:2:alg:Debug:l29: compute ub for '-R - r', start w/ min 9, maxV 10)
23:30:5:alg:Debug:got -R - r <= 9
23:30:5:alg:Debug:l29: compute ub for '-u + v', start w/ min -2, maxV 10)
23:30:21:alg:Debug:got -u + v <= -2
23:30:21:alg:Debug:l29: compute ub for '-v', start w/ min -3, maxV 10)
23:30:36:alg:Debug:got -v <= -3
23:30:37:alg:Debug:l29: compute ub for '-A', start w/ min -3, maxV 10)
23:30:52:alg:Debug:got -A <= -3
23:30:2:alg:Debug:l29: compute ub for 'A - u', start w/ min 8, maxV 10)
23:30:8:alg:Debug:got A - u <= 8
23:30:8:alg:Debug:l29: compute ub for '-r - v', start w/ min -3, maxV 10)
23:30:24:alg:Debug:got -r - v <= -3
23:30:24:alg:Debug:l29: compute ub for '-A - r', start w/ min -3, maxV 10)
23:30:40:alg:Debug:got -A - r <= -3
23:30:40:alg:Debug:l29: compute ub for '-A + R', start w/ min -1, maxV 10)
23:30:53:alg:Debug:got -A + R <= -1
23:30:2:alg:Debug:l29: compute ub for '-R - u', start w/ min -7, maxV 10)
23:30:21:alg:Debug:got -R - u <= -7
23:30:21:alg:Debug:l29: compute ub for 'R - v', start w/ min 9, maxV 10)
23:30:24:alg:Debug:got R - v <= 9
23:30:24:alg:Debug:l29: compute ub for 'R - u', start w/ min -3, maxV 10)
23:30:40:alg:Debug:got R - u <= -3
23:30:40:alg:Debug:l29: compute ub for '-R - v', start w/ min -5, maxV 10)
23:30:54:alg:Debug:got -R - v <= -5
23:30:2:alg:Debug:l22: compute ub for '-A + r', start w/ min -1, maxV 10)
23:30:18:alg:Debug:got -A + r <= -1
23:30:18:alg:Debug:l22: compute ub for 'r - v', start w/ min 9, maxV 10)
23:30:21:alg:Debug:got r - v <= 9
23:30:21:alg:Debug:l22: compute ub for '-A - u', start w/ min -8, maxV 10)
23:30:40:alg:Debug:got -A - u <= -8
23:30:40:alg:Debug:l22: compute ub for 'r - u', start w/ min -3, maxV 10)
23:30:55:alg:Debug:got r - u <= -3
23:30:2:alg:Debug:l29: compute ub for '-A - u', start w/ min -8, maxV 10)
23:30:21:alg:Debug:got -A - u <= -8
23:30:21:alg:Debug:l29: compute ub for 'r - u', start w/ min -3, maxV 10)
23:30:36:alg:Debug:got r - u <= -3
23:30:36:alg:Debug:l29: compute ub for '-A - v', start w/ min -6, maxV 10)
23:30:52:alg:Debug:got -A - v <= -6
23:30:52:alg:Debug:l29: compute ub for 'u - v', start w/ min 8, maxV 10)
23:30:57:alg:Debug:got u - v <= 8
23:30:2:alg:Debug:l29: compute ub for '-A - R', start w/ min -5, maxV 10)
23:30:17:alg:Debug:got -A - R <= -5
23:30:18:alg:Debug:l29: compute ub for '-u - v', start w/ min -8, maxV 10)
23:30:36:alg:Debug:got -u - v <= -8
23:30:36:alg:Debug:l29: compute ub for '-A + r', start w/ min -2, maxV 10)
23:30:52:alg:Debug:got -A + r <= -2
23:30:52:alg:Debug:l29: compute ub for 'r - v', start w/ min 8, maxV 10)
23:30:58:alg:Debug:got r - v <= 8
23:30:2:alg:Debug:l18: compute ub for '-R - r', start w/ min -1, maxV 10)
23:30:18:alg:Debug:got -R - r <= -1
23:30:18:alg:Debug:l18: compute ub for '-u + v', start w/ min -2, maxV 10)
23:30:33:alg:Debug:got -u + v <= -2
23:30:33:alg:Debug:l18: compute ub for '-v', start w/ min -1, maxV 10)
23:30:47:alg:Debug:got -v <= -1
23:30:47:alg:Debug:l18: compute ub for '-A', start w/ min -1, maxV 10)
23:30:58:alg:Debug:got -A <= -1
23:30:2:alg:Debug:l18: compute ub for '-r - v', start w/ min -1, maxV 10)
23:30:18:alg:Debug:got -r - v <= -1
23:30:18:alg:Debug:l18: compute ub for '-A - r', start w/ min -1, maxV 10)
23:30:33:alg:Debug:got -A - r <= -1
23:30:33:alg:Debug:l18: compute ub for '-A + R', start w/ min 0, maxV 10)
23:30:48:alg:Debug:got -A + R <= 0
23:30:48:alg:Debug:l18: compute ub for '-u', start w/ min -3, maxV 10)
23:31:0:alg:Debug:got -u <= -3
23:30:2:alg:Debug:l22: compute ub for 'R - u', start w/ min -3, maxV 10)
23:30:18:alg:Debug:got R - u <= -3
23:30:18:alg:Debug:l22: compute ub for '-R - v', start w/ min -3, maxV 10)
23:30:33:alg:Debug:got -R - v <= -3
23:30:33:alg:Debug:l22: compute ub for '-A - R', start w/ min -5, maxV 10)
23:30:48:alg:Debug:got -A - R <= -5
23:30:48:alg:Debug:l22: compute ub for '-u - v', start w/ min -6, maxV 10)
23:31:1:alg:Debug:got -u - v <= -6
23:30:2:alg:Debug:l22: compute ub for '-v', start w/ min -1, maxV 10)
23:30:18:alg:Debug:got -v <= -1
23:30:18:alg:Debug:l22: compute ub for '-A', start w/ min -3, maxV 10)
23:30:33:alg:Debug:got -A <= -3
23:30:34:alg:Debug:l22: compute ub for '-A + v', start w/ min 0, maxV 10)
23:30:49:alg:Debug:got -A + v <= 0
23:30:49:alg:Debug:l22: compute ub for '-r - u', start w/ min -5, maxV 10)
23:31:4:alg:Debug:got -r - u <= -5
23:30:2:alg:Debug:l18: compute ub for 'R - u', start w/ min -2, maxV 10)
23:30:18:alg:Debug:got R - u <= -2
23:30:18:alg:Debug:l18: compute ub for '-R - v', start w/ min -2, maxV 10)
23:30:33:alg:Debug:got -R - v <= -2
23:30:33:alg:Debug:l18: compute ub for '-A - R', start w/ min -2, maxV 10)
23:30:49:alg:Debug:got -A - R <= -2
23:30:49:alg:Debug:l18: compute ub for '-u - v', start w/ min -4, maxV 10)
23:31:1:alg:Debug:got -u - v <= -4
23:31:1:alg:Debug:l18: compute ub for '-A + r', start w/ min -1, maxV 10)
23:31:14:alg:Debug:got -A + r <= -1
23:31:14:alg:Debug:l18: compute ub for 'r - v', start w/ min 9, maxV 10)
23:31:16:alg:Debug:got r - v <= 9
23:31:16:alg:Debug:l18: compute ub for '-A - u', start w/ min -4, maxV 10)
23:31:28:alg:Debug:got -A - u <= -4
23:31:28:alg:Debug:l18: compute ub for 'r - u', start w/ min -3, maxV 10)
23:31:40:alg:Debug:got r - u <= -3
23:31:40:alg:Debug:l18: compute ub for '-A - v', start w/ min -2, maxV 10)
23:31:50:alg:Debug:got -A - v <= -2
23:31:50:alg:Debug:l18: compute ub for 'u - v', start w/ min 8, maxV 10)
23:31:51:alg:Debug:l18: compute ub for 'A - u', start w/ min 8, maxV 10)
23:31:56:alg:Debug:got A - u <= 8
23:31:56:alg:Debug:l18: compute ub for '-R + r', start w/ min 9, maxV 10)
23:31:58:alg:Debug:l18: compute ub for 'R - r', start w/ min 9, maxV 10)
23:32:1:alg:Debug:got R - r <= 9
23:32:1:alg:Info:86 invs:
l29: r - v <= 8, -A + r <= -2, -A - R <= -5, -u - v <= -8, u - v <= 8, R - v <= 9, R - u <= -3, A - u <= 8, -v <= -3, -A <= -3, -u + v <= -2, -R - v <= -5, -r - v <= -3, -A - u <= -8, -R - u <= -7, -A + R <= -1, -A - v <= -6, -R - r <= 9, -A - r <= -3, r - u <= -3, R <= 9, -A + u <= 2, -R + r <= 9, -A + v <= 0, -R <= -2, -R + v <= 9, -r <= 9, -u <= -5, -r - u <= -5, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: R - u <= -3, -R - v <= -3, -A - R <= -5, -u - v <= -6, -v <= -1, -A <= -3, -A + v <= 0, -r - u <= -5, -A + R <= -1, -A - r <= -3, -u <= -5, -A + r <= -1, r - u <= -3, -r <= 9, r - v <= 9, -A - u <= -8, -R - u <= -7, R <= 9, -R + r <= 9, R - v <= 9, -R <= -2, -u + v <= -2, A - u <= 8, -r - v <= -2, -A - v <= -4, -R - r <= 9, -A + u <= 2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: -u + v <= -2, -R - r <= -1, -v <= -1, -A <= -1, -r - v <= -1, -A - r <= -1, -A + R <= 0, -u <= -3, R - u <= -2, -R - v <= -2, -A - R <= -2, -u - v <= -4, -A + r <= -1, r - v <= 9, -A - u <= -4, r - u <= -3, -A - v <= -2, A - u <= 8, R - r <= 9, -R - u <= -4, -R <= -1, -r <= 0, R - v <= 9, -A + u <= 2, -A + v <= 0, R <= 9, -r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:1:alg:Info:test 86 invs on all 1166 traces
23:32:1:ds:Warn:l29: -R - r <= 9 disproved
23:32:1:ds:Warn:l29: R <= 9 disproved
23:32:1:ds:Warn:l29: A - u <= 8 disproved
23:32:1:ds:Warn:l29: -r <= 9 disproved
23:32:1:ds:Warn:l29: -R + r <= 9 disproved
23:32:1:ds:Warn:l29: r - v <= 8 disproved
23:32:1:ds:Warn:l29: u - v <= 8 disproved
23:32:1:ds:Warn:l29: -R + v <= 9 disproved
23:32:1:ds:Warn:l22: -R - r <= 9 disproved
23:32:2:ds:Warn:l22: R <= 9 disproved
23:32:2:ds:Warn:l22: A - u <= 8 disproved
23:32:2:ds:Warn:l22: R - v <= 9 disproved
23:32:2:ds:Warn:l22: -r <= 9 disproved
23:32:2:ds:Warn:l22: -R + r <= 9 disproved
23:32:2:ds:Warn:l22: r - v <= 9 disproved
23:32:2:ds:Warn:l18: R <= 9 disproved
23:32:2:ds:Warn:l18: A - u <= 8 disproved
23:32:2:ds:Warn:l18: R - v <= 9 disproved
23:32:2:ds:Warn:l18: r - v <= 9 disproved
23:32:2:ds:Warn:l18: R - r <= 9 disproved
23:32:2:alg:Info:find uniq invs
23:32:2:alg:Info:66 invs:
l29: -A + r <= -2, -A - R <= -5, -u - v <= -8, R - v <= 9, R - u <= -3, -v <= -3, -A <= -3, -u + v <= -2, -R - v <= -5, -r - v <= -3, -A - u <= -8, -R - u <= -7, -A + R <= -1, -A - v <= -6, -A - r <= -3, r - u <= -3, -A + u <= 2, -A + v <= 0, -R <= -2, -u <= -5, -r - u <= -5, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: R - u <= -3, -R - v <= -3, -A - R <= -5, -u - v <= -6, -v <= -1, -A <= -3, -A + v <= 0, -r - u <= -5, -A + R <= -1, -A - r <= -3, -u <= -5, -A + r <= -1, r - u <= -3, -A - u <= -8, -R - u <= -7, -R <= -2, -u + v <= -2, -r - v <= -2, -A - v <= -4, -A + u <= 2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: -u + v <= -2, -R - r <= -1, -v <= -1, -A <= -1, -r - v <= -1, -A - r <= -1, -A + R <= 0, -u <= -3, R - u <= -2, -R - v <= -2, -A - R <= -2, -u - v <= -4, -A + r <= -1, -A - u <= -4, r - u <= -3, -A - v <= -2, -R - u <= -4, -R <= -1, -r <= 0, -A + u <= 2, -A + v <= 0, -r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:2:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
23:32:3:alg:Info:removed 40 redundant invs
23:32:3:alg:Info:got 26 invs, 21 inps (test 60): 
l29: -R <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -r - v <= -3, R - v <= 9, -A + r <= -2, R - u <= -3, r - u <= -3, -A + u <= 2, -v <= -3, -u + v <= -2
l22: r - u <= -3, R - u <= -3, -R <= -2, -v <= -1, -u + v <= -2, -r - u <= -5, -A + u <= 2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -r - v <= -2
l18: -r <= 0, -v <= -1, r - u <= -3, -R <= -1, -A + u <= 2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, R - u <= -2
23:32:3:alg:Info:*done* prog programs/nla/fermat1.c, invs 26, time 184.037642002 s
23:32:3:alg:Debug:rm -rf /var/tmp/DIG2_9f7pHA
23:32:4:alg:Debug:src: /var/tmp/DIG2_zVeMe_/fermat1.c
23:32:4:alg:Info:analyze programs/nla/fermat1.c
23:32:4:alg:Info:set seed to: 2.0 (test 98)
23:32:4:miscs:Info:autodeg 4
23:32:4:alg:Info:check reachability
23:32:4:alg:Debug:use RT to generate traces for l29,l22,l18
23:32:4:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:32:5:alg:Info:gen eqts at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:32:6:alg:Debug:l18: need more traces (174 eqts, need >= 189)
23:32:9:alg:Debug:obtain 21 new traces
23:32:9:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
23:32:9:alg:Debug:l29: infer using 189 exprs
23:32:9:miscs:Debug:solve 126 uks using 189 eqts
23:32:9:alg:Debug:l22: infer using 189 exprs
23:32:9:miscs:Debug:solve 126 uks using 189 eqts
23:32:9:alg:Debug:l18: infer using 189 exprs
23:32:9:miscs:Debug:solve 126 uks using 189 eqts
23:32:26:alg:Debug:l29: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:32:26:alg:Debug:l29: check 1 unchecked (1 candidates)
23:32:29:alg:Debug:l29: no disproved candidates -- break
23:32:26:alg:Debug:l22: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:32:26:alg:Debug:l22: check 1 unchecked (1 candidates)
23:32:29:alg:Debug:l22: no disproved candidates -- break
23:32:27:alg:Debug:l18: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:32:27:alg:Debug:l18: check 1 unchecked (1 candidates)
23:32:30:alg:Debug:l18: no disproved candidates -- break
23:32:30:alg:Debug:l29: got 1 eqts, 0 new inps
23:32:30:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:30:alg:Debug:l22: got 1 eqts, 0 new inps
23:32:30:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:30:alg:Debug:l18: got 1 eqts, 0 new inps
23:32:30:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:30:alg:Info:3 invs:
l29: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:32:30:alg:Info:gen ieqs at 3 locs: l29 (int A, int R, int u, int v, int r); l22 (int A, int R, int u, int v, int r); l18 (int A, int R, int u, int v, int r)
23:32:30:alg:Info:3 locs: check upperbounds for 150 terms
23:32:30:miscs:Debug:workloads 'prove' 19: [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 6]
23:32:53:alg:Info:3 locs: compute upperbounds for 88 terms
23:32:53:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 12]
23:32:53:alg:Debug:l29: compute ub for 'u - v', start w/ min 8, maxV 10)
23:33:0:alg:Debug:got u - v <= 8
23:33:0:alg:Debug:l29: compute ub for '-R + r', start w/ min 9, maxV 10)
23:33:3:alg:Debug:got -R + r <= 9
23:33:3:alg:Debug:l22: compute ub for '-R - r', start w/ min 9, maxV 10)
23:33:6:alg:Debug:got -R - r <= 9
23:33:6:alg:Debug:l22: compute ub for 'R - v', start w/ min 9, maxV 10)
23:33:9:alg:Debug:got R - v <= 9
23:32:53:alg:Debug:l29: compute ub for '-A - v', start w/ min -10, maxV 10)
23:33:6:alg:Debug:got -A - v <= -6
23:33:6:alg:Debug:l29: compute ub for 'r', start w/ min 9, maxV 10)
23:33:9:alg:Debug:l29: compute ub for '-r', start w/ min 9, maxV 10)
23:33:12:alg:Debug:got -r <= 9
23:33:12:alg:Debug:l29: compute ub for 'R', start w/ min 8, maxV 10)
23:33:19:alg:Debug:got R <= 8
23:32:53:alg:Debug:l22: compute ub for 'r - v', start w/ min 9, maxV 10)
23:32:56:alg:Debug:got r - v <= 9
23:32:57:alg:Debug:l22: compute ub for 'R', start w/ min 8, maxV 10)
23:33:3:alg:Debug:got R <= 8
23:33:3:alg:Debug:l22: compute ub for '-A - R', start w/ min -8, maxV 10)
23:33:15:alg:Debug:got -A - R <= -5
23:33:15:alg:Debug:l22: compute ub for '-A - r', start w/ min -5, maxV 10)
23:33:28:alg:Debug:got -A - r <= -3
23:32:53:alg:Debug:l29: compute ub for '-R - r', start w/ min 9, maxV 10)
23:32:56:alg:Debug:got -R - r <= 9
23:32:56:alg:Debug:l29: compute ub for '-R + v', start w/ min 9, maxV 10)
23:33:0:alg:Debug:got -R + v <= 9
23:33:0:alg:Debug:l29: compute ub for '-A', start w/ min -5, maxV 10)
23:33:12:alg:Debug:got -A <= -3
23:33:12:alg:Debug:l29: compute ub for '-v', start w/ min -3, maxV 10)
23:33:28:alg:Debug:got -v <= -3
23:32:53:alg:Debug:l22: compute ub for '-u - v', start w/ min -8, maxV 10)
23:33:9:alg:Debug:got -u - v <= -6
23:33:9:alg:Debug:l22: compute ub for 'u - v', start w/ min 8, maxV 10)
23:33:11:alg:Debug:l22: compute ub for '-R + r', start w/ min 9, maxV 10)
23:33:14:alg:Debug:got -R + r <= 9
23:33:14:alg:Debug:l18: compute ub for '-R - r', start w/ min -1, maxV 10)
23:33:30:alg:Debug:got -R - r <= -1
23:32:53:alg:Debug:l18: compute ub for 'r - v', start w/ min 9, maxV 10)
23:32:56:alg:Debug:got r - v <= 9
23:32:56:alg:Debug:l18: compute ub for 'R', start w/ min 8, maxV 10)
23:33:3:alg:Debug:got R <= 8
23:33:3:alg:Debug:l18: compute ub for '-R', start w/ min -1, maxV 10)
23:33:18:alg:Debug:got -R <= -1
23:33:18:alg:Debug:l18: compute ub for '-A - R', start w/ min -2, maxV 10)
23:33:34:alg:Debug:got -A - R <= -2
23:32:53:alg:Debug:l29: compute ub for '-A - R', start w/ min -8, maxV 10)
23:33:6:alg:Debug:got -A - R <= -5
23:33:6:alg:Debug:l29: compute ub for '-A - r', start w/ min -5, maxV 10)
23:33:18:alg:Debug:got -A - r <= -3
23:33:18:alg:Debug:l29: compute ub for '-u', start w/ min -7, maxV 10)
23:33:34:alg:Debug:got -u <= -5
23:33:34:alg:Debug:l29: compute ub for 'r - v', start w/ min 9, maxV 10)
23:33:37:alg:Debug:got r - v <= 9
23:32:53:alg:Debug:l22: compute ub for '-A + u', start w/ min 2, maxV 10)
23:33:6:alg:Debug:got -A + u <= 2
23:33:6:alg:Debug:l22: compute ub for '-A - v', start w/ min -6, maxV 10)
23:33:19:alg:Debug:got -A - v <= -4
23:33:19:alg:Debug:l22: compute ub for '-v', start w/ min -1, maxV 10)
23:33:34:alg:Debug:got -v <= -1
23:33:34:alg:Debug:l22: compute ub for 'A - u', start w/ min 8, maxV 10)
23:33:40:alg:Debug:got A - u <= 8
23:32:53:alg:Debug:l22: compute ub for '-u', start w/ min -7, maxV 10)
23:33:9:alg:Debug:got -u <= -5
23:33:9:alg:Debug:l22: compute ub for '-r', start w/ min 9, maxV 10)
23:33:12:alg:Debug:got -r <= 9
23:33:12:alg:Debug:l22: compute ub for '-r - u', start w/ min -5, maxV 10)
23:33:28:alg:Debug:got -r - u <= -5
23:33:28:alg:Debug:l22: compute ub for '-R - u', start w/ min -10, maxV 10)
23:33:40:alg:Debug:got -R - u <= -7
23:32:53:alg:Debug:l29: compute ub for '-A + R', start w/ min -2, maxV 10)
23:33:9:alg:Debug:got -A + R <= -1
23:33:9:alg:Debug:l29: compute ub for '-A + v', start w/ min 0, maxV 10)
23:33:25:alg:Debug:got -A + v <= 0
23:33:25:alg:Debug:l29: compute ub for 'R - v', start w/ min 9, maxV 10)
23:33:28:alg:Debug:got R - v <= 9
23:33:28:alg:Debug:l29: compute ub for '-A + u', start w/ min 2, maxV 10)
23:33:40:alg:Debug:got -A + u <= 2
23:32:53:alg:Debug:l22: compute ub for '-A + v', start w/ min 0, maxV 10)
23:33:9:alg:Debug:got -A + v <= 0
23:33:9:alg:Debug:l22: compute ub for '-A - u', start w/ min -10, maxV 10)
23:33:25:alg:Debug:got -A - u <= -8
23:33:25:alg:Debug:l22: compute ub for '-u + v', start w/ min -2, maxV 10)
23:33:40:alg:Debug:got -u + v <= -2
23:33:40:alg:Debug:l22: compute ub for 'r', start w/ min 9, maxV 10)
23:32:53:alg:Debug:l18: compute ub for '-R - u', start w/ min -4, maxV 10)
23:33:9:alg:Debug:got -R - u <= -4
23:33:9:alg:Debug:l18: compute ub for 'R - v', start w/ min 9, maxV 10)
23:33:12:alg:Debug:got R - v <= 9
23:33:12:alg:Debug:l18: compute ub for '-R - v', start w/ min -2, maxV 10)
23:33:28:alg:Debug:got -R - v <= -2
23:33:28:alg:Debug:l18: compute ub for 'R - u', start w/ min -2, maxV 10)
23:33:42:alg:Debug:got R - u <= -2
23:32:53:alg:Debug:l29: compute ub for '-u + v', start w/ min -2, maxV 10)
23:33:9:alg:Debug:got -u + v <= -2
23:33:9:alg:Debug:l29: compute ub for '-A - u', start w/ min -10, maxV 10)
23:33:25:alg:Debug:got -A - u <= -8
23:33:25:alg:Debug:l29: compute ub for 'A - u', start w/ min 8, maxV 10)
23:33:31:alg:Debug:got A - u <= 8
23:33:31:alg:Debug:l29: compute ub for '-u - v', start w/ min -10, maxV 10)
23:33:46:alg:Debug:got -u - v <= -8
23:32:53:alg:Debug:l22: compute ub for '-r - v', start w/ min -2, maxV 10)
23:33:9:alg:Debug:got -r - v <= -2
23:33:9:alg:Debug:l22: compute ub for '-A + r', start w/ min -1, maxV 10)
23:33:25:alg:Debug:got -A + r <= -1
23:33:25:alg:Debug:l22: compute ub for '-A + R', start w/ min -2, maxV 10)
23:33:39:alg:Debug:got -A + R <= -1
23:33:40:alg:Debug:l22: compute ub for '-A', start w/ min -5, maxV 10)
23:33:48:alg:Debug:got -A <= -3
23:32:53:alg:Debug:l29: compute ub for '-r - u', start w/ min -5, maxV 10)
23:33:9:alg:Debug:got -r - u <= -5
23:33:9:alg:Debug:l29: compute ub for '-R - u', start w/ min -10, maxV 10)
23:33:21:alg:Debug:got -R - u <= -7
23:33:22:alg:Debug:l29: compute ub for '-R', start w/ min -3, maxV 10)
23:33:37:alg:Debug:got -R <= -2
23:33:37:alg:Debug:l29: compute ub for '-R - v', start w/ min -7, maxV 10)
23:33:49:alg:Debug:got -R - v <= -5
23:32:53:alg:Debug:l18: compute ub for '-A + u', start w/ min 2, maxV 10)
23:33:6:alg:Debug:got -A + u <= 2
23:33:6:alg:Debug:l18: compute ub for '-A', start w/ min -1, maxV 10)
23:33:21:alg:Debug:got -A <= -1
23:33:21:alg:Debug:l18: compute ub for '-v', start w/ min -1, maxV 10)
23:33:36:alg:Debug:got -v <= -1
23:33:36:alg:Debug:l18: compute ub for '-u + v', start w/ min -2, maxV 10)
23:33:49:alg:Debug:got -u + v <= -2
23:32:53:alg:Debug:l22: compute ub for '-R', start w/ min -3, maxV 10)
23:33:8:alg:Debug:got -R <= -2
23:33:8:alg:Debug:l22: compute ub for '-R - v', start w/ min -4, maxV 10)
23:33:24:alg:Debug:got -R - v <= -3
23:33:24:alg:Debug:l22: compute ub for 'R - u', start w/ min -4, maxV 10)
23:33:39:alg:Debug:got R - u <= -3
23:33:39:alg:Debug:l22: compute ub for 'r - u', start w/ min -3, maxV 10)
23:33:52:alg:Debug:got r - u <= -3
23:32:53:alg:Debug:l18: compute ub for '-A - r', start w/ min -1, maxV 10)
23:33:9:alg:Debug:got -A - r <= -1
23:33:9:alg:Debug:l18: compute ub for '-u', start w/ min -3, maxV 10)
23:33:25:alg:Debug:got -u <= -3
23:33:25:alg:Debug:l18: compute ub for '-r', start w/ min 0, maxV 10)
23:33:40:alg:Debug:got -r <= 0
23:33:40:alg:Debug:l18: compute ub for '-r - u', start w/ min -3, maxV 10)
23:33:53:alg:Debug:got -r - u <= -3
23:32:53:alg:Debug:l29: compute ub for 'R - u', start w/ min -4, maxV 10)
23:33:9:alg:Debug:got R - u <= -3
23:33:9:alg:Debug:l29: compute ub for 'r - u', start w/ min -3, maxV 10)
23:33:25:alg:Debug:got r - u <= -3
23:33:25:alg:Debug:l29: compute ub for '-r - v', start w/ min -3, maxV 10)
23:33:40:alg:Debug:got -r - v <= -3
23:33:40:alg:Debug:l29: compute ub for '-A + r', start w/ min -2, maxV 10)
23:33:55:alg:Debug:got -A + r <= -2
23:32:53:alg:Debug:l18: compute ub for 'r - u', start w/ min -3, maxV 10)
23:33:9:alg:Debug:got r - u <= -3
23:33:9:alg:Debug:l18: compute ub for '-r - v', start w/ min -1, maxV 10)
23:33:25:alg:Debug:got -r - v <= -1
23:33:25:alg:Debug:l18: compute ub for 'R - r', start w/ min 9, maxV 10)
23:33:28:alg:Debug:got R - r <= 9
23:33:28:alg:Debug:l18: compute ub for '-A + r', start w/ min -1, maxV 10)
23:33:43:alg:Debug:got -A + r <= -1
23:33:43:alg:Debug:l18: compute ub for '-A + R', start w/ min 0, maxV 10)
23:33:53:alg:Debug:got -A + R <= 0
23:33:53:alg:Debug:l18: compute ub for '-u - v', start w/ min -4, maxV 10)
23:34:4:alg:Debug:got -u - v <= -4
23:34:4:alg:Debug:l18: compute ub for 'A - u', start w/ min 8, maxV 10)
23:34:9:alg:Debug:got A - u <= 8
23:34:9:alg:Debug:l18: compute ub for 'u - v', start w/ min 8, maxV 10)
23:34:10:alg:Debug:l18: compute ub for '-A - u', start w/ min -4, maxV 10)
23:34:21:alg:Debug:got -A - u <= -4
23:34:21:alg:Debug:l18: compute ub for '-R + r', start w/ min 9, maxV 10)
23:34:23:alg:Debug:l18: compute ub for '-A + v', start w/ min 0, maxV 10)
23:34:35:alg:Debug:got -A + v <= 0
23:34:35:alg:Debug:l18: compute ub for '-A - v', start w/ min -2, maxV 10)
23:34:46:alg:Debug:got -A - v <= -2
23:34:46:alg:Info:86 invs:
l29: -R - v <= -5, -r - u <= -5, -R <= -2, -R - u <= -7, -A - u <= -8, -u + v <= -2, -u - v <= -8, A - u <= 8, R - u <= -3, r - u <= -3, -A + R <= -1, R - v <= 9, -A + v <= 0, -A + u <= 2, -A - v <= -6, -r <= 9, u - v <= 8, R <= 8, -R + r <= 9, -r - v <= -3, -A + r <= -2, -R - r <= 9, -v <= -3, -A <= -3, -R + v <= 9, -u <= -5, -A - R <= -5, -A - r <= -3, r - v <= 9, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: -A + R <= -1, -A + r <= -1, -A <= -3, -r - v <= -2, -R <= -2, -R - v <= -3, R - u <= -3, r - u <= -3, -R - u <= -7, -r - u <= -5, -r <= 9, -A + v <= 0, -u + v <= -2, -A - u <= -8, -u <= -5, -R - r <= 9, R - v <= 9, r - v <= 9, -A - r <= -3, -R + r <= 9, -A - v <= -4, A - u <= 8, -u - v <= -6, -A + u <= 2, -v <= -1, R <= 8, -A - R <= -5, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: -A + u <= 2, -v <= -1, -A <= -1, R - u <= -2, -u + v <= -2, -A - r <= -1, -u <= -3, -r <= 0, -r - u <= -3, -R - v <= -2, -R - u <= -4, R - v <= 9, r - u <= -3, -r - v <= -1, R - r <= 9, -A + r <= -1, -A + R <= 0, -u - v <= -4, A - u <= 8, -A - u <= -4, -A + v <= 0, -A - v <= -2, R <= 8, -R - r <= -1, -A - R <= -2, r - v <= 9, -R <= -1, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:34:46:alg:Info:test 86 invs on all 1099 traces
23:34:46:ds:Warn:l29: -R - r <= 9 disproved
23:34:46:ds:Warn:l29: R <= 8 disproved
23:34:46:ds:Warn:l29: -R + v <= 9 disproved
23:34:46:ds:Warn:l29: r - v <= 9 disproved
23:34:46:ds:Warn:l29: -r <= 9 disproved
23:34:46:ds:Warn:l29: A - u <= 8 disproved
23:34:46:ds:Warn:l29: u - v <= 8 disproved
23:34:46:ds:Warn:l29: -R + r <= 9 disproved
23:34:46:ds:Warn:l22: -R - r <= 9 disproved
23:34:46:ds:Warn:l22: R <= 8 disproved
23:34:46:ds:Warn:l22: R - v <= 9 disproved
23:34:46:ds:Warn:l22: r - v <= 9 disproved
23:34:46:ds:Warn:l22: -r <= 9 disproved
23:34:47:ds:Warn:l22: A - u <= 8 disproved
23:34:47:ds:Warn:l22: -R + r <= 9 disproved
23:34:47:ds:Warn:l18: R <= 8 disproved
23:34:47:ds:Warn:l18: R - v <= 9 disproved
23:34:47:ds:Warn:l18: r - v <= 9 disproved
23:34:47:ds:Warn:l18: A - u <= 8 disproved
23:34:47:ds:Warn:l18: R - r <= 9 disproved
23:34:47:alg:Info:find uniq invs
23:34:47:alg:Info:66 invs:
l29: -R - v <= -5, -r - u <= -5, -R <= -2, -R - u <= -7, -A - u <= -8, -u + v <= -2, -u - v <= -8, R - u <= -3, r - u <= -3, -A + R <= -1, R - v <= 9, -A + v <= 0, -A + u <= 2, -A - v <= -6, -r - v <= -3, -A + r <= -2, -v <= -3, -A <= -3, -u <= -5, -A - R <= -5, -A - r <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l22: -A + R <= -1, -A + r <= -1, -A <= -3, -r - v <= -2, -R <= -2, -R - v <= -3, R - u <= -3, r - u <= -3, -R - u <= -7, -r - u <= -5, -A + v <= 0, -u + v <= -2, -A - u <= -8, -u <= -5, -A - r <= -3, -A - v <= -4, -u - v <= -6, -A + u <= 2, -v <= -1, -A - R <= -5, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
l18: -A + u <= 2, -v <= -1, -A <= -1, R - u <= -2, -u + v <= -2, -A - r <= -1, -u <= -3, -r <= 0, -r - u <= -3, -R - v <= -2, -R - u <= -4, r - u <= -3, -r - v <= -1, -A + r <= -1, -A + R <= 0, -u - v <= -4, -A - u <= -4, -A + v <= 0, -A - v <= -2, -R - r <= -1, -A - R <= -2, -R <= -1, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:34:47:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
23:34:48:alg:Info:removed 40 redundant invs
23:34:48:alg:Info:got 26 invs, 20 inps (test 45): 
l29: r - u <= -3, -A + u <= 2, R - u <= -3, -R <= -2, R - v <= 9, -A + r <= -2, -v <= -3, -r - v <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -u + v <= -2
l22: -R <= -2, -r - u <= -5, r - u <= -3, -A + u <= 2, -u + v <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -r - v <= -2, -v <= -1, R - u <= -3
l18: R - u <= -2, -A + u <= 2, -v <= -1, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -r <= 0, -R <= -1, r - u <= -3
23:34:48:alg:Info:*done* prog programs/nla/fermat1.c, invs 26, time 163.790092945 s
23:34:48:alg:Debug:rm -rf /var/tmp/DIG2_zVeMe_
running fermat2
23:34:49:alg:Debug:src: /var/tmp/DIG2_y3Omp3/fermat2.c
23:34:49:alg:Info:analyze programs/nla/fermat2.c
23:34:49:alg:Info:set seed to: 0.0 (test 11)
23:34:49:miscs:Info:autodeg 4
23:34:49:alg:Info:check reachability
23:34:49:alg:Debug:use RT to generate traces for l19
23:34:49:alg:Info:gen eqts at 1 locs: l19 (int A, int R, int u, int v, int r)
23:34:49:alg:Debug:l19: need more traces (2 eqts, need >= 189)
23:34:51:alg:Debug:obtain 285 new traces
23:34:51:alg:Debug:l19: infer using 189 exprs
23:34:51:miscs:Debug:solve 126 uks using 189 eqts
23:35:8:alg:Debug:l19: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:35:8:alg:Debug:l19: check 1 unchecked (1 candidates)
23:35:11:alg:Debug:l19: no disproved candidates -- break
23:35:11:alg:Debug:l19: got 1 eqts, 0 new inps
23:35:11:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:35:11:alg:Info:1 invs:
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:35:11:alg:Info:gen ieqs at 1 locs: l19 (int A, int R, int u, int v, int r)
23:35:11:alg:Info:1 locs: check upperbounds for 50 terms
23:35:11:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:35:20:alg:Info:1 locs: compute upperbounds for 28 terms
23:35:20:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:35:20:alg:Debug:l19: compute ub for 'A - u', start w/ min 8, maxV 10)
23:35:26:alg:Debug:got A - u <= 8
23:35:26:alg:Debug:l19: compute ub for 'u - v', start w/ min 8, maxV 10)
23:35:20:alg:Debug:l19: compute ub for 'r - v', start w/ min 8, maxV 10)
23:35:26:alg:Debug:got r - v <= 8
23:35:26:alg:Debug:l19: compute ub for 'R - v', start w/ min 9, maxV 10)
23:35:28:alg:Debug:got R - v <= 9
23:35:20:alg:Debug:l19: compute ub for '-u - v', start w/ min -8, maxV 10)
23:35:30:alg:Debug:got -u - v <= -4
23:35:30:alg:Debug:l19: compute ub for '-R + r', start w/ min 9, maxV 10)
23:35:20:alg:Debug:l19: compute ub for '-r - u', start w/ min -5, maxV 10)
23:35:32:alg:Debug:got -r - u <= -3
23:35:32:alg:Debug:l19: compute ub for '-r', start w/ min 9, maxV 10)
23:35:35:alg:Debug:got -r <= 9
23:35:20:alg:Debug:l19: compute ub for '-A - r', start w/ min -5, maxV 10)
23:35:29:alg:Debug:got -A - r <= -1
23:35:29:alg:Debug:l19: compute ub for '-u', start w/ min -7, maxV 10)
23:35:36:alg:Debug:got -u <= -3
23:35:20:alg:Debug:l19: compute ub for '-R - r', start w/ min 8, maxV 10)
23:35:26:alg:Debug:got -R - r <= 8
23:35:26:alg:Debug:l19: compute ub for '-A - v', start w/ min -8, maxV 10)
23:35:36:alg:Debug:got -A - v <= -2
23:35:20:alg:Debug:l19: compute ub for 'R - u', start w/ min -4, maxV 10)
23:35:29:alg:Debug:got R - u <= -2
23:35:29:alg:Debug:l19: compute ub for '-R - v', start w/ min -4, maxV 10)
23:35:36:alg:Debug:got -R - v <= -2
23:35:20:alg:Debug:l19: compute ub for 'R', start w/ min 5, maxV 10)
23:35:28:alg:Debug:got R <= 5
23:35:28:alg:Debug:l19: compute ub for '-A - R', start w/ min -10, maxV 10)
23:35:36:alg:Debug:got -A - R <= -2
23:35:20:alg:Debug:l19: compute ub for '-v', start w/ min -1, maxV 10)
23:35:30:alg:Debug:got -v <= -1
23:35:30:alg:Debug:l19: compute ub for '-A', start w/ min -7, maxV 10)
23:35:38:alg:Debug:got -A <= -1
23:35:20:alg:Debug:l19: compute ub for '-R', start w/ min -3, maxV 10)
23:35:28:alg:Debug:got -R <= -1
23:35:28:alg:Debug:l19: compute ub for '-R - u', start w/ min -10, maxV 10)
23:35:38:alg:Debug:got -R - u <= -4
23:35:20:alg:Debug:l19: compute ub for '-u + v', start w/ min -2, maxV 10)
23:35:31:alg:Debug:got -u + v <= -2
23:35:31:alg:Debug:l19: compute ub for '-A + u', start w/ min 2, maxV 10)
23:35:38:alg:Debug:got -A + u <= 2
23:35:20:alg:Debug:l19: compute ub for '-A + r', start w/ min -2, maxV 10)
23:35:35:alg:Debug:got -A + r <= -1
23:35:35:alg:Debug:l19: compute ub for '-A + R', start w/ min -4, maxV 10)
23:35:41:alg:Debug:got -A + R <= 0
23:35:20:alg:Debug:l19: compute ub for '-A - u', start w/ min -10, maxV 10)
23:35:32:alg:Debug:got -A - u <= -4
23:35:32:alg:Debug:l19: compute ub for '-A + v', start w/ min 0, maxV 10)
23:35:42:alg:Debug:got -A + v <= 0
23:35:20:alg:Debug:l19: compute ub for '-r - v', start w/ min -1, maxV 10)
23:35:35:alg:Debug:got -r - v <= -1
23:35:36:alg:Debug:l19: compute ub for 'r - u', start w/ min -3, maxV 10)
23:35:47:alg:Debug:got r - u <= -3
23:35:47:alg:Info:27 invs:
l19: r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -v <= -1, -u + v <= -2, -A + R <= 0, -A + v <= 0, -r - u <= -3, -R - r <= 8, R - u <= -2, R <= 5, -R <= -1, R - v <= 9, -u <= -3, -A - r <= -1, -A + r <= -1, r - v <= 8, -A <= -1, -A + u <= 2, -A - u <= -4, -r - v <= -1, -r <= 9, -A - v <= -2, -R - v <= -2, -A - R <= -2, -R - u <= -4, -u - v <= -4, A - u <= 8
23:35:47:alg:Info:test 27 invs on all 335 traces
23:35:47:ds:Warn:l19: -R - r <= 8 disproved
23:35:47:ds:Warn:l19: R - v <= 9 disproved
23:35:47:ds:Warn:l19: -r <= 9 disproved
23:35:47:ds:Warn:l19: r - v <= 8 disproved
23:35:47:ds:Warn:l19: R <= 5 disproved
23:35:47:ds:Warn:l19: A - u <= 8 disproved
23:35:47:alg:Info:find uniq invs
23:35:47:alg:Info:21 invs:
l19: r - u <= -3, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -v <= -1, -u + v <= -2, -A + R <= 0, -A + v <= 0, -r - u <= -3, R - u <= -2, -R <= -1, -u <= -3, -A - r <= -1, -A + r <= -1, -A <= -1, -A + u <= 2, -A - u <= -4, -r - v <= -1, -A - v <= -2, -R - v <= -2, -A - R <= -2, -R - u <= -4, -u - v <= -4
23:35:48:alg:Info:removed 13 redundant invs
23:35:48:alg:Info:got 8 invs, 14 inps (test 51): 
l19: -A + u <= 2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, R - u <= -2, -v <= -1, -R <= -1, -u + v <= -2, -r - v <= -1, r - u <= -3
23:35:48:alg:Info:*done* prog programs/nla/fermat2.c, invs 8, time 58.8218588829 s
23:35:48:alg:Debug:rm -rf /var/tmp/DIG2_y3Omp3
23:35:49:alg:Debug:src: /var/tmp/DIG2_mI_CY2/fermat2.c
23:35:49:alg:Info:analyze programs/nla/fermat2.c
23:35:49:alg:Info:set seed to: 1.0 (test 83)
23:35:49:miscs:Info:autodeg 4
23:35:49:alg:Info:check reachability
23:35:49:alg:Debug:use RT to generate traces for l19
23:35:49:alg:Info:gen eqts at 1 locs: l19 (int A, int R, int u, int v, int r)
23:35:49:alg:Debug:l19: need more traces (2 eqts, need >= 189)
23:35:50:alg:Debug:obtain 3 new traces
23:35:50:alg:Debug:l19: need more traces (5 eqts, need >= 189)
23:35:51:alg:Debug:obtain 1 new traces
23:35:51:alg:Debug:l19: need more traces (6 eqts, need >= 189)
23:35:53:alg:Debug:obtain 212 new traces
23:35:53:alg:Debug:l19: infer using 189 exprs
23:35:53:miscs:Debug:solve 126 uks using 189 eqts
23:36:10:alg:Debug:l19: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:36:10:alg:Debug:l19: check 1 unchecked (1 candidates)
23:36:13:alg:Debug:l19: no disproved candidates -- break
23:36:13:alg:Debug:l19: got 1 eqts, 0 new inps
23:36:13:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:36:13:alg:Info:1 invs:
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:36:13:alg:Info:gen ieqs at 1 locs: l19 (int A, int R, int u, int v, int r)
23:36:13:alg:Info:1 locs: check upperbounds for 50 terms
23:36:13:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:36:20:alg:Info:1 locs: compute upperbounds for 28 terms
23:36:20:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:36:20:alg:Debug:l19: compute ub for 'u - v', start w/ min 8, maxV 10)
23:36:21:alg:Debug:l19: compute ub for '-R - r', start w/ min 8, maxV 10)
23:36:28:alg:Debug:got -R - r <= 8
23:36:21:alg:Debug:l19: compute ub for '-R + r', start w/ min 9, maxV 10)
23:36:24:alg:Debug:l19: compute ub for 'A - u', start w/ min 8, maxV 10)
23:36:29:alg:Debug:got A - u <= 8
23:36:21:alg:Debug:l19: compute ub for 'R - v', start w/ min 9, maxV 10)
23:36:23:alg:Debug:got R - v <= 9
23:36:23:alg:Debug:l19: compute ub for '-R - u', start w/ min -4, maxV 10)
23:36:35:alg:Debug:got -R - u <= -4
23:36:21:alg:Debug:l19: compute ub for 'r - v', start w/ min 8, maxV 10)
23:36:27:alg:Debug:got r - v <= 8
23:36:27:alg:Debug:l19: compute ub for '-A - v', start w/ min -2, maxV 10)
23:36:37:alg:Debug:got -A - v <= -2
23:36:21:alg:Debug:l19: compute ub for '-r', start w/ min 8, maxV 10)
23:36:27:alg:Debug:got -r <= 8
23:36:27:alg:Debug:l19: compute ub for '-A + R', start w/ min 0, maxV 10)
23:36:37:alg:Debug:got -A + R <= 0
23:36:20:alg:Debug:l19: compute ub for '-R - v', start w/ min -2, maxV 10)
23:36:31:alg:Debug:got -R - v <= -2
23:36:31:alg:Debug:l19: compute ub for '-A - R', start w/ min -2, maxV 10)
23:36:39:alg:Debug:got -A - R <= -2
23:36:20:alg:Debug:l19: compute ub for '-v', start w/ min -1, maxV 10)
23:36:31:alg:Debug:got -v <= -1
23:36:31:alg:Debug:l19: compute ub for '-A', start w/ min -1, maxV 10)
23:36:39:alg:Debug:got -A <= -1
23:36:20:alg:Debug:l19: compute ub for '-A + v', start w/ min 0, maxV 10)
23:36:33:alg:Debug:got -A + v <= 0
23:36:33:alg:Debug:l19: compute ub for 'R', start w/ min 5, maxV 10)
23:36:39:alg:Debug:got R <= 5
23:36:21:alg:Debug:l19: compute ub for '-R', start w/ min -1, maxV 10)
23:36:30:alg:Debug:got -R <= -1
23:36:30:alg:Debug:l19: compute ub for 'R - u', start w/ min -2, maxV 10)
23:36:40:alg:Debug:got R - u <= -2
23:36:21:alg:Debug:l19: compute ub for 'r - u', start w/ min -3, maxV 10)
23:36:35:alg:Debug:got r - u <= -3
23:36:35:alg:Debug:l19: compute ub for '-u + v', start w/ min -2, maxV 10)
23:36:43:alg:Debug:got -u + v <= -2
23:36:20:alg:Debug:l19: compute ub for '-r - v', start w/ min -1, maxV 10)
23:36:35:alg:Debug:got -r - v <= -1
23:36:35:alg:Debug:l19: compute ub for '-A + u', start w/ min 2, maxV 10)
23:36:43:alg:Debug:got -A + u <= 2
23:36:20:alg:Debug:l19: compute ub for '-A - r', start w/ min -1, maxV 10)
23:36:35:alg:Debug:got -A - r <= -1
23:36:35:alg:Debug:l19: compute ub for '-u', start w/ min -3, maxV 10)
23:36:44:alg:Debug:got -u <= -3
23:36:21:alg:Debug:l19: compute ub for '-A + r', start w/ min -1, maxV 10)
23:36:36:alg:Debug:got -A + r <= -1
23:36:36:alg:Debug:l19: compute ub for '-A - u', start w/ min -4, maxV 10)
23:36:45:alg:Debug:got -A - u <= -4
23:36:20:alg:Debug:l19: compute ub for '-u - v', start w/ min -4, maxV 10)
23:36:34:alg:Debug:got -u - v <= -4
23:36:34:alg:Debug:l19: compute ub for '-r - u', start w/ min -3, maxV 10)
23:36:47:alg:Debug:got -r - u <= -3
23:36:47:alg:Info:27 invs:
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -R - r <= 8, R - v <= 9, -v <= -1, R <= 5, -A - v <= -2, -A + R <= 0, R - u <= -2, -R - v <= -2, -A + v <= 0, r - v <= 8, -A - R <= -2, A - u <= 8, -R - u <= -4, -A <= -1, -R <= -1, -r <= 8, -A - r <= -1, -u - v <= -4, -u <= -3, -A - u <= -4, -A + u <= 2, -u + v <= -2, -A + r <= -1, -r - v <= -1, r - u <= -3, -r - u <= -3
23:36:47:alg:Info:test 27 invs on all 271 traces
23:36:47:ds:Warn:l19: -R - r <= 8 disproved
23:36:47:ds:Warn:l19: A - u <= 8 disproved
23:36:47:ds:Warn:l19: R - v <= 9 disproved
23:36:47:ds:Warn:l19: -r <= 8 disproved
23:36:47:ds:Warn:l19: R <= 5 disproved
23:36:47:ds:Warn:l19: r - v <= 8 disproved
23:36:47:alg:Info:find uniq invs
23:36:47:alg:Info:21 invs:
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, -v <= -1, -A - v <= -2, -A + R <= 0, R - u <= -2, -R - v <= -2, -A + v <= 0, -A - R <= -2, -R - u <= -4, -A <= -1, -R <= -1, -A - r <= -1, -u - v <= -4, -u <= -3, -A - u <= -4, -A + u <= 2, -u + v <= -2, -A + r <= -1, -r - v <= -1, r - u <= -3, -r - u <= -3
23:36:48:alg:Info:removed 13 redundant invs
23:36:48:alg:Info:got 8 invs, 15 inps (test 60): 
l19: -v <= -1, -A + u <= 2, -u + v <= -2, r - u <= -3, -r - v <= -1, -R <= -1, R - u <= -2, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:36:48:alg:Info:*done* prog programs/nla/fermat2.c, invs 8, time 58.6715629101 s
23:36:48:alg:Debug:rm -rf /var/tmp/DIG2_mI_CY2
23:36:49:alg:Debug:src: /var/tmp/DIG2_DDNVtq/fermat2.c
23:36:49:alg:Info:analyze programs/nla/fermat2.c
23:36:49:alg:Info:set seed to: 2.0 (test 98)
23:36:49:miscs:Info:autodeg 4
23:36:49:alg:Info:check reachability
23:36:49:alg:Debug:use RT to generate traces for l19
23:36:49:alg:Info:gen eqts at 1 locs: l19 (int A, int R, int u, int v, int r)
23:36:49:alg:Debug:l19: need more traces (2 eqts, need >= 189)
23:36:50:alg:Debug:obtain 50 new traces
23:36:51:alg:Debug:l19: need more traces (52 eqts, need >= 189)
23:36:52:alg:Debug:obtain 2 new traces
23:36:52:alg:Debug:l19: need more traces (54 eqts, need >= 189)
23:36:53:alg:Debug:obtain 276 new traces
23:36:54:alg:Debug:l19: infer using 189 exprs
23:36:54:miscs:Debug:solve 126 uks using 189 eqts
23:37:11:alg:Debug:l19: 1 candidates:
u^2 - v^2 - 4*A - 4*r - 2*u + 2*v == 0
23:37:11:alg:Debug:l19: check 1 unchecked (1 candidates)
23:37:14:alg:Debug:l19: no disproved candidates -- break
23:37:14:alg:Debug:l19: got 1 eqts, 0 new inps
23:37:14:alg:Debug:(u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:37:14:alg:Info:1 invs:
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:37:14:alg:Info:gen ieqs at 1 locs: l19 (int A, int R, int u, int v, int r)
23:37:14:alg:Info:1 locs: check upperbounds for 50 terms
23:37:14:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:37:22:alg:Info:1 locs: compute upperbounds for 27 terms
23:37:22:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:37:22:alg:Debug:l19: compute ub for 'A - u', start w/ min 8, maxV 10)
23:37:27:alg:Debug:got A - u <= 8
23:37:27:alg:Debug:l19: compute ub for 'r - v', start w/ min 9, maxV 10)
23:37:30:alg:Debug:got r - v <= 9
23:37:22:alg:Debug:l19: compute ub for '-r', start w/ min 9, maxV 10)
23:37:25:alg:Debug:got -r <= 9
23:37:25:alg:Debug:l19: compute ub for '-R', start w/ min -1, maxV 10)
23:37:35:alg:Debug:got -R <= -1
23:37:22:alg:Debug:l19: compute ub for '-R - u', start w/ min -4, maxV 10)
23:37:34:alg:Debug:got -R - u <= -4
23:37:34:alg:Debug:l19: compute ub for 'u - v', start w/ min 8, maxV 10)
23:37:22:alg:Debug:l19: compute ub for '-A - u', start w/ min -4, maxV 10)
23:37:34:alg:Debug:got -A - u <= -4
23:37:35:alg:Debug:l19: compute ub for 'R - v', start w/ min 9, maxV 10)
23:37:37:alg:Debug:got R - v <= 9
23:37:22:alg:Debug:l19: compute ub for '-A - r', start w/ min -1, maxV 10)
23:37:37:alg:Debug:got -A - r <= -1
23:37:22:alg:Debug:l19: compute ub for 'R', start w/ min 5, maxV 10)
23:37:30:alg:Debug:got R <= 5
23:37:30:alg:Debug:l19: compute ub for '-A - R', start w/ min -2, maxV 10)
23:37:39:alg:Debug:got -A - R <= -2
23:37:22:alg:Debug:l19: compute ub for '-A + R', start w/ min 0, maxV 10)
23:37:32:alg:Debug:got -A + R <= 0
23:37:32:alg:Debug:l19: compute ub for '-A', start w/ min -1, maxV 10)
23:37:41:alg:Debug:got -A <= -1
23:37:22:alg:Debug:l19: compute ub for '-R - v', start w/ min -2, maxV 10)
23:37:34:alg:Debug:got -R - v <= -2
23:37:34:alg:Debug:l19: compute ub for '-A + u', start w/ min 2, maxV 10)
23:37:42:alg:Debug:got -A + u <= 2
23:37:22:alg:Debug:l19: compute ub for '-R - r', start w/ min 8, maxV 10)
23:37:28:alg:Debug:got -R - r <= 8
23:37:29:alg:Debug:l19: compute ub for '-A + r', start w/ min -1, maxV 10)
23:37:42:alg:Debug:got -A + r <= -1
23:37:22:alg:Debug:l19: compute ub for 'R - u', start w/ min -2, maxV 10)
23:37:35:alg:Debug:got R - u <= -2
23:37:35:alg:Debug:l19: compute ub for '-A - v', start w/ min -2, maxV 10)
23:37:43:alg:Debug:got -A - v <= -2
23:37:22:alg:Debug:l19: compute ub for '-u - v', start w/ min -4, maxV 10)
23:37:36:alg:Debug:got -u - v <= -4
23:37:36:alg:Debug:l19: compute ub for '-v', start w/ min -1, maxV 10)
23:37:44:alg:Debug:got -v <= -1
23:37:22:alg:Debug:l19: compute ub for 'r - u', start w/ min -3, maxV 10)
23:37:37:alg:Debug:got r - u <= -3
23:37:37:alg:Debug:l19: compute ub for '-u + v', start w/ min -2, maxV 10)
23:37:45:alg:Debug:got -u + v <= -2
23:37:22:alg:Debug:l19: compute ub for '-r - v', start w/ min -1, maxV 10)
23:37:37:alg:Debug:got -r - v <= -1
23:37:37:alg:Debug:l19: compute ub for '-u', start w/ min -3, maxV 10)
23:37:45:alg:Debug:got -u <= -3
23:37:22:alg:Debug:l19: compute ub for '-r - u', start w/ min -3, maxV 10)
23:37:37:alg:Debug:got -r - u <= -3
23:37:37:alg:Debug:l19: compute ub for '-A + v', start w/ min 0, maxV 10)
23:37:47:alg:Debug:got -A + v <= 0
23:37:47:alg:Info:27 invs:
l19: -A + v <= 0, A - u <= 8, -R <= -1, -R - u <= -4, r - v <= 9, -r <= 9, -A + R <= 0, -A + r <= -1, r - u <= -3, -u <= -3, -r - u <= -3, -A - r <= -1, -A + u <= 2, -A - v <= -2, -u + v <= -2, -R - v <= -2, -u - v <= -4, R <= 5, R - v <= 9, -A - R <= -2, -v <= -1, -R - r <= 8, -r - v <= -1, -A <= -1, R - u <= -2, -A - u <= -4, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:37:47:alg:Info:test 27 invs on all 383 traces
23:37:47:ds:Warn:l19: -R - r <= 8 disproved
23:37:47:ds:Warn:l19: A - u <= 8 disproved
23:37:47:ds:Warn:l19: -r <= 9 disproved
23:37:47:ds:Warn:l19: R <= 5 disproved
23:37:47:ds:Warn:l19: r - v <= 9 disproved
23:37:47:ds:Warn:l19: R - v <= 9 disproved
23:37:47:alg:Info:find uniq invs
23:37:47:alg:Info:21 invs:
l19: -A + v <= 0, -R <= -1, -R - u <= -4, -A + R <= 0, -A + r <= -1, r - u <= -3, -u <= -3, -r - u <= -3, -A - r <= -1, -A + u <= 2, -A - v <= -2, -u + v <= -2, -R - v <= -2, -u - v <= -4, -A - R <= -2, -v <= -1, -r - v <= -1, -A <= -1, R - u <= -2, -A - u <= -4, (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0
23:37:48:alg:Info:removed 13 redundant invs
23:37:48:alg:Info:got 8 invs, 16 inps (test 45): 
l19: (u*u) - (v*v) - 4*A - 4*r - 2*u + 2*v == 0, r - u <= -3, -R <= -1, -r - v <= -1, -v <= -1, -u + v <= -2, -A + u <= 2, R - u <= -2
23:37:48:alg:Info:*done* prog programs/nla/fermat2.c, invs 8, time 58.7597229481 s
23:37:48:alg:Debug:rm -rf /var/tmp/DIG2_DDNVtq
running hard
23:37:49:alg:Debug:src: /var/tmp/DIG2_7oxxcl/hard.c
23:37:49:alg:Info:analyze programs/nla/hard.c
23:37:49:alg:Info:set seed to: 0.0 (test 11)
23:37:49:miscs:Info:autodeg 3
23:37:49:alg:Info:check reachability
23:37:49:alg:Info:gen eqts at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:37:49:alg:Debug:l21: need more traces (11 eqts, need >= 126)
23:37:49:alg:Debug:obtain 13 new traces
23:37:49:alg:Debug:l21: need more traces (24 eqts, need >= 126)
23:37:49:alg:Debug:obtain 18 new traces
23:37:49:alg:Debug:l21: need more traces (42 eqts, need >= 126)
23:37:49:alg:Debug:obtain 25 new traces
23:37:49:alg:Debug:l21: need more traces (67 eqts, need >= 126)
23:37:50:alg:Debug:obtain 33 new traces
23:37:50:alg:Debug:l21: need more traces (100 eqts, need >= 126)
23:37:50:alg:Debug:obtain 43 new traces
23:37:50:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:37:50:alg:Debug:l21: infer using 126 exprs
23:37:50:miscs:Debug:solve 84 uks using 126 eqts
23:37:54:alg:Debug:l21: 3 candidates:
B*p - d == 0
A - r == 0
q == 0
23:37:54:alg:Debug:l21: check 3 unchecked (3 candidates)
23:37:54:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:37:50:alg:Debug:l30: infer using 126 exprs
23:37:50:miscs:Debug:solve 84 uks using 126 eqts
23:37:55:alg:Debug:l30: 2 candidates:
B*p - d == 0
B*q - A + r == 0
23:37:55:alg:Debug:l30: check 2 unchecked (2 candidates)
23:37:55:miscs:Debug:workloads 'prove' 2: [1, 1]
23:37:57:alg:Debug:l21: no disproved candidates -- break
23:37:59:alg:Debug:l30: no disproved candidates -- break
23:37:59:alg:Debug:l21: got 3 eqts, 0 new inps
23:37:59:alg:Debug:B*p - d == 0
A - r == 0
q == 0
23:37:59:alg:Debug:l30: got 2 eqts, 0 new inps
23:37:59:alg:Debug:B*p - d == 0
B*q - A + r == 0
23:37:59:alg:Info:5 invs:
l21: B*p - d == 0, A - r == 0, q == 0
l30: B*p - d == 0, B*q - A + r == 0
23:37:59:alg:Info:gen ieqs at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:37:59:alg:Info:2 locs: check upperbounds for 144 terms
23:37:59:miscs:Debug:workloads 'prove' 20: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 11]
23:38:14:alg:Info:2 locs: compute upperbounds for 57 terms
23:38:14:miscs:Debug:workloads 'guesscheck' 19: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
23:38:14:alg:Debug:l21: compute ub for '-B - q', start w/ min -1, maxV 10)
23:38:22:alg:Debug:got -B - q <= -1
23:38:22:alg:Debug:l21: compute ub for '-B - p', start w/ min -2, maxV 10)
23:38:30:alg:Debug:got -B - p <= -2
23:38:30:alg:Debug:l21: compute ub for '-B + q', start w/ min -1, maxV 10)
23:38:39:alg:Debug:got -B + q <= -1
23:38:14:alg:Debug:l21: compute ub for '-r', start w/ min 0, maxV 10)
23:38:22:alg:Debug:got -r <= 0
23:38:23:alg:Debug:l21: compute ub for '-A', start w/ min 0, maxV 10)
23:38:30:alg:Debug:got -A <= 0
23:38:31:alg:Debug:l21: compute ub for '-q - r', start w/ min 0, maxV 10)
23:38:39:alg:Debug:got -q - r <= 0
23:38:14:alg:Debug:l21: compute ub for '-d - p', start w/ min -2, maxV 10)
23:38:22:alg:Debug:got -d - p <= -2
23:38:22:alg:Debug:l21: compute ub for '-A - r', start w/ min 0, maxV 10)
23:38:30:alg:Debug:got -A - r <= 0
23:38:30:alg:Debug:l21: compute ub for 'B - d', start w/ min 0, maxV 10)
23:38:39:alg:Debug:got B - d <= 0
23:38:14:alg:Debug:l21: compute ub for '-A - q', start w/ min 0, maxV 10)
23:38:23:alg:Debug:got -A - q <= 0
23:38:23:alg:Debug:l21: compute ub for '-p - q', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -p - q <= -1
23:38:31:alg:Debug:l21: compute ub for '-d - q', start w/ min -1, maxV 10)
23:38:39:alg:Debug:got -d - q <= -1
23:38:14:alg:Debug:l21: compute ub for '-q', start w/ min 0, maxV 10)
23:38:23:alg:Debug:got -q <= 0
23:38:23:alg:Debug:l21: compute ub for '-d', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -d <= -1
23:38:31:alg:Debug:l21: compute ub for '-B', start w/ min -1, maxV 10)
23:38:39:alg:Debug:got -B <= -1
23:38:14:alg:Debug:l21: compute ub for '-B - r', start w/ min -2, maxV 10)
23:38:23:alg:Debug:got -B - r <= -1
23:38:23:alg:Debug:l21: compute ub for '-A - B', start w/ min -2, maxV 10)
23:38:31:alg:Debug:got -A - B <= -1
23:38:31:alg:Debug:l21: compute ub for '-p', start w/ min -1, maxV 10)
23:38:39:alg:Debug:got -p <= -1
23:38:14:alg:Debug:l21: compute ub for 'q - r', start w/ min 0, maxV 10)
23:38:23:alg:Debug:got q - r <= 0
23:38:23:alg:Debug:l21: compute ub for '-A + r', start w/ min 0, maxV 10)
23:38:31:alg:Debug:got -A + r <= 0
23:38:31:alg:Debug:l21: compute ub for '-B - d', start w/ min -2, maxV 10)
23:38:39:alg:Debug:got -B - d <= -2
23:38:14:alg:Debug:l21: compute ub for '-d + p', start w/ min 0, maxV 10)
23:38:22:alg:Debug:got -d + p <= 0
23:38:23:alg:Debug:l21: compute ub for '-d + q', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -d + q <= -1
23:38:31:alg:Debug:l21: compute ub for 'q', start w/ min 0, maxV 10)
23:38:39:alg:Debug:got q <= 0
23:38:14:alg:Debug:l21: compute ub for '-A - d', start w/ min -2, maxV 10)
23:38:23:alg:Debug:got -A - d <= -1
23:38:23:alg:Debug:l21: compute ub for '-p - r', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -p - r <= -1
23:38:32:alg:Debug:l21: compute ub for '-A - p', start w/ min -1, maxV 10)
23:38:40:alg:Debug:got -A - p <= -1
23:38:14:alg:Debug:l21: compute ub for 'A - r', start w/ min 0, maxV 10)
23:38:23:alg:Debug:got A - r <= 0
23:38:23:alg:Debug:l21: compute ub for '-p + q', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -p + q <= -1
23:38:31:alg:Debug:l21: compute ub for '-d - r', start w/ min -2, maxV 10)
23:38:40:alg:Debug:got -d - r <= -1
23:38:14:alg:Debug:l30: compute ub for '-A - B', start w/ min -2, maxV 10)
23:38:23:alg:Debug:got -A - B <= -1
23:38:23:alg:Debug:l30: compute ub for '-p', start w/ min -1, maxV 10)
23:38:31:alg:Debug:got -p <= -1
23:38:31:alg:Debug:l30: compute ub for '-A - q', start w/ min 0, maxV 10)
23:38:43:alg:Debug:got -A - q <= 0
23:38:14:alg:Debug:l30: compute ub for '-q', start w/ min 0, maxV 10)
23:38:23:alg:Debug:got -q <= 0
23:38:23:alg:Debug:l30: compute ub for '-d', start w/ min -1, maxV 10)
23:38:38:alg:Debug:got -d <= -1
23:38:38:alg:Debug:l30: compute ub for '-B', start w/ min -1, maxV 10)
23:38:44:alg:Debug:got -B <= -1
23:38:14:alg:Debug:l30: compute ub for '-p - q', start w/ min -1, maxV 10)
23:38:23:alg:Debug:got -p - q <= -1
23:38:23:alg:Debug:l30: compute ub for '-d + p', start w/ min 0, maxV 10)
23:38:38:alg:Debug:got -d + p <= 0
23:38:38:alg:Debug:l30: compute ub for '-A - r', start w/ min 0, maxV 10)
23:38:48:alg:Debug:got -A - r <= 0
23:38:14:alg:Debug:l30: compute ub for '-B - d', start w/ min -2, maxV 10)
23:38:30:alg:Debug:got -B - d <= -2
23:38:30:alg:Debug:l30: compute ub for '-r', start w/ min 0, maxV 10)
23:38:43:alg:Debug:got -r <= 0
23:38:43:alg:Debug:l30: compute ub for '-A', start w/ min 0, maxV 10)
23:38:48:alg:Debug:got -A <= 0
23:38:14:alg:Debug:l21: compute ub for '-A + q', start w/ min 0, maxV 10)
23:38:22:alg:Debug:got -A + q <= 0
23:38:22:alg:Debug:l30: compute ub for '-d + r', start w/ min -1, maxV 10)
23:38:38:alg:Debug:got -d + r <= -1
23:38:38:alg:Debug:l30: compute ub for '-d - q', start w/ min -2, maxV 10)
23:38:51:alg:Debug:got -d - q <= -1
23:38:14:alg:Debug:l30: compute ub for '-B - q', start w/ min -1, maxV 10)
23:38:29:alg:Debug:got -B - q <= -1
23:38:29:alg:Debug:l30: compute ub for '-B - p', start w/ min -2, maxV 10)
23:38:44:alg:Debug:got -B - p <= -2
23:38:44:alg:Debug:l30: compute ub for '-B - r', start w/ min -1, maxV 10)
23:38:53:alg:Debug:got -B - r <= -1
23:38:14:alg:Debug:l30: compute ub for '-d - p', start w/ min -2, maxV 10)
23:38:30:alg:Debug:got -d - p <= -2
23:38:30:alg:Debug:l30: compute ub for 'B - d', start w/ min 0, maxV 10)
23:38:45:alg:Debug:got B - d <= 0
23:38:45:alg:Debug:l30: compute ub for '-A + q', start w/ min 0, maxV 10)
23:38:54:alg:Debug:got -A + q <= 0
23:38:14:alg:Debug:l30: compute ub for '-q - r', start w/ min 0, maxV 10)
23:38:30:alg:Debug:got -q - r <= 0
23:38:30:alg:Debug:l30: compute ub for '-A + r', start w/ min 0, maxV 10)
23:38:43:alg:Debug:got -A + r <= 0
23:38:43:alg:Debug:l30: compute ub for '-d - r', start w/ min -1, maxV 10)
23:38:56:alg:Debug:got -d - r <= -1
23:38:14:alg:Debug:l30: compute ub for '-A - d', start w/ min -2, maxV 10)
23:38:30:alg:Debug:got -A - d <= -1
23:38:30:alg:Debug:l30: compute ub for '-p - r', start w/ min -1, maxV 10)
23:38:45:alg:Debug:got -p - r <= -1
23:38:45:alg:Debug:l30: compute ub for '-A - p', start w/ min -1, maxV 10)
23:38:57:alg:Debug:got -A - p <= -1
23:38:57:alg:Info:62 invs:
l21: B*p - d == 0, A - r == 0, q == 0, -A + q <= 0, -B - q <= -1, -A - q <= 0, -B <= -1, -p - q <= -1, B - d <= 0, -d <= -1, -d + q <= -1, q <= 0, -p <= -1, -B - d <= -2, -A - B <= -1, -q <= 0, -d - r <= -1, q - r <= 0, A - r <= 0, -A + r <= 0, -p - r <= -1, -p + q <= -1, -A - p <= -1, -d - q <= -1, -A - d <= -1, -A - r <= 0, -B - r <= -1, -d + p <= 0, -d - p <= -2, -A <= 0, -q - r <= 0, -B - p <= -2, -B + q <= -1, -r <= 0
l30: B*p - d == 0, B*q - A + r == 0, -d - q <= -1, -d + r <= -1, -B - q <= -1, -d - r <= -1, -A - p <= -1, -d - p <= -2, -A <= 0, -A + q <= 0, -q - r <= 0, -B - p <= -2, -A - d <= -1, B - d <= 0, -A + r <= 0, -B - r <= -1, -p - r <= -1, -B - d <= -2, -p - q <= -1, -r <= 0, -A - r <= 0, -p <= -1, -d <= -1, -q <= 0, -B <= -1, -A - q <= 0, -A - B <= -1, -d + p <= 0
23:38:57:alg:Info:test 62 invs on all 744 traces
23:38:58:alg:Info:find uniq invs
23:38:58:alg:Info:62 invs:
l21: B*p - d == 0, A - r == 0, q == 0, -A + q <= 0, -B - q <= -1, -A - q <= 0, -B <= -1, -p - q <= -1, B - d <= 0, -d <= -1, -d + q <= -1, q <= 0, -p <= -1, -B - d <= -2, -A - B <= -1, -q <= 0, -d - r <= -1, q - r <= 0, A - r <= 0, -A + r <= 0, -p - r <= -1, -p + q <= -1, -A - p <= -1, -d - q <= -1, -A - d <= -1, -A - r <= 0, -B - r <= -1, -d + p <= 0, -d - p <= -2, -A <= 0, -q - r <= 0, -B - p <= -2, -B + q <= -1, -r <= 0
l30: B*p - d == 0, B*q - A + r == 0, -d - q <= -1, -d + r <= -1, -B - q <= -1, -d - r <= -1, -A - p <= -1, -d - p <= -2, -A <= 0, -A + q <= 0, -q - r <= 0, -B - p <= -2, -A - d <= -1, B - d <= 0, -A + r <= 0, -B - r <= -1, -p - r <= -1, -B - d <= -2, -p - q <= -1, -r <= 0, -A - r <= 0, -p <= -1, -d <= -1, -q <= 0, -B <= -1, -A - q <= 0, -A - B <= -1, -d + p <= 0
23:38:58:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:38:59:alg:Info:removed 49 redundant invs
23:38:59:alg:Info:got 13 invs, 107 inps (test 51): 
l21: B*p - d == 0, B - d <= 0, q == 0, A - r == 0, -B - q <= -1, -A - r <= 0
l30: -r <= 0, -q <= 0, -B <= -1, B - d <= 0, B*q - A + r == 0, -d + r <= -1, B*p - d == 0
23:38:59:alg:Info:*done* prog programs/nla/hard.c, invs 13, time 70.3077340126 s
23:38:59:alg:Debug:rm -rf /var/tmp/DIG2_7oxxcl
23:39:0:alg:Debug:src: /var/tmp/DIG2_QpEy5G/hard.c
23:39:1:alg:Info:analyze programs/nla/hard.c
23:39:1:alg:Info:set seed to: 1.0 (test 83)
23:39:1:miscs:Info:autodeg 3
23:39:1:alg:Info:check reachability
23:39:1:alg:Info:gen eqts at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:39:1:alg:Debug:l21: need more traces (9 eqts, need >= 126)
23:39:1:alg:Debug:obtain 13 new traces
23:39:1:alg:Debug:l21: need more traces (22 eqts, need >= 126)
23:39:1:alg:Debug:obtain 18 new traces
23:39:1:alg:Debug:l21: need more traces (40 eqts, need >= 126)
23:39:1:alg:Debug:obtain 24 new traces
23:39:1:alg:Debug:l21: need more traces (64 eqts, need >= 126)
23:39:1:alg:Debug:obtain 32 new traces
23:39:1:alg:Debug:l21: need more traces (96 eqts, need >= 126)
23:39:2:alg:Debug:obtain 42 new traces
23:39:2:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:39:2:alg:Debug:l21: infer using 126 exprs
23:39:2:miscs:Debug:solve 84 uks using 126 eqts
23:39:5:alg:Debug:l21: 3 candidates:
B*p - d == 0
A - r == 0
q == 0
23:39:5:alg:Debug:l21: check 3 unchecked (3 candidates)
23:39:5:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:39:2:alg:Debug:l30: infer using 126 exprs
23:39:2:miscs:Debug:solve 84 uks using 126 eqts
23:39:7:alg:Debug:l30: 2 candidates:
B*p - d == 0
B*q - A + r == 0
23:39:7:alg:Debug:l30: check 2 unchecked (2 candidates)
23:39:7:miscs:Debug:workloads 'prove' 2: [1, 1]
23:39:9:alg:Debug:l21: no disproved candidates -- break
23:39:10:alg:Debug:l30: no disproved candidates -- break
23:39:10:alg:Debug:l21: got 3 eqts, 0 new inps
23:39:10:alg:Debug:B*p - d == 0
A - r == 0
q == 0
23:39:10:alg:Debug:l30: got 2 eqts, 0 new inps
23:39:10:alg:Debug:B*q - A + r == 0
B*p - d == 0
23:39:10:alg:Info:5 invs:
l21: q == 0, A - r == 0, B*p - d == 0
l30: B*q - A + r == 0, B*p - d == 0
23:39:10:alg:Info:gen ieqs at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:39:10:alg:Info:2 locs: check upperbounds for 144 terms
23:39:10:miscs:Debug:workloads 'prove' 20: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 11]
23:39:29:alg:Info:2 locs: compute upperbounds for 57 terms
23:39:29:miscs:Debug:workloads 'guesscheck' 19: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
23:39:29:alg:Debug:l21: compute ub for 'A - r', start w/ min 0, maxV 10)
23:39:37:alg:Debug:got A - r <= 0
23:39:37:alg:Debug:l21: compute ub for '-B - d', start w/ min -2, maxV 10)
23:39:45:alg:Debug:got -B - d <= -2
23:39:45:alg:Debug:l21: compute ub for '-q - r', start w/ min 0, maxV 10)
23:39:52:alg:Debug:got -q - r <= 0
23:39:29:alg:Debug:l21: compute ub for '-A - B', start w/ min -2, maxV 10)
23:39:37:alg:Debug:got -A - B <= -1
23:39:37:alg:Debug:l21: compute ub for '-p', start w/ min -1, maxV 10)
23:39:45:alg:Debug:got -p <= -1
23:39:46:alg:Debug:l21: compute ub for '-A - q', start w/ min 0, maxV 10)
23:39:53:alg:Debug:got -A - q <= 0
23:39:29:alg:Debug:l21: compute ub for '-B', start w/ min -1, maxV 10)
23:39:37:alg:Debug:got -B <= -1
23:39:37:alg:Debug:l21: compute ub for '-B + q', start w/ min -1, maxV 10)
23:39:45:alg:Debug:got -B + q <= -1
23:39:45:alg:Debug:l21: compute ub for '-B - q', start w/ min -1, maxV 10)
23:39:54:alg:Debug:got -B - q <= -1
23:39:29:alg:Debug:l21: compute ub for '-A', start w/ min 0, maxV 10)
23:39:37:alg:Debug:got -A <= 0
23:39:37:alg:Debug:l21: compute ub for '-d + p', start w/ min 0, maxV 10)
23:39:46:alg:Debug:got -d + p <= 0
23:39:46:alg:Debug:l21: compute ub for '-A + r', start w/ min 0, maxV 10)
23:39:54:alg:Debug:got -A + r <= 0
23:39:29:alg:Debug:l21: compute ub for '-A + q', start w/ min 0, maxV 10)
23:39:37:alg:Debug:got -A + q <= 0
23:39:37:alg:Debug:l21: compute ub for 'B - d', start w/ min 0, maxV 10)
23:39:45:alg:Debug:got B - d <= 0
23:39:46:alg:Debug:l21: compute ub for '-p + q', start w/ min -1, maxV 10)
23:39:54:alg:Debug:got -p + q <= -1
23:39:29:alg:Debug:l21: compute ub for '-d - p', start w/ min -2, maxV 10)
23:39:37:alg:Debug:got -d - p <= -2
23:39:37:alg:Debug:l21: compute ub for 'q', start w/ min 0, maxV 10)
23:39:46:alg:Debug:got q <= 0
23:39:46:alg:Debug:l21: compute ub for 'q - r', start w/ min 0, maxV 10)
23:39:54:alg:Debug:got q - r <= 0
23:39:29:alg:Debug:l21: compute ub for '-d - q', start w/ min -1, maxV 10)
23:39:37:alg:Debug:got -d - q <= -1
23:39:37:alg:Debug:l21: compute ub for '-r', start w/ min 0, maxV 10)
23:39:45:alg:Debug:got -r <= 0
23:39:45:alg:Debug:l21: compute ub for '-d + q', start w/ min -1, maxV 10)
23:39:54:alg:Debug:got -d + q <= -1
23:39:29:alg:Debug:l21: compute ub for '-B - p', start w/ min -2, maxV 10)
23:39:37:alg:Debug:got -B - p <= -2
23:39:37:alg:Debug:l21: compute ub for '-A - r', start w/ min 0, maxV 10)
23:39:46:alg:Debug:got -A - r <= 0
23:39:46:alg:Debug:l21: compute ub for '-B - r', start w/ min -2, maxV 10)
23:39:54:alg:Debug:got -B - r <= -1
23:39:29:alg:Debug:l21: compute ub for '-d - r', start w/ min -2, maxV 10)
23:39:37:alg:Debug:got -d - r <= -1
23:39:38:alg:Debug:l21: compute ub for '-p - r', start w/ min -1, maxV 10)
23:39:46:alg:Debug:got -p - r <= -1
23:39:46:alg:Debug:l21: compute ub for '-A - d', start w/ min -2, maxV 10)
23:39:54:alg:Debug:got -A - d <= -1
23:39:29:alg:Debug:l21: compute ub for '-A - p', start w/ min -1, maxV 10)
23:39:37:alg:Debug:got -A - p <= -1
23:39:37:alg:Debug:l21: compute ub for '-q', start w/ min 0, maxV 10)
23:39:46:alg:Debug:got -q <= 0
23:39:46:alg:Debug:l21: compute ub for '-d', start w/ min -1, maxV 10)
23:39:54:alg:Debug:got -d <= -1
23:39:29:alg:Debug:l30: compute ub for '-d', start w/ min -1, maxV 10)
23:39:45:alg:Debug:got -d <= -1
23:39:45:alg:Debug:l30: compute ub for '-B', start w/ min -1, maxV 10)
23:39:53:alg:Debug:got -B <= -1
23:39:53:alg:Debug:l30: compute ub for '-B - q', start w/ min -1, maxV 10)
23:40:2:alg:Debug:got -B - q <= -1
23:39:29:alg:Debug:l30: compute ub for '-B - p', start w/ min -2, maxV 10)
23:39:45:alg:Debug:got -B - p <= -2
23:39:45:alg:Debug:l30: compute ub for '-B - r', start w/ min -1, maxV 10)
23:39:58:alg:Debug:got -B - r <= -1
23:39:58:alg:Debug:l30: compute ub for '-A - B', start w/ min -2, maxV 10)
23:40:3:alg:Debug:got -A - B <= -1
23:39:29:alg:Debug:l30: compute ub for '-A + q', start w/ min 0, maxV 10)
23:39:43:alg:Debug:got -A + q <= 0
23:39:43:alg:Debug:l30: compute ub for 'B - d', start w/ min 0, maxV 10)
23:39:58:alg:Debug:got B - d <= 0
23:39:58:alg:Debug:l30: compute ub for '-p - q', start w/ min -1, maxV 10)
23:40:4:alg:Debug:got -p - q <= -1
23:39:29:alg:Debug:l30: compute ub for '-A - d', start w/ min -2, maxV 10)
23:39:45:alg:Debug:got -A - d <= -1
23:39:45:alg:Debug:l30: compute ub for '-A - p', start w/ min -1, maxV 10)
23:39:59:alg:Debug:got -A - p <= -1
23:39:59:alg:Debug:l30: compute ub for '-q', start w/ min 0, maxV 10)
23:40:5:alg:Debug:got -q <= 0
23:39:29:alg:Debug:l21: compute ub for '-p - q', start w/ min -1, maxV 10)
23:39:37:alg:Debug:got -p - q <= -1
23:39:37:alg:Debug:l30: compute ub for '-A - q', start w/ min 0, maxV 10)
23:39:51:alg:Debug:got -A - q <= 0
23:39:52:alg:Debug:l30: compute ub for '-B - d', start w/ min -2, maxV 10)
23:40:5:alg:Debug:got -B - d <= -2
23:39:29:alg:Debug:l30: compute ub for '-p', start w/ min -1, maxV 10)
23:39:37:alg:Debug:got -p <= -1
23:39:37:alg:Debug:l30: compute ub for '-d + r', start w/ min -1, maxV 10)
23:39:53:alg:Debug:got -d + r <= -1
23:39:53:alg:Debug:l30: compute ub for '-d - q', start w/ min -2, maxV 10)
23:40:7:alg:Debug:got -d - q <= -1
23:39:29:alg:Debug:l30: compute ub for '-q - r', start w/ min 0, maxV 10)
23:39:44:alg:Debug:got -q - r <= 0
23:39:44:alg:Debug:l30: compute ub for '-A', start w/ min 0, maxV 10)
23:39:53:alg:Debug:got -A <= 0
23:39:53:alg:Debug:l30: compute ub for '-d + p', start w/ min 0, maxV 10)
23:40:7:alg:Debug:got -d + p <= 0
23:39:29:alg:Debug:l30: compute ub for '-r', start w/ min 0, maxV 10)
23:39:44:alg:Debug:got -r <= 0
23:39:44:alg:Debug:l30: compute ub for '-A - r', start w/ min 0, maxV 10)
23:39:57:alg:Debug:got -A - r <= 0
23:39:58:alg:Debug:l30: compute ub for '-d - p', start w/ min -2, maxV 10)
23:40:10:alg:Debug:got -d - p <= -2
23:39:29:alg:Debug:l30: compute ub for '-A + r', start w/ min 0, maxV 10)
23:39:43:alg:Debug:got -A + r <= 0
23:39:43:alg:Debug:l30: compute ub for '-d - r', start w/ min -1, maxV 10)
23:39:59:alg:Debug:got -d - r <= -1
23:39:59:alg:Debug:l30: compute ub for '-p - r', start w/ min -1, maxV 10)
23:40:11:alg:Debug:got -p - r <= -1
23:40:11:alg:Info:62 invs:
l21: -d + q <= -1, -d - q <= -1, q - r <= 0, -p - r <= -1, -d - r <= -1, -B - r <= -1, -A <= 0, -p + q <= -1, B - d <= 0, -A + q <= 0, -A + r <= 0, -q <= 0, -A - p <= -1, -A - d <= -1, -d + p <= 0, q <= 0, -d - p <= -2, -B - p <= -2, -A - r <= 0, -d <= -1, -r <= 0, q == 0, A - r == 0, B*p - d == 0, -p - q <= -1, -B + q <= -1, -p <= -1, -B - d <= -2, A - r <= 0, -B - q <= -1, -A - q <= 0, -B <= -1, -A - B <= -1, -q - r <= 0
l30: -B <= -1, -A - d <= -1, -A + q <= 0, -p - q <= -1, -A - B <= -1, B - d <= 0, -A - p <= -1, -B - q <= -1, -d <= -1, -B - r <= -1, -q <= 0, -B - p <= -2, B*q - A + r == 0, B*p - d == 0, -p <= -1, -B - d <= -2, -d + r <= -1, -A - q <= 0, -d - q <= -1, -A - r <= 0, -A + r <= 0, -A <= 0, -d - r <= -1, -d + p <= 0, -p - r <= -1, -q - r <= 0, -d - p <= -2, -r <= 0
23:40:11:alg:Info:test 62 invs on all 752 traces
23:40:12:alg:Info:find uniq invs
23:40:12:alg:Info:62 invs:
l21: -d + q <= -1, -d - q <= -1, q - r <= 0, -p - r <= -1, -d - r <= -1, -B - r <= -1, -A <= 0, -p + q <= -1, B - d <= 0, -A + q <= 0, -A + r <= 0, -q <= 0, -A - p <= -1, -A - d <= -1, -d + p <= 0, q <= 0, -d - p <= -2, -B - p <= -2, -A - r <= 0, -d <= -1, -r <= 0, q == 0, A - r == 0, B*p - d == 0, -p - q <= -1, -B + q <= -1, -p <= -1, -B - d <= -2, A - r <= 0, -B - q <= -1, -A - q <= 0, -B <= -1, -A - B <= -1, -q - r <= 0
l30: -B <= -1, -A - d <= -1, -A + q <= 0, -p - q <= -1, -A - B <= -1, B - d <= 0, -A - p <= -1, -B - q <= -1, -d <= -1, -B - r <= -1, -q <= 0, -B - p <= -2, B*q - A + r == 0, B*p - d == 0, -p <= -1, -B - d <= -2, -d + r <= -1, -A - q <= 0, -d - q <= -1, -A - r <= 0, -A + r <= 0, -A <= 0, -d - r <= -1, -d + p <= 0, -p - r <= -1, -q - r <= 0, -d - p <= -2, -r <= 0
23:40:12:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:40:13:alg:Info:removed 48 redundant invs
23:40:13:alg:Info:got 14 invs, 110 inps (test 60): 
l21: q == 0, B*p - d == 0, -A + r <= 0, -p + q <= -1, A - r <= 0, -A - r <= 0, -B <= -1
l30: -r <= 0, B - d <= 0, B*p - d == 0, B*q - A + r == 0, -d + r <= -1, -q <= 0, -B <= -1
23:40:13:alg:Info:*done* prog programs/nla/hard.c, invs 14, time 72.8213100433 s
23:40:13:alg:Debug:rm -rf /var/tmp/DIG2_QpEy5G
23:40:15:alg:Debug:src: /var/tmp/DIG2_g7wl1v/hard.c
23:40:15:alg:Info:analyze programs/nla/hard.c
23:40:15:alg:Info:set seed to: 2.0 (test 98)
23:40:15:miscs:Info:autodeg 3
23:40:15:alg:Info:check reachability
23:40:15:alg:Info:gen eqts at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:40:15:alg:Debug:l21: need more traces (10 eqts, need >= 126)
23:40:15:alg:Debug:obtain 13 new traces
23:40:15:alg:Debug:l21: need more traces (23 eqts, need >= 126)
23:40:15:alg:Debug:obtain 18 new traces
23:40:15:alg:Debug:l21: need more traces (41 eqts, need >= 126)
23:40:15:alg:Debug:obtain 24 new traces
23:40:15:alg:Debug:l21: need more traces (65 eqts, need >= 126)
23:40:16:alg:Debug:obtain 31 new traces
23:40:16:alg:Debug:l21: need more traces (96 eqts, need >= 126)
23:40:16:alg:Debug:obtain 40 new traces
23:40:16:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:40:16:alg:Debug:l21: infer using 126 exprs
23:40:16:miscs:Debug:solve 84 uks using 126 eqts
23:40:20:alg:Debug:l21: 3 candidates:
B*p - d == 0
A - r == 0
q == 0
23:40:20:alg:Debug:l21: check 3 unchecked (3 candidates)
23:40:20:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:40:16:alg:Debug:l30: infer using 126 exprs
23:40:16:miscs:Debug:solve 84 uks using 126 eqts
23:40:21:alg:Debug:l30: 2 candidates:
B*p - d == 0
B*q - A + r == 0
23:40:21:alg:Debug:l30: check 2 unchecked (2 candidates)
23:40:21:miscs:Debug:workloads 'prove' 2: [1, 1]
23:40:23:alg:Debug:l21: no disproved candidates -- break
23:40:24:alg:Debug:l30: no disproved candidates -- break
23:40:24:alg:Debug:l21: got 3 eqts, 0 new inps
23:40:24:alg:Debug:A - r == 0
q == 0
B*p - d == 0
23:40:24:alg:Debug:l30: got 2 eqts, 0 new inps
23:40:24:alg:Debug:B*q - A + r == 0
B*p - d == 0
23:40:24:alg:Info:5 invs:
l21: A - r == 0, q == 0, B*p - d == 0
l30: B*q - A + r == 0, B*p - d == 0
23:40:24:alg:Info:gen ieqs at 2 locs: l21 (int A, int B, int q, int r, int d, int p); l30 (int A, int B, int q, int r, int d, int p)
23:40:24:alg:Info:2 locs: check upperbounds for 144 terms
23:40:24:miscs:Debug:workloads 'prove' 20: [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 11]
23:40:41:alg:Info:2 locs: compute upperbounds for 57 terms
23:40:41:miscs:Debug:workloads 'guesscheck' 19: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
23:40:41:alg:Debug:l21: compute ub for '-d + q', start w/ min -1, maxV 10)
23:40:49:alg:Debug:got -d + q <= -1
23:40:49:alg:Debug:l21: compute ub for 'q - r', start w/ min 0, maxV 10)
23:40:56:alg:Debug:got q - r <= 0
23:40:56:alg:Debug:l21: compute ub for 'q', start w/ min 0, maxV 10)
23:41:5:alg:Debug:got q <= 0
23:40:41:alg:Debug:l21: compute ub for '-d - p', start w/ min -2, maxV 10)
23:40:50:alg:Debug:got -d - p <= -2
23:40:50:alg:Debug:l21: compute ub for 'B - d', start w/ min 0, maxV 10)
23:40:58:alg:Debug:got B - d <= 0
23:40:58:alg:Debug:l21: compute ub for '-p - r', start w/ min -1, maxV 10)
23:41:6:alg:Debug:got -p - r <= -1
23:40:41:alg:Debug:l21: compute ub for '-B - p', start w/ min -2, maxV 10)
23:40:50:alg:Debug:got -B - p <= -2
23:40:50:alg:Debug:l21: compute ub for '-B + q', start w/ min -1, maxV 10)
23:40:57:alg:Debug:got -B + q <= -1
23:40:58:alg:Debug:l21: compute ub for '-B - r', start w/ min -2, maxV 10)
23:41:6:alg:Debug:got -B - r <= -1
23:40:41:alg:Debug:l21: compute ub for '-A + q', start w/ min 0, maxV 10)
23:40:50:alg:Debug:got -A + q <= 0
23:40:50:alg:Debug:l21: compute ub for '-q', start w/ min 0, maxV 10)
23:40:58:alg:Debug:got -q <= 0
23:40:58:alg:Debug:l21: compute ub for '-A - p', start w/ min -1, maxV 10)
23:41:6:alg:Debug:got -A - p <= -1
23:40:41:alg:Debug:l21: compute ub for '-p - q', start w/ min -1, maxV 10)
23:40:50:alg:Debug:got -p - q <= -1
23:40:50:alg:Debug:l21: compute ub for '-r', start w/ min 0, maxV 10)
23:40:57:alg:Debug:got -r <= 0
23:40:58:alg:Debug:l21: compute ub for '-A - r', start w/ min 0, maxV 10)
23:41:6:alg:Debug:got -A - r <= 0
23:40:41:alg:Debug:l21: compute ub for '-A - B', start w/ min -2, maxV 10)
23:40:50:alg:Debug:got -A - B <= -1
23:40:50:alg:Debug:l21: compute ub for '-A - q', start w/ min 0, maxV 10)
23:40:58:alg:Debug:got -A - q <= 0
23:40:58:alg:Debug:l21: compute ub for '-p', start w/ min -1, maxV 10)
23:41:6:alg:Debug:got -p <= -1
23:40:41:alg:Debug:l21: compute ub for '-d', start w/ min -1, maxV 10)
23:40:50:alg:Debug:got -d <= -1
23:40:50:alg:Debug:l21: compute ub for '-B', start w/ min -1, maxV 10)
23:40:58:alg:Debug:got -B <= -1
23:40:58:alg:Debug:l21: compute ub for '-B - q', start w/ min -1, maxV 10)
23:41:6:alg:Debug:got -B - q <= -1
23:40:41:alg:Debug:l21: compute ub for '-A - d', start w/ min -2, maxV 10)
23:40:50:alg:Debug:got -A - d <= -1
23:40:50:alg:Debug:l21: compute ub for '-p + q', start w/ min -1, maxV 10)
23:40:58:alg:Debug:got -p + q <= -1
23:40:58:alg:Debug:l21: compute ub for '-d - r', start w/ min -2, maxV 10)
23:41:7:alg:Debug:got -d - r <= -1
23:40:41:alg:Debug:l21: compute ub for '-B - d', start w/ min -2, maxV 10)
23:40:50:alg:Debug:got -B - d <= -2
23:40:50:alg:Debug:l21: compute ub for '-d + p', start w/ min 0, maxV 10)
23:40:58:alg:Debug:got -d + p <= 0
23:40:58:alg:Debug:l21: compute ub for '-A', start w/ min 0, maxV 10)
23:41:7:alg:Debug:got -A <= 0
23:40:41:alg:Debug:l21: compute ub for '-q - r', start w/ min 0, maxV 10)
23:40:50:alg:Debug:got -q - r <= 0
23:40:50:alg:Debug:l21: compute ub for '-d - q', start w/ min -1, maxV 10)
23:40:58:alg:Debug:got -d - q <= -1
23:40:58:alg:Debug:l21: compute ub for '-A + r', start w/ min 0, maxV 10)
23:41:7:alg:Debug:got -A + r <= 0
23:40:41:alg:Debug:l30: compute ub for '-d', start w/ min -1, maxV 10)
23:40:57:alg:Debug:got -d <= -1
23:40:57:alg:Debug:l30: compute ub for '-B', start w/ min -1, maxV 10)
23:41:6:alg:Debug:got -B <= -1
23:41:6:alg:Debug:l30: compute ub for '-B - q', start w/ min -1, maxV 10)
23:41:15:alg:Debug:got -B - q <= -1
23:40:41:alg:Debug:l30: compute ub for '-B - p', start w/ min -2, maxV 10)
23:40:57:alg:Debug:got -B - p <= -2
23:40:57:alg:Debug:l30: compute ub for '-B - r', start w/ min -1, maxV 10)
23:41:10:alg:Debug:got -B - r <= -1
23:41:10:alg:Debug:l30: compute ub for '-A - B', start w/ min -2, maxV 10)
23:41:16:alg:Debug:got -A - B <= -1
23:40:41:alg:Debug:l30: compute ub for '-A - q', start w/ min 0, maxV 10)
23:40:56:alg:Debug:got -A - q <= 0
23:40:56:alg:Debug:l30: compute ub for '-d + r', start w/ min -1, maxV 10)
23:41:11:alg:Debug:got -d + r <= -1
23:41:11:alg:Debug:l30: compute ub for '-p - q', start w/ min -1, maxV 10)
23:41:16:alg:Debug:got -p - q <= -1
23:40:41:alg:Debug:l30: compute ub for 'B - d', start w/ min 0, maxV 10)
23:40:57:alg:Debug:got B - d <= 0
23:40:57:alg:Debug:l30: compute ub for '-p - r', start w/ min -1, maxV 10)
23:41:12:alg:Debug:got -p - r <= -1
23:41:12:alg:Debug:l30: compute ub for '-p', start w/ min -1, maxV 10)
23:41:18:alg:Debug:got -p <= -1
23:40:41:alg:Debug:l30: compute ub for '-A + q', start w/ min 0, maxV 10)
23:40:56:alg:Debug:got -A + q <= 0
23:40:56:alg:Debug:l30: compute ub for '-q', start w/ min 0, maxV 10)
23:41:5:alg:Debug:got -q <= 0
23:41:5:alg:Debug:l30: compute ub for '-A - p', start w/ min -1, maxV 10)
23:41:18:alg:Debug:got -A - p <= -1
23:40:41:alg:Debug:l30: compute ub for '-A', start w/ min 0, maxV 10)
23:40:50:alg:Debug:got -A <= 0
23:40:50:alg:Debug:l30: compute ub for '-q - r', start w/ min 0, maxV 10)
23:41:5:alg:Debug:got -q - r <= 0
23:41:5:alg:Debug:l30: compute ub for '-d - q', start w/ min -2, maxV 10)
23:41:19:alg:Debug:got -d - q <= -1
23:40:41:alg:Debug:l21: compute ub for 'A - r', start w/ min 0, maxV 10)
23:40:49:alg:Debug:got A - r <= 0
23:40:49:alg:Debug:l30: compute ub for '-B - d', start w/ min -2, maxV 10)
23:41:5:alg:Debug:got -B - d <= -2
23:41:5:alg:Debug:l30: compute ub for '-d + p', start w/ min 0, maxV 10)
23:41:19:alg:Debug:got -d + p <= 0
23:40:41:alg:Debug:l30: compute ub for '-r', start w/ min 0, maxV 10)
23:40:57:alg:Debug:got -r <= 0
23:40:57:alg:Debug:l30: compute ub for '-A - r', start w/ min 0, maxV 10)
23:41:9:alg:Debug:got -A - r <= 0
23:41:9:alg:Debug:l30: compute ub for '-d - p', start w/ min -2, maxV 10)
23:41:22:alg:Debug:got -d - p <= -2
23:40:41:alg:Debug:l30: compute ub for '-A + r', start w/ min 0, maxV 10)
23:40:56:alg:Debug:got -A + r <= 0
23:40:56:alg:Debug:l30: compute ub for '-A - d', start w/ min -2, maxV 10)
23:41:11:alg:Debug:got -A - d <= -1
23:41:12:alg:Debug:l30: compute ub for '-d - r', start w/ min -1, maxV 10)
23:41:24:alg:Debug:got -d - r <= -1
23:41:24:alg:Info:62 invs:
l21: -B <= -1, -A - d <= -1, -d <= -1, -A <= 0, -r <= 0, -p + q <= -1, -A + r <= 0, -B - q <= -1, -d + p <= 0, -q - r <= 0, -A - r <= 0, -B - d <= -2, -p - q <= -1, -q <= 0, -A - p <= -1, -d - q <= -1, -A - q <= 0, -d - r <= -1, -A - B <= -1, -p <= -1, -A + q <= 0, -B - r <= -1, -B + q <= -1, -p - r <= -1, B - d <= 0, -B - p <= -2, q - r <= 0, -d + q <= -1, -d - p <= -2, q <= 0, A - r == 0, q == 0, B*p - d == 0, A - r <= 0
l30: B - d <= 0, -B - q <= -1, -d <= -1, -q <= 0, -A + q <= 0, -p - r <= -1, -p - q <= -1, -A - q <= 0, -B <= -1, -B - r <= -1, -B - p <= -2, -d + r <= -1, -A - B <= -1, -p <= -1, B*q - A + r == 0, B*p - d == 0, -d - q <= -1, -q - r <= 0, -r <= 0, -A - d <= -1, -A + r <= 0, -d - p <= -2, -A - p <= -1, -B - d <= -2, -A - r <= 0, -d - r <= -1, -A <= 0, -d + p <= 0
23:41:24:alg:Info:test 62 invs on all 748 traces
23:41:25:alg:Info:find uniq invs
23:41:25:alg:Info:62 invs:
l21: -B <= -1, -A - d <= -1, -d <= -1, -A <= 0, -r <= 0, -p + q <= -1, -A + r <= 0, -B - q <= -1, -d + p <= 0, -q - r <= 0, -A - r <= 0, -B - d <= -2, -p - q <= -1, -q <= 0, -A - p <= -1, -d - q <= -1, -A - q <= 0, -d - r <= -1, -A - B <= -1, -p <= -1, -A + q <= 0, -B - r <= -1, -B + q <= -1, -p - r <= -1, B - d <= 0, -B - p <= -2, q - r <= 0, -d + q <= -1, -d - p <= -2, q <= 0, A - r == 0, q == 0, B*p - d == 0, A - r <= 0
l30: B - d <= 0, -B - q <= -1, -d <= -1, -q <= 0, -A + q <= 0, -p - r <= -1, -p - q <= -1, -A - q <= 0, -B <= -1, -B - r <= -1, -B - p <= -2, -d + r <= -1, -A - B <= -1, -p <= -1, B*q - A + r == 0, B*p - d == 0, -d - q <= -1, -q - r <= 0, -r <= 0, -A - d <= -1, -A + r <= 0, -d - p <= -2, -A - p <= -1, -B - d <= -2, -A - r <= 0, -d - r <= -1, -A <= 0, -d + p <= 0
23:41:25:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:41:26:alg:Info:removed 48 redundant invs
23:41:26:alg:Info:got 14 invs, 110 inps (test 45): 
l21: -A + r <= 0, A - r <= 0, B - d <= 0, B*p - d == 0, -B - q <= -1, q == 0, -A - r <= 0
l30: -d + r <= -1, -q <= 0, B*q - A + r == 0, -r <= 0, -p <= -1, B*p - d == 0, -B <= -1
23:41:26:alg:Info:*done* prog programs/nla/hard.c, invs 14, time 71.5015890598 s
23:41:26:alg:Debug:rm -rf /var/tmp/DIG2_g7wl1v
running cohencu
23:41:28:alg:Debug:src: /var/tmp/DIG2_e3Alwc/cohencu.c
23:41:28:alg:Info:analyze programs/nla/cohencu.c
23:41:28:alg:Info:set seed to: 0.0 (test 11)
23:41:28:miscs:Info:autodeg 4
23:41:28:alg:Info:check reachability
23:41:28:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int x, int y, int z)
23:41:28:alg:Debug:l19: infer using 189 exprs
23:41:28:miscs:Debug:solve 126 uks using 189 eqts
23:41:44:alg:Debug:l19: 3 candidates:
y*z - 18*x - 12*y + 2*z - 6 == 0
z^2 - 12*y - 6*z + 12 == 0
6*n - z + 6 == 0
23:41:44:alg:Debug:l19: check 3 unchecked (3 candidates)
23:41:44:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:41:47:alg:Debug:l19: no disproved candidates -- break
23:41:47:alg:Debug:l19: got 3 eqts, 0 new inps
23:41:47:alg:Debug:y*z - 18*x - 12*y + 2*z - 6 == 0
6*n - z + 6 == 0
(z*z) - 12*y - 6*z + 12 == 0
23:41:47:alg:Info:3 invs:
l19: y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0, (z*z) - 12*y - 6*z + 12 == 0
23:41:47:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int x, int y, int z)
23:41:47:alg:Info:1 locs: check upperbounds for 50 terms
23:41:47:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:41:48:alg:Info:1 locs: compute upperbounds for 14 terms
23:41:48:miscs:Debug:workloads 'guesscheck' 7: [2, 2, 2, 2, 2, 2, 2]
23:41:48:alg:Debug:l19: compute ub for '-y', start w/ min -1, maxV 10)
23:41:49:alg:Debug:got -y <= -1
23:41:49:alg:Debug:l19: compute ub for '-n - x', start w/ min 0, maxV 10)
23:41:50:alg:Debug:got -n - x <= 0
23:41:48:alg:Debug:l19: compute ub for '-y + z', start w/ min 5, maxV 10)
23:41:49:alg:Debug:got -y + z <= 5
23:41:49:alg:Debug:l19: compute ub for 'n - z', start w/ min -6, maxV 10)
23:41:50:alg:Debug:got n - z <= -6
23:41:48:alg:Debug:l19: compute ub for 'n - x', start w/ min 0, maxV 10)
23:41:49:alg:Debug:got n - x <= 0
23:41:49:alg:Debug:l19: compute ub for '-x - y', start w/ min -1, maxV 10)
23:41:50:alg:Debug:got -x - y <= -1
23:41:48:alg:Debug:l19: compute ub for '-z', start w/ min -6, maxV 10)
23:41:49:alg:Debug:got -z <= -6
23:41:49:alg:Debug:l19: compute ub for '-n - y', start w/ min -1, maxV 10)
23:41:50:alg:Debug:got -n - y <= -1
23:41:48:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:41:49:alg:Debug:got -n <= 0
23:41:49:alg:Debug:l19: compute ub for '-x - z', start w/ min -6, maxV 10)
23:41:50:alg:Debug:got -x - z <= -6
23:41:48:alg:Debug:l19: compute ub for '-n - z', start w/ min -6, maxV 10)
23:41:49:alg:Debug:got -n - z <= -6
23:41:49:alg:Debug:l19: compute ub for 'n - y', start w/ min -1, maxV 10)
23:41:50:alg:Debug:got n - y <= -1
23:41:48:alg:Debug:l19: compute ub for '-y - z', start w/ min -7, maxV 10)
23:41:49:alg:Debug:got -y - z <= -7
23:41:49:alg:Debug:l19: compute ub for '-x', start w/ min 0, maxV 10)
23:41:50:alg:Debug:got -x <= 0
23:41:50:alg:Info:17 invs:
l19: -y <= -1, -n - x <= 0, -x - y <= -1, n - x <= 0, -z <= -6, n - z <= -6, -y + z <= 5, y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0, (z*z) - 12*y - 6*z + 12 == 0, -x <= 0, n - y <= -1, -x - z <= -6, -y - z <= -7, -n - z <= -6, -n <= 0, -n - y <= -1
23:41:50:alg:Info:test 17 invs on all 525 traces
23:41:50:alg:Info:find uniq invs
23:41:50:alg:Info:17 invs:
l19: -y <= -1, -n - x <= 0, -x - y <= -1, n - x <= 0, -z <= -6, n - z <= -6, -y + z <= 5, y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0, (z*z) - 12*y - 6*z + 12 == 0, -x <= 0, n - y <= -1, -x - z <= -6, -y - z <= -7, -n - z <= -6, -n <= 0, -n - y <= -1
23:41:51:alg:Info:removed 12 redundant invs
23:41:51:alg:Info:got 5 invs, 24 inps (test 51): 
l19: -n - z <= -6, y*z - 18*x - 12*y + 2*z - 6 == 0, (z*z) - 12*y - 6*z + 12 == 0, 6*n - z + 6 == 0, n - x <= 0
23:41:51:alg:Info:*done* prog programs/nla/cohencu.c, invs 5, time 23.1172161102 s
23:41:51:alg:Debug:rm -rf /var/tmp/DIG2_e3Alwc
23:41:52:alg:Debug:src: /var/tmp/DIG2_JVm4SC/cohencu.c
23:41:52:alg:Info:analyze programs/nla/cohencu.c
23:41:52:alg:Info:set seed to: 1.0 (test 83)
23:41:52:miscs:Info:autodeg 4
23:41:52:alg:Info:check reachability
23:41:52:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int x, int y, int z)
23:41:52:alg:Debug:l19: infer using 189 exprs
23:41:52:miscs:Debug:solve 126 uks using 189 eqts
23:42:9:alg:Debug:l19: 3 candidates:
y*z - 18*x - 12*y + 2*z - 6 == 0
z^2 - 12*y - 6*z + 12 == 0
6*n - z + 6 == 0
23:42:9:alg:Debug:l19: check 3 unchecked (3 candidates)
23:42:9:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:42:12:alg:Debug:l19: no disproved candidates -- break
23:42:12:alg:Debug:l19: got 3 eqts, 0 new inps
23:42:12:alg:Debug:(z*z) - 12*y - 6*z + 12 == 0
6*n - z + 6 == 0
y*z - 18*x - 12*y + 2*z - 6 == 0
23:42:12:alg:Info:3 invs:
l19: (z*z) - 12*y - 6*z + 12 == 0, 6*n - z + 6 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0
23:42:12:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int x, int y, int z)
23:42:12:alg:Info:1 locs: check upperbounds for 50 terms
23:42:12:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:42:13:alg:Info:1 locs: compute upperbounds for 14 terms
23:42:13:miscs:Debug:workloads 'guesscheck' 7: [2, 2, 2, 2, 2, 2, 2]
23:42:13:alg:Debug:l19: compute ub for '-n - z', start w/ min -6, maxV 10)
23:42:13:alg:Debug:got -n - z <= -6
23:42:14:alg:Debug:l19: compute ub for '-y + z', start w/ min 5, maxV 10)
23:42:14:alg:Debug:got -y + z <= 5
23:42:13:alg:Debug:l19: compute ub for '-n - y', start w/ min -1, maxV 10)
23:42:13:alg:Debug:got -n - y <= -1
23:42:14:alg:Debug:l19: compute ub for 'n - x', start w/ min 0, maxV 10)
23:42:14:alg:Debug:got n - x <= 0
23:42:13:alg:Debug:l19: compute ub for '-z', start w/ min -6, maxV 10)
23:42:13:alg:Debug:got -z <= -6
23:42:14:alg:Debug:l19: compute ub for '-n - x', start w/ min 0, maxV 10)
23:42:14:alg:Debug:got -n - x <= 0
23:42:13:alg:Debug:l19: compute ub for 'n - z', start w/ min -6, maxV 10)
23:42:13:alg:Debug:got n - z <= -6
23:42:14:alg:Debug:l19: compute ub for '-y', start w/ min -1, maxV 10)
23:42:14:alg:Debug:got -y <= -1
23:42:13:alg:Debug:l19: compute ub for '-x - z', start w/ min -6, maxV 10)
23:42:13:alg:Debug:got -x - z <= -6
23:42:14:alg:Debug:l19: compute ub for '-x', start w/ min 0, maxV 10)
23:42:14:alg:Debug:got -x <= 0
23:42:13:alg:Debug:l19: compute ub for '-x - y', start w/ min -1, maxV 10)
23:42:14:alg:Debug:got -x - y <= -1
23:42:14:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:42:14:alg:Debug:got -n <= 0
23:42:13:alg:Debug:l19: compute ub for '-y - z', start w/ min -7, maxV 10)
23:42:14:alg:Debug:got -y - z <= -7
23:42:14:alg:Debug:l19: compute ub for 'n - y', start w/ min -1, maxV 10)
23:42:14:alg:Debug:got n - y <= -1
23:42:14:alg:Info:17 invs:
l19: -z <= -6, n - x <= 0, -n - x <= 0, -n - y <= -1, n - z <= -6, -n - z <= -6, -y + z <= 5, (z*z) - 12*y - 6*z + 12 == 0, 6*n - z + 6 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0, -y - z <= -7, -n <= 0, n - y <= -1, -x - z <= -6, -x <= 0, -x - y <= -1, -y <= -1
23:42:14:alg:Info:test 17 invs on all 501 traces
23:42:15:alg:Info:find uniq invs
23:42:15:alg:Info:17 invs:
l19: -z <= -6, n - x <= 0, -n - x <= 0, -n - y <= -1, n - z <= -6, -n - z <= -6, -y + z <= 5, (z*z) - 12*y - 6*z + 12 == 0, 6*n - z + 6 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0, -y - z <= -7, -n <= 0, n - y <= -1, -x - z <= -6, -x <= 0, -x - y <= -1, -y <= -1
23:42:15:alg:Info:removed 12 redundant invs
23:42:15:alg:Info:got 5 invs, 24 inps (test 60): 
l19: -n - z <= -6, (z*z) - 12*y - 6*z + 12 == 0, 6*n - z + 6 == 0, n - x <= 0, y*z - 18*x - 12*y + 2*z - 6 == 0
23:42:15:alg:Info:*done* prog programs/nla/cohencu.c, invs 5, time 23.5296168327 s
23:42:15:alg:Debug:rm -rf /var/tmp/DIG2_JVm4SC
23:42:16:alg:Debug:src: /var/tmp/DIG2_ev2L1Z/cohencu.c
23:42:16:alg:Info:analyze programs/nla/cohencu.c
23:42:16:alg:Info:set seed to: 2.0 (test 98)
23:42:16:miscs:Info:autodeg 4
23:42:16:alg:Info:check reachability
23:42:16:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int x, int y, int z)
23:42:17:alg:Debug:l19: infer using 189 exprs
23:42:17:miscs:Debug:solve 126 uks using 189 eqts
23:42:33:alg:Debug:l19: 3 candidates:
y*z - 18*x - 12*y + 2*z - 6 == 0
z^2 - 12*y - 6*z + 12 == 0
6*n - z + 6 == 0
23:42:33:alg:Debug:l19: check 3 unchecked (3 candidates)
23:42:33:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
23:42:36:alg:Debug:l19: no disproved candidates -- break
23:42:36:alg:Debug:l19: got 3 eqts, 0 new inps
23:42:36:alg:Debug:(z*z) - 12*y - 6*z + 12 == 0
y*z - 18*x - 12*y + 2*z - 6 == 0
6*n - z + 6 == 0
23:42:36:alg:Info:3 invs:
l19: (z*z) - 12*y - 6*z + 12 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0
23:42:36:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int x, int y, int z)
23:42:36:alg:Info:1 locs: check upperbounds for 50 terms
23:42:36:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:42:37:alg:Info:1 locs: compute upperbounds for 14 terms
23:42:37:miscs:Debug:workloads 'guesscheck' 7: [2, 2, 2, 2, 2, 2, 2]
23:42:37:alg:Debug:l19: compute ub for '-y + z', start w/ min 5, maxV 10)
23:42:38:alg:Debug:got -y + z <= 5
23:42:38:alg:Debug:l19: compute ub for '-n - z', start w/ min -6, maxV 10)
23:42:38:alg:Debug:got -n - z <= -6
23:42:37:alg:Debug:l19: compute ub for 'n - y', start w/ min -1, maxV 10)
23:42:38:alg:Debug:got n - y <= -1
23:42:38:alg:Debug:l19: compute ub for '-x', start w/ min 0, maxV 10)
23:42:38:alg:Debug:got -x <= 0
23:42:37:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:42:38:alg:Debug:got -n <= 0
23:42:38:alg:Debug:l19: compute ub for 'n - z', start w/ min -6, maxV 10)
23:42:38:alg:Debug:got n - z <= -6
23:42:37:alg:Debug:l19: compute ub for '-n - x', start w/ min 0, maxV 10)
23:42:38:alg:Debug:got -n - x <= 0
23:42:38:alg:Debug:l19: compute ub for '-z', start w/ min -6, maxV 10)
23:42:38:alg:Debug:got -z <= -6
23:42:37:alg:Debug:l19: compute ub for '-x - y', start w/ min -1, maxV 10)
23:42:38:alg:Debug:got -x - y <= -1
23:42:38:alg:Debug:l19: compute ub for '-y', start w/ min -1, maxV 10)
23:42:38:alg:Debug:got -y <= -1
23:42:37:alg:Debug:l19: compute ub for '-x - z', start w/ min -6, maxV 10)
23:42:38:alg:Debug:got -x - z <= -6
23:42:38:alg:Debug:l19: compute ub for '-n - y', start w/ min -1, maxV 10)
23:42:38:alg:Debug:got -n - y <= -1
23:42:37:alg:Debug:l19: compute ub for 'n - x', start w/ min 0, maxV 10)
23:42:38:alg:Debug:got n - x <= 0
23:42:38:alg:Debug:l19: compute ub for '-y - z', start w/ min -7, maxV 10)
23:42:39:alg:Debug:got -y - z <= -7
23:42:39:alg:Info:17 invs:
l19: -y + z <= 5, -n - x <= 0, -n - z <= -6, -n <= 0, n - y <= -1, n - z <= -6, -x <= 0, (z*z) - 12*y - 6*z + 12 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0, -y - z <= -7, -y <= -1, -n - y <= -1, -x - z <= -6, n - x <= 0, -x - y <= -1, -z <= -6
23:42:39:alg:Info:test 17 invs on all 534 traces
23:42:39:alg:Info:find uniq invs
23:42:39:alg:Info:17 invs:
l19: -y + z <= 5, -n - x <= 0, -n - z <= -6, -n <= 0, n - y <= -1, n - z <= -6, -x <= 0, (z*z) - 12*y - 6*z + 12 == 0, y*z - 18*x - 12*y + 2*z - 6 == 0, 6*n - z + 6 == 0, -y - z <= -7, -y <= -1, -n - y <= -1, -x - z <= -6, n - x <= 0, -x - y <= -1, -z <= -6
23:42:40:alg:Info:removed 12 redundant invs
23:42:40:alg:Info:got 5 invs, 24 inps (test 45): 
l19: (z*z) - 12*y - 6*z + 12 == 0, n - x <= 0, 6*n - z + 6 == 0, -x <= 0, y*z - 18*x - 12*y + 2*z - 6 == 0
23:42:40:alg:Info:*done* prog programs/nla/cohencu.c, invs 5, time 23.105025053 s
23:42:40:alg:Debug:rm -rf /var/tmp/DIG2_ev2L1Z
running divbin
23:42:41:alg:Debug:src: /var/tmp/DIG2_OkjiWz/divbin.c
23:42:41:alg:Info:analyze programs/nla/divbin.c
23:42:41:alg:Info:set seed to: 0.0 (test 11)
23:42:41:miscs:Info:autodeg 4
23:42:41:alg:Info:check reachability
23:42:41:alg:Info:gen eqts at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:42:41:alg:Debug:l20: need more traces (11 eqts, need >= 189)
23:42:41:alg:Debug:obtain 201 new traces
23:42:42:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:42:42:alg:Debug:l12: infer using 189 exprs
23:42:42:miscs:Debug:solve 126 uks using 189 eqts
23:42:49:alg:Debug:l12: 2 candidates:
A - r == 0
q == 0
23:42:49:alg:Debug:l12: check 2 unchecked (2 candidates)
23:42:49:miscs:Debug:workloads 'prove' 2: [1, 1]
23:42:52:alg:Debug:l12: no disproved candidates -- break
23:42:42:alg:Debug:l20: infer using 189 exprs
23:42:42:miscs:Debug:solve 126 uks using 189 eqts
23:42:57:alg:Debug:l20: 1 candidates:
b*q - A + r == 0
23:42:57:alg:Debug:l20: check 1 unchecked (1 candidates)
23:43:0:alg:Debug:l20: no disproved candidates -- break
23:43:0:alg:Debug:l12: got 2 eqts, 0 new inps
23:43:0:alg:Debug:q == 0
A - r == 0
23:43:0:alg:Debug:l20: got 1 eqts, 0 new inps
23:43:0:alg:Debug:b*q - A + r == 0
23:43:0:alg:Info:3 invs:
l20: b*q - A + r == 0
l12: q == 0, A - r == 0
23:43:0:alg:Info:gen ieqs at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:43:0:alg:Info:2 locs: check upperbounds for 100 terms
23:43:0:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
23:43:15:alg:Info:2 locs: compute upperbounds for 45 terms
23:43:15:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7]
23:43:15:alg:Debug:l20: compute ub for '-b - q', start w/ min -4, maxV 10)
23:43:28:alg:Debug:got -b - q <= -2
23:43:28:alg:Debug:l20: compute ub for 'q - r', start w/ min 9, maxV 10)
23:43:31:alg:Debug:got q - r <= 9
23:43:15:alg:Debug:l20: compute ub for '-b + q', start w/ min 9, maxV 10)
23:43:18:alg:Debug:got -b + q <= 9
23:43:19:alg:Debug:l20: compute ub for '-A - b', start w/ min -6, maxV 10)
23:43:31:alg:Debug:got -A - b <= -2
23:43:15:alg:Debug:l20: compute ub for '-B - q', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -B - q <= -1
23:43:31:alg:Debug:l20: compute ub for '-B + q', start w/ min 9, maxV 10)
23:43:34:alg:Debug:got -B + q <= 9
23:43:15:alg:Debug:l20: compute ub for '-A - B', start w/ min -6, maxV 10)
23:43:25:alg:Debug:got -A - B <= -2
23:43:25:alg:Debug:l20: compute ub for 'B - b', start w/ min 0, maxV 10)
23:43:40:alg:Debug:got B - b <= 0
23:43:15:alg:Debug:l20: compute ub for '-A - r', start w/ min -4, maxV 10)
23:43:28:alg:Debug:got -A - r <= -1
23:43:28:alg:Debug:l20: compute ub for '-q', start w/ min 0, maxV 10)
23:43:44:alg:Debug:got -q <= 0
23:43:15:alg:Debug:l12: compute ub for '-A + q', start w/ min -2, maxV 10)
23:43:31:alg:Debug:got -A + q <= -1
23:43:31:alg:Debug:l12: compute ub for '-A - r', start w/ min -4, maxV 10)
23:43:44:alg:Debug:got -A - r <= -2
23:43:15:alg:Debug:l12: compute ub for '-B - r', start w/ min -6, maxV 10)
23:43:28:alg:Debug:got -B - r <= -2
23:43:28:alg:Debug:l12: compute ub for '-b', start w/ min -1, maxV 10)
23:43:44:alg:Debug:got -b <= -1
23:43:15:alg:Debug:l12: compute ub for '-A - B', start w/ min -6, maxV 10)
23:43:28:alg:Debug:got -A - B <= -2
23:43:28:alg:Debug:l12: compute ub for 'B - b', start w/ min 0, maxV 10)
23:43:44:alg:Debug:got B - b <= 0
23:43:15:alg:Debug:l12: compute ub for '-B', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -B <= -1
23:43:31:alg:Debug:l12: compute ub for '-B + q', start w/ min -1, maxV 10)
23:43:46:alg:Debug:got -B + q <= -1
23:43:15:alg:Debug:l12: compute ub for '-A + r', start w/ min 0, maxV 10)
23:43:31:alg:Debug:got -A + r <= 0
23:43:31:alg:Debug:l12: compute ub for '-A - q', start w/ min -2, maxV 10)
23:43:46:alg:Debug:got -A - q <= -1
23:43:15:alg:Debug:l12: compute ub for '-A', start w/ min -2, maxV 10)
23:43:31:alg:Debug:got -A <= -1
23:43:31:alg:Debug:l12: compute ub for '-q - r', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got -q - r <= -1
23:43:15:alg:Debug:l20: compute ub for '-A + r', start w/ min 0, maxV 10)
23:43:31:alg:Debug:got -A + r <= 0
23:43:31:alg:Debug:l20: compute ub for '-b + r', start w/ min -1, maxV 10)
23:43:47:alg:Debug:got -b + r <= -1
23:43:15:alg:Debug:l20: compute ub for '-A - q', start w/ min -2, maxV 10)
23:43:31:alg:Debug:got -A - q <= -1
23:43:31:alg:Debug:l20: compute ub for '-B - r', start w/ min -1, maxV 10)
23:43:47:alg:Debug:got -B - r <= -1
23:43:15:alg:Debug:l20: compute ub for '-A + q', start w/ min 0, maxV 10)
23:43:31:alg:Debug:got -A + q <= 0
23:43:31:alg:Debug:l20: compute ub for '-B - b', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got -B - b <= -2
23:43:15:alg:Debug:l20: compute ub for '-q - r', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -q - r <= -1
23:43:31:alg:Debug:l20: compute ub for '-b - r', start w/ min -1, maxV 10)
23:43:47:alg:Debug:got -b - r <= -1
23:43:15:alg:Debug:l20: compute ub for '-b', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -b <= -1
23:43:31:alg:Debug:l20: compute ub for '-A', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got -A <= -1
23:43:15:alg:Debug:l12: compute ub for '-q', start w/ min 0, maxV 10)
23:43:31:alg:Debug:got -q <= 0
23:43:31:alg:Debug:l12: compute ub for '-r', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got -r <= -1
23:43:15:alg:Debug:l12: compute ub for '-B - q', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -B - q <= -1
23:43:31:alg:Debug:l12: compute ub for '-B - b', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got -B - b <= -2
23:43:15:alg:Debug:l20: compute ub for '-r', start w/ min 0, maxV 10)
23:43:31:alg:Debug:got -r <= 0
23:43:31:alg:Debug:l20: compute ub for '-B', start w/ min -1, maxV 10)
23:43:47:alg:Debug:got -B <= -1
23:43:15:alg:Debug:l12: compute ub for '-b - q', start w/ min -1, maxV 10)
23:43:31:alg:Debug:got -b - q <= -1
23:43:31:alg:Debug:l12: compute ub for 'q - r', start w/ min -2, maxV 10)
23:43:47:alg:Debug:got q - r <= -1
23:43:47:alg:Debug:l12: compute ub for 'q', start w/ min 0, maxV 10)
23:43:57:alg:Debug:got q <= 0
23:43:58:alg:Debug:l12: compute ub for '-b + q', start w/ min -1, maxV 10)
23:44:8:alg:Debug:got -b + q <= -1
23:44:8:alg:Debug:l12: compute ub for '-A - b', start w/ min -6, maxV 10)
23:44:17:alg:Debug:got -A - b <= -2
23:44:17:alg:Debug:l12: compute ub for 'A - r', start w/ min 0, maxV 10)
23:44:27:alg:Debug:got A - r <= 0
23:44:27:alg:Debug:l12: compute ub for '-b - r', start w/ min -6, maxV 10)
23:44:36:alg:Debug:got -b - r <= -2
23:44:36:alg:Info:48 invs:
l20: -A <= -1, -A + r <= 0, -B - r <= -1, -q - r <= -1, -b <= -1, -B - b <= -2, -b + r <= -1, -A - q <= -1, -A + q <= 0, -b - r <= -1, -A - b <= -2, -b - q <= -2, q - r <= 9, -b + q <= 9, -B - q <= -1, -q <= 0, -A - r <= -1, -A - B <= -2, -B + q <= 9, B - b <= 0, -r <= 0, -B <= -1, b*q - A + r == 0
l12: -B - r <= -2, -b <= -1, -A - r <= -2, -A <= -1, -A - B <= -2, -B + q <= -1, -q - r <= -1, -A + q <= -1, B - b <= 0, -B <= -1, -A + r <= 0, -A - q <= -1, -b - q <= -1, -B - b <= -2, -q <= 0, A - r <= 0, -b + q <= -1, -b - r <= -2, q <= 0, -B - q <= -1, q - r <= -1, -r <= -1, -A - b <= -2, q == 0, A - r == 0
23:44:36:alg:Info:test 48 invs on all 856 traces
23:44:36:ds:Warn:l20: -B + q <= 9 disproved
23:44:37:ds:Warn:l20: -b + q <= 9 disproved
23:44:37:ds:Warn:l20: q - r <= 9 disproved
23:44:37:alg:Info:find uniq invs
23:44:37:alg:Info:45 invs:
l20: -A <= -1, -A + r <= 0, -B - r <= -1, -q - r <= -1, -b <= -1, -B - b <= -2, -b + r <= -1, -A - q <= -1, -A + q <= 0, -b - r <= -1, -A - b <= -2, -b - q <= -2, -B - q <= -1, -q <= 0, -A - r <= -1, -A - B <= -2, B - b <= 0, -r <= 0, -B <= -1, b*q - A + r == 0
l12: -B - r <= -2, -b <= -1, -A - r <= -2, -A <= -1, -A - B <= -2, -B + q <= -1, -q - r <= -1, -A + q <= -1, B - b <= 0, -B <= -1, -A + r <= 0, -A - q <= -1, -b - q <= -1, -B - b <= -2, -q <= 0, A - r <= 0, -b + q <= -1, -b - r <= -2, q <= 0, -B - q <= -1, q - r <= -1, -r <= -1, -A - b <= -2, q == 0, A - r == 0
23:44:37:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:44:38:alg:Info:removed 33 redundant invs
23:44:38:alg:Info:got 12 invs, 109 inps (test 51): 
l20: -q <= 0, -b + r <= -1, -B <= -1, b*q - A + r == 0, -q - r <= -1, B - b <= 0, -r <= 0
l12: q == 0, B - b <= 0, -B - q <= -1, A - r == 0, -q - r <= -1
23:44:38:alg:Info:*done* prog programs/nla/divbin.c, invs 12, time 117.00496316 s
23:44:38:alg:Debug:rm -rf /var/tmp/DIG2_OkjiWz
23:44:39:alg:Debug:src: /var/tmp/DIG2_HP6X99/divbin.c
23:44:39:alg:Info:analyze programs/nla/divbin.c
23:44:39:alg:Info:set seed to: 1.0 (test 83)
23:44:39:miscs:Info:autodeg 4
23:44:39:alg:Info:check reachability
23:44:39:alg:Info:gen eqts at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:44:39:alg:Debug:l20: need more traces (9 eqts, need >= 189)
23:44:40:alg:Debug:obtain 196 new traces
23:44:40:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:44:40:alg:Debug:l12: infer using 189 exprs
23:44:40:miscs:Debug:solve 126 uks using 189 eqts
23:44:48:alg:Debug:l12: 2 candidates:
A - r == 0
q == 0
23:44:48:alg:Debug:l12: check 2 unchecked (2 candidates)
23:44:48:miscs:Debug:workloads 'prove' 2: [1, 1]
23:44:51:alg:Debug:l12: no disproved candidates -- break
23:44:40:alg:Debug:l20: infer using 189 exprs
23:44:40:miscs:Debug:solve 126 uks using 189 eqts
23:44:55:alg:Debug:l20: 1 candidates:
b*q - A + r == 0
23:44:55:alg:Debug:l20: check 1 unchecked (1 candidates)
23:44:58:alg:Debug:l20: no disproved candidates -- break
23:44:58:alg:Debug:l12: got 2 eqts, 0 new inps
23:44:58:alg:Debug:q == 0
A - r == 0
23:44:58:alg:Debug:l20: got 1 eqts, 0 new inps
23:44:58:alg:Debug:b*q - A + r == 0
23:44:58:alg:Info:3 invs:
l20: b*q - A + r == 0
l12: q == 0, A - r == 0
23:44:58:alg:Info:gen ieqs at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:44:58:alg:Info:2 locs: check upperbounds for 100 terms
23:44:58:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
23:45:14:alg:Info:2 locs: compute upperbounds for 45 terms
23:45:14:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7]
23:45:14:alg:Debug:l20: compute ub for 'q - r', start w/ min 9, maxV 10)
23:45:17:alg:Debug:got q - r <= 9
23:45:17:alg:Debug:l20: compute ub for '-b + q', start w/ min 9, maxV 10)
23:45:20:alg:Debug:got -b + q <= 9
23:45:14:alg:Debug:l20: compute ub for '-B - q', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -B - q <= -1
23:45:30:alg:Debug:l20: compute ub for '-B + q', start w/ min 9, maxV 10)
23:45:33:alg:Debug:got -B + q <= 9
23:45:14:alg:Debug:l12: compute ub for '-b - r', start w/ min -5, maxV 10)
23:45:27:alg:Debug:got -b - r <= -2
23:45:27:alg:Debug:l12: compute ub for '-A - r', start w/ min -4, maxV 10)
23:45:39:alg:Debug:got -A - r <= -2
23:45:14:alg:Debug:l20: compute ub for '-A - b', start w/ min -5, maxV 10)
23:45:27:alg:Debug:got -A - b <= -2
23:45:27:alg:Debug:l20: compute ub for '-b - r', start w/ min -1, maxV 10)
23:45:42:alg:Debug:got -b - r <= -1
23:45:14:alg:Debug:l12: compute ub for '-B - b', start w/ min -2, maxV 10)
23:45:30:alg:Debug:got -B - b <= -2
23:45:30:alg:Debug:l12: compute ub for '-A - B', start w/ min -5, maxV 10)
23:45:42:alg:Debug:got -A - B <= -2
23:45:14:alg:Debug:l20: compute ub for '-A + q', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got -A + q <= 0
23:45:30:alg:Debug:l20: compute ub for '-A - r', start w/ min -4, maxV 10)
23:45:42:alg:Debug:got -A - r <= -1
23:45:14:alg:Debug:l20: compute ub for '-b - q', start w/ min -4, maxV 10)
23:45:27:alg:Debug:got -b - q <= -2
23:45:27:alg:Debug:l20: compute ub for '-q - r', start w/ min -1, maxV 10)
23:45:42:alg:Debug:got -q - r <= -1
23:45:14:alg:Debug:l20: compute ub for '-B - b', start w/ min -2, maxV 10)
23:45:30:alg:Debug:got -B - b <= -2
23:45:30:alg:Debug:l20: compute ub for '-A - B', start w/ min -5, maxV 10)
23:45:42:alg:Debug:got -A - B <= -2
23:45:14:alg:Debug:l12: compute ub for '-b + q', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -b + q <= -1
23:45:30:alg:Debug:l12: compute ub for '-B - r', start w/ min -5, maxV 10)
23:45:42:alg:Debug:got -B - r <= -2
23:45:14:alg:Debug:l20: compute ub for '-b', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -b <= -1
23:45:30:alg:Debug:l20: compute ub for '-A', start w/ min -2, maxV 10)
23:45:45:alg:Debug:got -A <= -1
23:45:14:alg:Debug:l12: compute ub for '-B - q', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -B - q <= -1
23:45:30:alg:Debug:l12: compute ub for '-B + q', start w/ min -1, maxV 10)
23:45:45:alg:Debug:got -B + q <= -1
23:45:14:alg:Debug:l20: compute ub for 'B - b', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got B - b <= 0
23:45:30:alg:Debug:l20: compute ub for '-B', start w/ min -1, maxV 10)
23:45:45:alg:Debug:got -B <= -1
23:45:14:alg:Debug:l20: compute ub for '-A - q', start w/ min -2, maxV 10)
23:45:30:alg:Debug:got -A - q <= -1
23:45:30:alg:Debug:l20: compute ub for '-B - r', start w/ min -1, maxV 10)
23:45:45:alg:Debug:got -B - r <= -1
23:45:14:alg:Debug:l12: compute ub for '-b - q', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -b - q <= -1
23:45:30:alg:Debug:l12: compute ub for '-q - r', start w/ min -2, maxV 10)
23:45:45:alg:Debug:got -q - r <= -1
23:45:14:alg:Debug:l12: compute ub for '-b', start w/ min -1, maxV 10)
23:45:30:alg:Debug:got -b <= -1
23:45:30:alg:Debug:l12: compute ub for '-A', start w/ min -2, maxV 10)
23:45:45:alg:Debug:got -A <= -1
23:45:14:alg:Debug:l20: compute ub for '-q', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got -q <= 0
23:45:30:alg:Debug:l20: compute ub for '-r', start w/ min 0, maxV 10)
23:45:45:alg:Debug:got -r <= 0
23:45:14:alg:Debug:l12: compute ub for '-q', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got -q <= 0
23:45:30:alg:Debug:l12: compute ub for '-r', start w/ min -2, maxV 10)
23:45:46:alg:Debug:got -r <= -1
23:45:14:alg:Debug:l20: compute ub for '-A + r', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got -A + r <= 0
23:45:30:alg:Debug:l20: compute ub for '-b + r', start w/ min -1, maxV 10)
23:45:46:alg:Debug:got -b + r <= -1
23:45:14:alg:Debug:l12: compute ub for 'B - b', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got B - b <= 0
23:45:30:alg:Debug:l12: compute ub for '-B', start w/ min -1, maxV 10)
23:45:46:alg:Debug:got -B <= -1
23:45:14:alg:Debug:l12: compute ub for 'A - r', start w/ min 0, maxV 10)
23:45:30:alg:Debug:got A - r <= 0
23:45:30:alg:Debug:l12: compute ub for '-A - q', start w/ min -2, maxV 10)
23:45:46:alg:Debug:got -A - q <= -1
23:45:46:alg:Debug:l12: compute ub for 'q - r', start w/ min -2, maxV 10)
23:45:56:alg:Debug:got q - r <= -1
23:45:56:alg:Debug:l12: compute ub for 'q', start w/ min 0, maxV 10)
23:46:7:alg:Debug:got q <= 0
23:46:7:alg:Debug:l12: compute ub for '-A - b', start w/ min -5, maxV 10)
23:46:16:alg:Debug:got -A - b <= -2
23:46:16:alg:Debug:l12: compute ub for '-A + q', start w/ min -2, maxV 10)
23:46:26:alg:Debug:got -A + q <= -1
23:46:26:alg:Debug:l12: compute ub for '-A + r', start w/ min 0, maxV 10)
23:46:37:alg:Debug:got -A + r <= 0
23:46:37:alg:Info:48 invs:
l20: -A <= -1, -A - B <= -2, -A - r <= -1, -B <= -1, -q - r <= -1, -b <= -1, -B - b <= -2, -A + q <= 0, -b - q <= -2, B - b <= 0, -A - q <= -1, -b + r <= -1, -r <= 0, -q <= 0, -B - r <= -1, -A + r <= 0, -B - q <= -1, -b - r <= -1, -B + q <= 9, -A - b <= -2, b*q - A + r == 0, q - r <= 9, -b + q <= 9
l12: -B + q <= -1, -B - r <= -2, -B - q <= -1, -b + q <= -1, -A - B <= -2, q - r <= -1, -A - q <= -1, -b <= -1, -q - r <= -1, -b - q <= -1, A - r <= 0, -B <= -1, B - b <= 0, -r <= -1, -A <= -1, -q <= 0, -A - b <= -2, q <= 0, -A + r <= 0, -A + q <= -1, -B - b <= -2, -A - r <= -2, -b - r <= -2, q == 0, A - r == 0
23:46:37:alg:Info:test 48 invs on all 840 traces
23:46:37:ds:Warn:l20: -B + q <= 9 disproved
23:46:37:ds:Warn:l20: -b + q <= 9 disproved
23:46:37:ds:Warn:l20: q - r <= 9 disproved
23:46:38:alg:Info:find uniq invs
23:46:38:alg:Info:45 invs:
l20: -A <= -1, -A - B <= -2, -A - r <= -1, -B <= -1, -q - r <= -1, -b <= -1, -B - b <= -2, -A + q <= 0, -b - q <= -2, B - b <= 0, -A - q <= -1, -b + r <= -1, -r <= 0, -q <= 0, -B - r <= -1, -A + r <= 0, -B - q <= -1, -b - r <= -1, -A - b <= -2, b*q - A + r == 0
l12: -B + q <= -1, -B - r <= -2, -B - q <= -1, -b + q <= -1, -A - B <= -2, q - r <= -1, -A - q <= -1, -b <= -1, -q - r <= -1, -b - q <= -1, A - r <= 0, -B <= -1, B - b <= 0, -r <= -1, -A <= -1, -q <= 0, -A - b <= -2, q <= 0, -A + r <= 0, -A + q <= -1, -B - b <= -2, -A - r <= -2, -b - r <= -2, q == 0, A - r == 0
23:46:38:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:46:39:alg:Info:removed 33 redundant invs
23:46:39:alg:Info:got 12 invs, 108 inps (test 60): 
l20: b*q - A + r == 0, -b + r <= -1, -q - r <= -1, B - b <= 0, -B <= -1, -r <= 0, -q <= 0
l12: -q - r <= -1, B - b <= 0, A - r == 0, q == 0, -B - q <= -1
23:46:39:alg:Info:*done* prog programs/nla/divbin.c, invs 12, time 119.585227966 s
23:46:39:alg:Debug:rm -rf /var/tmp/DIG2_HP6X99
23:46:40:alg:Debug:src: /var/tmp/DIG2_Do765W/divbin.c
23:46:40:alg:Info:analyze programs/nla/divbin.c
23:46:40:alg:Info:set seed to: 2.0 (test 98)
23:46:40:miscs:Info:autodeg 4
23:46:40:alg:Info:check reachability
23:46:40:alg:Info:gen eqts at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:46:40:alg:Debug:l20: need more traces (10 eqts, need >= 189)
23:46:40:alg:Debug:obtain 189 new traces
23:46:41:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:46:41:alg:Debug:l12: infer using 189 exprs
23:46:41:miscs:Debug:solve 126 uks using 189 eqts
23:46:48:alg:Debug:l12: 2 candidates:
A - r == 0
q == 0
23:46:48:alg:Debug:l12: check 2 unchecked (2 candidates)
23:46:48:miscs:Debug:workloads 'prove' 2: [1, 1]
23:46:52:alg:Debug:l12: no disproved candidates -- break
23:46:41:alg:Debug:l20: infer using 189 exprs
23:46:41:miscs:Debug:solve 126 uks using 189 eqts
23:46:56:alg:Debug:l20: 1 candidates:
b*q - A + r == 0
23:46:56:alg:Debug:l20: check 1 unchecked (1 candidates)
23:46:59:alg:Debug:l20: no disproved candidates -- break
23:46:59:alg:Debug:l12: got 2 eqts, 0 new inps
23:46:59:alg:Debug:q == 0
A - r == 0
23:46:59:alg:Debug:l20: got 1 eqts, 0 new inps
23:46:59:alg:Debug:b*q - A + r == 0
23:46:59:alg:Info:3 invs:
l20: b*q - A + r == 0
l12: q == 0, A - r == 0
23:46:59:alg:Info:gen ieqs at 2 locs: l20 (int A, int B, int q, int b, int r); l12 (int A, int B, int q, int b, int r)
23:46:59:alg:Info:2 locs: check upperbounds for 100 terms
23:46:59:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
23:47:15:alg:Info:2 locs: compute upperbounds for 45 terms
23:47:15:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7]
23:47:16:alg:Debug:l20: compute ub for '-B', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -B <= -1
23:47:31:alg:Debug:l20: compute ub for '-B + q', start w/ min 9, maxV 10)
23:47:34:alg:Debug:got -B + q <= 9
23:47:16:alg:Debug:l20: compute ub for 'q - r', start w/ min 9, maxV 10)
23:47:19:alg:Debug:got q - r <= 9
23:47:19:alg:Debug:l20: compute ub for '-b - q', start w/ min -2, maxV 10)
23:47:34:alg:Debug:got -b - q <= -2
23:47:15:alg:Debug:l20: compute ub for '-B - r', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -B - r <= -1
23:47:31:alg:Debug:l20: compute ub for '-b + q', start w/ min 9, maxV 10)
23:47:34:alg:Debug:got -b + q <= 9
23:47:15:alg:Debug:l20: compute ub for '-A + r', start w/ min 0, maxV 10)
23:47:31:alg:Debug:got -A + r <= 0
23:47:31:alg:Debug:l20: compute ub for '-A - q', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -A - q <= -1
23:47:15:alg:Debug:l20: compute ub for '-b + r', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -b + r <= -1
23:47:31:alg:Debug:l20: compute ub for '-A - b', start w/ min -2, maxV 10)
23:47:47:alg:Debug:got -A - b <= -2
23:47:16:alg:Debug:l20: compute ub for '-q - r', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -q - r <= -1
23:47:31:alg:Debug:l20: compute ub for '-b - r', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -b - r <= -1
23:47:16:alg:Debug:l12: compute ub for '-A - r', start w/ min -2, maxV 10)
23:47:31:alg:Debug:got -A - r <= -2
23:47:31:alg:Debug:l12: compute ub for '-q', start w/ min 0, maxV 10)
23:47:47:alg:Debug:got -q <= 0
23:47:15:alg:Debug:l20: compute ub for 'B - b', start w/ min 0, maxV 10)
23:47:31:alg:Debug:got B - b <= 0
23:47:31:alg:Debug:l20: compute ub for '-B - q', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -B - q <= -1
23:47:15:alg:Debug:l20: compute ub for '-A + q', start w/ min 0, maxV 10)
23:47:31:alg:Debug:got -A + q <= 0
23:47:31:alg:Debug:l20: compute ub for '-A - r', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -A - r <= -1
23:47:16:alg:Debug:l12: compute ub for '-q - r', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -q - r <= -1
23:47:31:alg:Debug:l12: compute ub for '-b - q', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -b - q <= -1
23:47:15:alg:Debug:l20: compute ub for '-b', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -b <= -1
23:47:31:alg:Debug:l20: compute ub for '-A', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -A <= -1
23:47:15:alg:Debug:l12: compute ub for '-b - r', start w/ min -2, maxV 10)
23:47:31:alg:Debug:got -b - r <= -2
23:47:31:alg:Debug:l12: compute ub for '-A + q', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -A + q <= -1
23:47:16:alg:Debug:l12: compute ub for '-r', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -r <= -1
23:47:31:alg:Debug:l12: compute ub for '-B', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -B <= -1
23:47:15:alg:Debug:l20: compute ub for '-q', start w/ min 0, maxV 10)
23:47:31:alg:Debug:got -q <= 0
23:47:31:alg:Debug:l20: compute ub for '-r', start w/ min 0, maxV 10)
23:47:47:alg:Debug:got -r <= 0
23:47:16:alg:Debug:l12: compute ub for '-B + q', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -B + q <= -1
23:47:31:alg:Debug:l12: compute ub for '-B - b', start w/ min -2, maxV 10)
23:47:47:alg:Debug:got -B - b <= -2
23:47:16:alg:Debug:l20: compute ub for '-B - b', start w/ min -2, maxV 10)
23:47:31:alg:Debug:got -B - b <= -2
23:47:31:alg:Debug:l20: compute ub for '-A - B', start w/ min -2, maxV 10)
23:47:47:alg:Debug:got -A - B <= -2
23:47:15:alg:Debug:l12: compute ub for '-B - r', start w/ min -2, maxV 10)
23:47:31:alg:Debug:got -B - r <= -2
23:47:31:alg:Debug:l12: compute ub for 'q', start w/ min 0, maxV 10)
23:47:47:alg:Debug:got q <= 0
23:47:16:alg:Debug:l12: compute ub for '-B - q', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -B - q <= -1
23:47:31:alg:Debug:l12: compute ub for 'B - b', start w/ min 0, maxV 10)
23:47:47:alg:Debug:got B - b <= 0
23:47:16:alg:Debug:l12: compute ub for '-b', start w/ min -1, maxV 10)
23:47:31:alg:Debug:got -b <= -1
23:47:31:alg:Debug:l12: compute ub for '-A', start w/ min -1, maxV 10)
23:47:47:alg:Debug:got -A <= -1
23:47:16:alg:Debug:l12: compute ub for '-A - B', start w/ min -2, maxV 10)
23:47:31:alg:Debug:got -A - B <= -2
23:47:31:alg:Debug:l12: compute ub for 'A - r', start w/ min 0, maxV 10)
23:47:47:alg:Debug:got A - r <= 0
23:47:47:alg:Debug:l12: compute ub for '-A - q', start w/ min -1, maxV 10)
23:47:57:alg:Debug:got -A - q <= -1
23:47:57:alg:Debug:l12: compute ub for '-A - b', start w/ min -2, maxV 10)
23:48:8:alg:Debug:got -A - b <= -2
23:48:8:alg:Debug:l12: compute ub for 'q - r', start w/ min -1, maxV 10)
23:48:19:alg:Debug:got q - r <= -1
23:48:19:alg:Debug:l12: compute ub for '-b + q', start w/ min -1, maxV 10)
23:48:29:alg:Debug:got -b + q <= -1
23:48:30:alg:Debug:l12: compute ub for '-A + r', start w/ min 0, maxV 10)
23:48:40:alg:Debug:got -A + r <= 0
23:48:40:alg:Info:48 invs:
l20: -A + r <= 0, -A - q <= -1, -b + q <= 9, -B - b <= -2, -b + r <= -1, -b - r <= -1, -B - q <= -1, -A <= -1, B - b <= 0, -b - q <= -2, -q <= 0, -A - b <= -2, -A - B <= -2, -A + q <= 0, -B - r <= -1, -r <= 0, -q - r <= -1, -A - r <= -1, -b <= -1, -B <= -1, -B + q <= 9, q - r <= 9, b*q - A + r == 0
l12: -q - r <= -1, -b - r <= -2, -B <= -1, q <= 0, -B + q <= -1, -A + q <= -1, -b - q <= -1, -A - r <= -2, -B - q <= -1, -B - b <= -2, -B - r <= -2, -r <= -1, -q <= 0, B - b <= 0, -A + r <= 0, -A - b <= -2, -A <= -1, A - r <= 0, -A - q <= -1, q - r <= -1, -A - B <= -2, -b + q <= -1, -b <= -1, q == 0, A - r == 0
23:48:40:alg:Info:test 48 invs on all 816 traces
23:48:40:ds:Warn:l20: -B + q <= 9 disproved
23:48:40:ds:Warn:l20: -b + q <= 9 disproved
23:48:40:ds:Warn:l20: q - r <= 9 disproved
23:48:41:alg:Info:find uniq invs
23:48:41:alg:Info:45 invs:
l20: -A + r <= 0, -A - q <= -1, -B - b <= -2, -b + r <= -1, -b - r <= -1, -B - q <= -1, -A <= -1, B - b <= 0, -b - q <= -2, -q <= 0, -A - b <= -2, -A - B <= -2, -A + q <= 0, -B - r <= -1, -r <= 0, -q - r <= -1, -A - r <= -1, -b <= -1, -B <= -1, b*q - A + r == 0
l12: -q - r <= -1, -b - r <= -2, -B <= -1, q <= 0, -B + q <= -1, -A + q <= -1, -b - q <= -1, -A - r <= -2, -B - q <= -1, -B - b <= -2, -B - r <= -2, -r <= -1, -q <= 0, B - b <= 0, -A + r <= 0, -A - b <= -2, -A <= -1, A - r <= 0, -A - q <= -1, q - r <= -1, -A - B <= -2, -b + q <= -1, -b <= -1, q == 0, A - r == 0
23:48:41:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:48:42:alg:Info:removed 33 redundant invs
23:48:42:alg:Info:got 12 invs, 105 inps (test 45): 
l20: -b + r <= -1, -q <= 0, -B <= -1, B - b <= 0, -r <= 0, -q - r <= -1, b*q - A + r == 0
l12: -q - r <= -1, B - b <= 0, q == 0, A - r == 0, -B - q <= -1
23:48:42:alg:Info:*done* prog programs/nla/divbin.c, invs 12, time 122.101300955 s
23:48:42:alg:Debug:rm -rf /var/tmp/DIG2_Do765W
running cohendiv
23:48:43:alg:Debug:src: /var/tmp/DIG2_sccohU/cohendiv.c
23:48:43:alg:Info:analyze programs/nla/cohendiv.c
23:48:43:alg:Info:set seed to: 0.0 (test 11)
23:48:43:miscs:Info:autodeg 3
23:48:43:alg:Info:check reachability
23:48:43:alg:Info:gen eqts at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:48:43:alg:Debug:l17: need more traces (10 eqts, need >= 52)
23:48:43:alg:Debug:obtain 9 new traces
23:48:43:alg:Debug:l17: need more traces (19 eqts, need >= 52)
23:48:43:alg:Debug:obtain 10 new traces
23:48:43:alg:Debug:l17: need more traces (29 eqts, need >= 52)
23:48:43:alg:Debug:obtain 11 new traces
23:48:43:alg:Debug:l17: need more traces (40 eqts, need >= 52)
23:48:44:alg:Debug:obtain 12 new traces
23:48:44:alg:Debug:l24: need more traces (42 eqts, need >= 126)
23:48:44:alg:Debug:obtain 15 new traces
23:48:44:alg:Debug:l24: need more traces (57 eqts, need >= 126)
23:48:44:alg:Debug:obtain 14 new traces
23:48:44:alg:Debug:l24: need more traces (71 eqts, need >= 126)
23:48:44:alg:Debug:obtain 19 new traces
23:48:44:alg:Debug:l24: need more traces (90 eqts, need >= 126)
23:48:45:alg:Debug:obtain 20 new traces
23:48:45:alg:Debug:l24: need more traces (110 eqts, need >= 126)
23:48:45:alg:Debug:obtain 23 new traces
23:48:45:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:48:45:alg:Debug:l17: infer using 52 exprs
23:48:45:miscs:Debug:solve 35 uks using 52 eqts
23:48:45:alg:Debug:l24: infer using 126 exprs
23:48:45:miscs:Debug:solve 84 uks using 126 eqts
23:48:46:alg:Debug:l17: 1 candidates:
q*y + r - x == 0
23:48:46:alg:Debug:l17: check 1 unchecked (1 candidates)
23:48:49:alg:Debug:l17: no disproved candidates -- break
23:48:49:alg:Debug:l24: 2 candidates:
a*y - b == 0
q*y + r - x == 0
23:48:49:alg:Debug:l24: check 2 unchecked (2 candidates)
23:48:49:miscs:Debug:workloads 'prove' 2: [1, 1]
23:48:53:alg:Debug:l24: no disproved candidates -- break
23:48:53:alg:Debug:l17: got 1 eqts, 0 new inps
23:48:53:alg:Debug:q*y + r - x == 0
23:48:53:alg:Debug:l24: got 2 eqts, 0 new inps
23:48:53:alg:Debug:q*y + r - x == 0
a*y - b == 0
23:48:53:alg:Info:3 invs:
l17: q*y + r - x == 0
l24: q*y + r - x == 0, a*y - b == 0
23:48:53:alg:Info:gen ieqs at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:48:53:alg:Info:2 locs: check upperbounds for 104 terms
23:48:53:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9]
23:48:56:alg:Info:2 locs: compute upperbounds for 43 terms
23:48:56:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5]
23:48:56:alg:Debug:l24: compute ub for '-x - y', start w/ min -7, maxV 10)
23:48:58:alg:Debug:got -x - y <= -2
23:48:58:alg:Debug:l24: compute ub for '-a', start w/ min -1, maxV 10)
23:49:0:alg:Debug:got -a <= -1
23:48:56:alg:Debug:l24: compute ub for '-b - q', start w/ min -1, maxV 10)
23:48:59:alg:Debug:got -b - q <= -1
23:48:59:alg:Debug:l24: compute ub for '-q - r', start w/ min -5, maxV 10)
23:49:1:alg:Debug:got -q - r <= -1
23:48:56:alg:Debug:l24: compute ub for '-b - x', start w/ min -7, maxV 10)
23:48:58:alg:Debug:got -b - x <= -2
23:48:58:alg:Debug:l24: compute ub for '-b', start w/ min -1, maxV 10)
23:49:1:alg:Debug:got -b <= -1
23:48:56:alg:Debug:l17: compute ub for '-x - y', start w/ min -7, maxV 10)
23:48:58:alg:Debug:got -x - y <= -2
23:48:58:alg:Debug:l17: compute ub for '-r - x', start w/ min -4, maxV 10)
23:49:1:alg:Debug:got -r - x <= -1
23:48:56:alg:Debug:l24: compute ub for '-a - b', start w/ min -2, maxV 10)
23:48:58:alg:Debug:got -a - b <= -2
23:48:58:alg:Debug:l24: compute ub for '-x + y', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got -x + y <= 0
23:48:56:alg:Debug:l24: compute ub for '-b - y', start w/ min -2, maxV 10)
23:48:58:alg:Debug:got -b - y <= -2
23:48:58:alg:Debug:l24: compute ub for '-x', start w/ min -6, maxV 10)
23:49:1:alg:Debug:got -x <= -1
23:48:56:alg:Debug:l24: compute ub for 'a - x', start w/ min 0, maxV 10)
23:48:58:alg:Debug:got a - x <= 0
23:48:58:alg:Debug:l24: compute ub for '-q - x', start w/ min -6, maxV 10)
23:49:1:alg:Debug:got -q - x <= -1
23:48:56:alg:Debug:l24: compute ub for '-a - q', start w/ min -1, maxV 10)
23:48:58:alg:Debug:got -a - q <= -1
23:48:58:alg:Debug:l24: compute ub for '-r + y', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got -r + y <= 0
23:48:56:alg:Debug:l24: compute ub for 'r - x', start w/ min 0, maxV 10)
23:48:59:alg:Debug:got r - x <= 0
23:48:59:alg:Debug:l24: compute ub for 'b - x', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got b - x <= 0
23:48:56:alg:Debug:l17: compute ub for 'r - x', start w/ min 0, maxV 10)
23:48:59:alg:Debug:got r - x <= 0
23:48:59:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got -q <= 0
23:48:56:alg:Debug:l24: compute ub for '-b - r', start w/ min -2, maxV 10)
23:48:59:alg:Debug:got -b - r <= -2
23:48:59:alg:Debug:l24: compute ub for 'a - b', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got a - b <= 0
23:48:56:alg:Debug:l24: compute ub for '-r - y', start w/ min -2, maxV 10)
23:48:59:alg:Debug:got -r - y <= -2
23:48:59:alg:Debug:l24: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:1:alg:Debug:got -q - y <= -1
23:48:56:alg:Debug:l17: compute ub for '-q - r', start w/ min -1, maxV 10)
23:48:59:alg:Debug:got -q - r <= -1
23:48:59:alg:Debug:l17: compute ub for '-x', start w/ min -2, maxV 10)
23:49:1:alg:Debug:got -x <= -1
23:48:56:alg:Debug:l24: compute ub for '-a - y', start w/ min -2, maxV 10)
23:48:58:alg:Debug:got -a - y <= -2
23:48:58:alg:Debug:l24: compute ub for '-r - x', start w/ min -8, maxV 10)
23:49:1:alg:Debug:got -r - x <= -2
23:48:56:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
23:48:59:alg:Debug:got -a - r <= -2
23:48:59:alg:Debug:l24: compute ub for '-q', start w/ min 0, maxV 10)
23:49:1:alg:Debug:got -q <= 0
23:48:56:alg:Debug:l17: compute ub for '-q - x', start w/ min -2, maxV 10)
23:48:59:alg:Debug:got -q - x <= -1
23:48:59:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:49:1:alg:Debug:got -y <= -1
23:48:56:alg:Debug:l24: compute ub for 'a - r', start w/ min 0, maxV 10)
23:48:59:alg:Debug:got a - r <= 0
23:48:59:alg:Debug:l24: compute ub for '-r', start w/ min -1, maxV 10)
23:49:2:alg:Debug:got -r <= -1
23:48:56:alg:Debug:l17: compute ub for '-r - y', start w/ min -1, maxV 10)
23:48:59:alg:Debug:got -r - y <= -1
23:48:59:alg:Debug:l17: compute ub for 'q - x', start w/ min 0, maxV 10)
23:49:2:alg:Debug:got q - x <= 0
23:48:56:alg:Debug:l17: compute ub for '-r', start w/ min 0, maxV 10)
23:48:59:alg:Debug:got -r <= 0
23:48:59:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:2:alg:Debug:got -q - y <= -1
23:48:56:alg:Debug:l24: compute ub for 'b - r', start w/ min 0, maxV 10)
23:48:59:alg:Debug:got b - r <= 0
23:48:59:alg:Debug:l24: compute ub for 'q - x', start w/ min -1, maxV 10)
23:49:1:alg:Debug:got q - x <= -1
23:49:1:alg:Debug:l24: compute ub for '-b + y', start w/ min 0, maxV 10)
23:49:3:alg:Debug:got -b + y <= 0
23:49:3:alg:Debug:l24: compute ub for '-y', start w/ min -1, maxV 10)
23:49:4:alg:Debug:got -y <= -1
23:49:4:alg:Debug:l24: compute ub for '-a - x', start w/ min -7, maxV 10)
23:49:5:alg:Debug:got -a - x <= -2
23:49:5:alg:Info:46 invs:
l17: -r - x <= -1, -q <= 0, -q - x <= -1, -x <= -1, -y <= -1, r - x <= 0, -q - r <= -1, -x - y <= -2, q - x <= 0, -r <= 0, -q - y <= -1, -r - y <= -1, q*y + r - x == 0
l24: -b - q <= -1, -q - r <= -1, -a <= -1, -b - x <= -2, -x <= -1, -a - q <= -1, -r - y <= -2, -r - x <= -2, -b - y <= -2, -x - y <= -2, b - x <= 0, -r + y <= 0, -a - b <= -2, -q - y <= -1, -b <= -1, -a - r <= -2, -b - r <= -2, a - x <= 0, -a - y <= -2, r - x <= 0, -x + y <= 0, a - r <= 0, -q <= 0, a - b <= 0, -q - x <= -1, b - r <= 0, q - x <= -1, -a - x <= -2, -r <= -1, -b + y <= 0, -y <= -1, q*y + r - x == 0, a*y - b == 0
23:49:5:alg:Info:test 46 invs on all 558 traces
23:49:6:alg:Info:find uniq invs
23:49:6:alg:Info:46 invs:
l17: -r - x <= -1, -q <= 0, -q - x <= -1, -x <= -1, -y <= -1, r - x <= 0, -q - r <= -1, -x - y <= -2, q - x <= 0, -r <= 0, -q - y <= -1, -r - y <= -1, q*y + r - x == 0
l24: -b - q <= -1, -q - r <= -1, -a <= -1, -b - x <= -2, -x <= -1, -a - q <= -1, -r - y <= -2, -r - x <= -2, -b - y <= -2, -x - y <= -2, b - x <= 0, -r + y <= 0, -a - b <= -2, -q - y <= -1, -b <= -1, -a - r <= -2, -b - r <= -2, a - x <= 0, -a - y <= -2, r - x <= 0, -x + y <= 0, a - r <= 0, -q <= 0, a - b <= 0, -q - x <= -1, b - r <= 0, q - x <= -1, -a - x <= -2, -r <= -1, -b + y <= 0, -y <= -1, q*y + r - x == 0, a*y - b == 0
23:49:6:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:49:7:alg:Info:removed 33 redundant invs
23:49:7:alg:Info:got 13 invs, 129 inps (test 51): 
l17: -y <= -1, r - x <= 0, -q - r <= -1, q*y + r - x == 0, -r <= 0
l24: -b - y <= -2, b - r <= 0, r - x <= 0, -q - y <= -1, a - b <= 0, a*y - b == 0, q*y + r - x == 0, -b + y <= 0
23:49:7:alg:Info:*done* prog programs/nla/cohendiv.c, invs 13, time 24.086108923 s
23:49:7:alg:Debug:rm -rf /var/tmp/DIG2_sccohU
23:49:8:alg:Debug:src: /var/tmp/DIG2_PecLoQ/cohendiv.c
23:49:8:alg:Info:analyze programs/nla/cohendiv.c
23:49:8:alg:Info:set seed to: 1.0 (test 83)
23:49:8:miscs:Info:autodeg 3
23:49:8:alg:Info:check reachability
23:49:8:alg:Info:gen eqts at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:49:8:alg:Debug:l17: need more traces (7 eqts, need >= 52)
23:49:8:alg:Debug:obtain 9 new traces
23:49:8:alg:Debug:l17: need more traces (16 eqts, need >= 52)
23:49:9:alg:Debug:obtain 10 new traces
23:49:9:alg:Debug:l17: need more traces (26 eqts, need >= 52)
23:49:9:alg:Debug:obtain 11 new traces
23:49:9:alg:Debug:l17: need more traces (37 eqts, need >= 52)
23:49:9:alg:Debug:obtain 12 new traces
23:49:9:alg:Debug:l17: need more traces (49 eqts, need >= 52)
23:49:9:alg:Debug:obtain 12 new traces
23:49:9:alg:Debug:l24: need more traces (43 eqts, need >= 126)
23:49:9:alg:Debug:obtain 18 new traces
23:49:9:alg:Debug:l24: need more traces (61 eqts, need >= 126)
23:49:10:alg:Debug:obtain 20 new traces
23:49:10:alg:Debug:l24: need more traces (81 eqts, need >= 126)
23:49:10:alg:Debug:obtain 20 new traces
23:49:10:alg:Debug:l24: need more traces (101 eqts, need >= 126)
23:49:10:alg:Debug:obtain 20 new traces
23:49:10:alg:Debug:l24: need more traces (121 eqts, need >= 126)
23:49:11:alg:Debug:obtain 20 new traces
23:49:11:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:49:11:alg:Debug:l17: infer using 52 exprs
23:49:11:miscs:Debug:solve 35 uks using 52 eqts
23:49:11:alg:Debug:l24: infer using 126 exprs
23:49:11:miscs:Debug:solve 84 uks using 126 eqts
23:49:12:alg:Debug:l17: 1 candidates:
q*y + r - x == 0
23:49:12:alg:Debug:l17: check 1 unchecked (1 candidates)
23:49:15:alg:Debug:l17: no disproved candidates -- break
23:49:15:alg:Debug:l24: 2 candidates:
a*y - b == 0
q*y + r - x == 0
23:49:15:alg:Debug:l24: check 2 unchecked (2 candidates)
23:49:15:miscs:Debug:workloads 'prove' 2: [1, 1]
23:49:18:alg:Debug:l24: no disproved candidates -- break
23:49:18:alg:Debug:l17: got 1 eqts, 0 new inps
23:49:18:alg:Debug:q*y + r - x == 0
23:49:18:alg:Debug:l24: got 2 eqts, 0 new inps
23:49:18:alg:Debug:q*y + r - x == 0
a*y - b == 0
23:49:18:alg:Info:3 invs:
l17: q*y + r - x == 0
l24: q*y + r - x == 0, a*y - b == 0
23:49:18:alg:Info:gen ieqs at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:49:18:alg:Info:2 locs: check upperbounds for 104 terms
23:49:18:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9]
23:49:21:alg:Info:2 locs: compute upperbounds for 43 terms
23:49:21:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5]
23:49:22:alg:Debug:l24: compute ub for '-b + y', start w/ min 0, maxV 10)
23:49:24:alg:Debug:got -b + y <= 0
23:49:24:alg:Debug:l24: compute ub for '-x - y', start w/ min -5, maxV 10)
23:49:26:alg:Debug:got -x - y <= -2
23:49:22:alg:Debug:l24: compute ub for '-b - y', start w/ min -2, maxV 10)
23:49:24:alg:Debug:got -b - y <= -2
23:49:24:alg:Debug:l24: compute ub for '-b - x', start w/ min -5, maxV 10)
23:49:26:alg:Debug:got -b - x <= -2
23:49:22:alg:Debug:l24: compute ub for '-q', start w/ min 0, maxV 10)
23:49:24:alg:Debug:got -q <= 0
23:49:24:alg:Debug:l24: compute ub for '-x + y', start w/ min 0, maxV 10)
23:49:26:alg:Debug:got -x + y <= 0
23:49:22:alg:Debug:l24: compute ub for '-a - b', start w/ min -2, maxV 10)
23:49:24:alg:Debug:got -a - b <= -2
23:49:24:alg:Debug:l24: compute ub for '-q - x', start w/ min -4, maxV 10)
23:49:26:alg:Debug:got -q - x <= -1
23:49:22:alg:Debug:l17: compute ub for 'q - x', start w/ min 0, maxV 10)
23:49:25:alg:Debug:got q - x <= 0
23:49:25:alg:Debug:l17: compute ub for '-x - y', start w/ min -5, maxV 10)
23:49:27:alg:Debug:got -x - y <= -2
23:49:22:alg:Debug:l24: compute ub for '-b', start w/ min -1, maxV 10)
23:49:24:alg:Debug:got -b <= -1
23:49:24:alg:Debug:l24: compute ub for '-a - y', start w/ min -2, maxV 10)
23:49:27:alg:Debug:got -a - y <= -2
23:49:22:alg:Debug:l24: compute ub for 'a - x', start w/ min 0, maxV 10)
23:49:24:alg:Debug:got a - x <= 0
23:49:24:alg:Debug:l24: compute ub for '-r + y', start w/ min 0, maxV 10)
23:49:27:alg:Debug:got -r + y <= 0
23:49:22:alg:Debug:l17: compute ub for 'r - x', start w/ min 0, maxV 10)
23:49:25:alg:Debug:got r - x <= 0
23:49:25:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:49:27:alg:Debug:got -q <= 0
23:49:22:alg:Debug:l24: compute ub for 'r - x', start w/ min 0, maxV 10)
23:49:24:alg:Debug:got r - x <= 0
23:49:24:alg:Debug:l24: compute ub for 'q - x', start w/ min -1, maxV 10)
23:49:27:alg:Debug:got q - x <= -1
23:49:22:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:49:24:alg:Debug:got -y <= -1
23:49:24:alg:Debug:l17: compute ub for '-q - x', start w/ min -2, maxV 10)
23:49:27:alg:Debug:got -q - x <= -1
23:49:22:alg:Debug:l24: compute ub for '-a', start w/ min -1, maxV 10)
23:49:24:alg:Debug:got -a <= -1
23:49:24:alg:Debug:l24: compute ub for '-b - r', start w/ min -2, maxV 10)
23:49:27:alg:Debug:got -b - r <= -2
23:49:22:alg:Debug:l24: compute ub for '-r - y', start w/ min -2, maxV 10)
23:49:24:alg:Debug:got -r - y <= -2
23:49:24:alg:Debug:l24: compute ub for 'b - x', start w/ min 0, maxV 10)
23:49:27:alg:Debug:got b - x <= 0
23:49:22:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:25:alg:Debug:got -q - y <= -1
23:49:25:alg:Debug:l17: compute ub for '-x', start w/ min -2, maxV 10)
23:49:27:alg:Debug:got -x <= -1
23:49:22:alg:Debug:l24: compute ub for '-b - q', start w/ min -1, maxV 10)
23:49:25:alg:Debug:got -b - q <= -1
23:49:25:alg:Debug:l24: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:27:alg:Debug:got -q - y <= -1
23:49:22:alg:Debug:l24: compute ub for 'a - b', start w/ min 0, maxV 10)
23:49:24:alg:Debug:got a - b <= 0
23:49:24:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
23:49:27:alg:Debug:got -a - r <= -2
23:49:22:alg:Debug:l17: compute ub for '-r - x', start w/ min -4, maxV 10)
23:49:24:alg:Debug:got -r - x <= -1
23:49:24:alg:Debug:l17: compute ub for '-r', start w/ min 0, maxV 10)
23:49:27:alg:Debug:got -r <= 0
23:49:22:alg:Debug:l24: compute ub for 'a - r', start w/ min 0, maxV 10)
23:49:25:alg:Debug:got a - r <= 0
23:49:25:alg:Debug:l24: compute ub for '-r', start w/ min -1, maxV 10)
23:49:27:alg:Debug:got -r <= -1
23:49:22:alg:Debug:l24: compute ub for 'b - r', start w/ min 0, maxV 10)
23:49:25:alg:Debug:got b - r <= 0
23:49:25:alg:Debug:l24: compute ub for '-r - x', start w/ min -8, maxV 10)
23:49:27:alg:Debug:got -r - x <= -2
23:49:22:alg:Debug:l17: compute ub for '-r - y', start w/ min -1, maxV 10)
23:49:25:alg:Debug:got -r - y <= -1
23:49:25:alg:Debug:l17: compute ub for '-q - r', start w/ min -1, maxV 10)
23:49:27:alg:Debug:got -q - r <= -1
23:49:22:alg:Debug:l24: compute ub for '-a - q', start w/ min -1, maxV 10)
23:49:24:alg:Debug:got -a - q <= -1
23:49:24:alg:Debug:l24: compute ub for '-x', start w/ min -4, maxV 10)
23:49:26:alg:Debug:got -x <= -1
23:49:26:alg:Debug:l24: compute ub for '-q - r', start w/ min -4, maxV 10)
23:49:28:alg:Debug:got -q - r <= -1
23:49:28:alg:Debug:l24: compute ub for '-y', start w/ min -1, maxV 10)
23:49:29:alg:Debug:got -y <= -1
23:49:29:alg:Debug:l24: compute ub for '-a - x', start w/ min -5, maxV 10)
23:49:30:alg:Debug:got -a - x <= -2
23:49:30:alg:Info:46 invs:
l17: q*y + r - x == 0, -x - y <= -2, -q <= 0, -y <= -1, q - x <= 0, -q - x <= -1, r - x <= 0, -r - y <= -1, -q - y <= -1, -r - x <= -1, -x <= -1, -r <= 0, -q - r <= -1
l24: q*y + r - x == 0, a*y - b == 0, -b + y <= 0, -b - x <= -2, a - x <= 0, -a - b <= -2, -q - x <= -1, r - x <= 0, -b <= -1, -x - y <= -2, -r + y <= 0, -q <= 0, q - x <= -1, -a - y <= -2, -b - y <= -2, -x + y <= 0, -a - x <= -2, -x <= -1, -r - x <= -2, -b - r <= -2, -a <= -1, -q - r <= -1, -y <= -1, -a - q <= -1, -r <= -1, a - r <= 0, -a - r <= -2, b - r <= 0, a - b <= 0, -q - y <= -1, b - x <= 0, -r - y <= -2, -b - q <= -1
23:49:30:alg:Info:test 46 invs on all 584 traces
23:49:31:alg:Info:find uniq invs
23:49:31:alg:Info:46 invs:
l17: q*y + r - x == 0, -x - y <= -2, -q <= 0, -y <= -1, q - x <= 0, -q - x <= -1, r - x <= 0, -r - y <= -1, -q - y <= -1, -r - x <= -1, -x <= -1, -r <= 0, -q - r <= -1
l24: q*y + r - x == 0, a*y - b == 0, -b + y <= 0, -b - x <= -2, a - x <= 0, -a - b <= -2, -q - x <= -1, r - x <= 0, -b <= -1, -x - y <= -2, -r + y <= 0, -q <= 0, q - x <= -1, -a - y <= -2, -b - y <= -2, -x + y <= 0, -a - x <= -2, -x <= -1, -r - x <= -2, -b - r <= -2, -a <= -1, -q - r <= -1, -y <= -1, -a - q <= -1, -r <= -1, a - r <= 0, -a - r <= -2, b - r <= 0, a - b <= 0, -q - y <= -1, b - x <= 0, -r - y <= -2, -b - q <= -1
23:49:31:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:49:32:alg:Info:removed 35 redundant invs
23:49:32:alg:Info:got 11 invs, 142 inps (test 60): 
l17: q*y + r - x == 0, -q - r <= -1, -q <= 0, -y <= -1, -r <= 0
l24: -a <= -1, a*y - b == 0, q*y + r - x == 0, a - b <= 0, b - r <= 0, -q <= 0
23:49:32:alg:Info:*done* prog programs/nla/cohendiv.c, invs 11, time 23.8265669346 s
23:49:32:alg:Debug:rm -rf /var/tmp/DIG2_PecLoQ
23:49:33:alg:Debug:src: /var/tmp/DIG2_1FQhyD/cohendiv.c
23:49:33:alg:Info:analyze programs/nla/cohendiv.c
23:49:33:alg:Info:set seed to: 2.0 (test 98)
23:49:33:miscs:Info:autodeg 3
23:49:33:alg:Info:check reachability
23:49:33:alg:Info:gen eqts at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:49:33:alg:Debug:l17: need more traces (9 eqts, need >= 52)
23:49:34:alg:Debug:obtain 9 new traces
23:49:34:alg:Debug:l17: need more traces (18 eqts, need >= 52)
23:49:34:alg:Debug:obtain 10 new traces
23:49:34:alg:Debug:l17: need more traces (28 eqts, need >= 52)
23:49:34:alg:Debug:obtain 11 new traces
23:49:34:alg:Debug:l17: need more traces (39 eqts, need >= 52)
23:49:34:alg:Debug:obtain 12 new traces
23:49:34:alg:Debug:l17: need more traces (51 eqts, need >= 52)
23:49:34:alg:Debug:obtain 12 new traces
23:49:34:alg:Debug:l24: need more traces (44 eqts, need >= 126)
23:49:35:alg:Debug:obtain 15 new traces
23:49:35:alg:Debug:l24: need more traces (59 eqts, need >= 126)
23:49:35:alg:Debug:obtain 18 new traces
23:49:35:alg:Debug:l24: need more traces (77 eqts, need >= 126)
23:49:35:alg:Debug:obtain 20 new traces
23:49:35:alg:Debug:l24: need more traces (97 eqts, need >= 126)
23:49:36:alg:Debug:obtain 19 new traces
23:49:36:alg:Debug:l24: need more traces (116 eqts, need >= 126)
23:49:36:alg:Debug:obtain 19 new traces
23:49:36:miscs:Debug:workloads 'find eqts' 2: [1, 1]
23:49:36:alg:Debug:l17: infer using 52 exprs
23:49:36:miscs:Debug:solve 35 uks using 52 eqts
23:49:36:alg:Debug:l24: infer using 126 exprs
23:49:36:miscs:Debug:solve 84 uks using 126 eqts
23:49:40:alg:Debug:l24: 2 candidates:
a*y - b == 0
q*y + r - x == 0
23:49:40:alg:Debug:l24: check 2 unchecked (2 candidates)
23:49:40:miscs:Debug:workloads 'prove' 2: [1, 1]
23:49:37:alg:Debug:l17: 1 candidates:
q*y + r - x == 0
23:49:37:alg:Debug:l17: check 1 unchecked (1 candidates)
23:49:40:alg:Debug:l17: no disproved candidates -- break
23:49:43:alg:Debug:l24: no disproved candidates -- break
23:49:43:alg:Debug:l17: got 1 eqts, 0 new inps
23:49:43:alg:Debug:q*y + r - x == 0
23:49:43:alg:Debug:l24: got 2 eqts, 0 new inps
23:49:43:alg:Debug:q*y + r - x == 0
a*y - b == 0
23:49:43:alg:Info:3 invs:
l17: q*y + r - x == 0
l24: q*y + r - x == 0, a*y - b == 0
23:49:43:alg:Info:gen ieqs at 2 locs: l17 (int x, int y, int q, int r); l24 (int x, int y, int q, int a, int b, int r)
23:49:43:alg:Info:2 locs: check upperbounds for 104 terms
23:49:43:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 9]
23:49:47:alg:Info:2 locs: compute upperbounds for 43 terms
23:49:47:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5]
23:49:47:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:49:49:alg:Debug:got -y <= -1
23:49:49:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:49:51:alg:Debug:got -q <= 0
23:49:47:alg:Debug:l24: compute ub for '-b - y', start w/ min -2, maxV 10)
23:49:49:alg:Debug:got -b - y <= -2
23:49:49:alg:Debug:l24: compute ub for '-a - q', start w/ min -1, maxV 10)
23:49:51:alg:Debug:got -a - q <= -1
23:49:47:alg:Debug:l24: compute ub for '-a', start w/ min -1, maxV 10)
23:49:49:alg:Debug:got -a <= -1
23:49:49:alg:Debug:l24: compute ub for 'b - x', start w/ min 0, maxV 10)
23:49:51:alg:Debug:got b - x <= 0
23:49:47:alg:Debug:l24: compute ub for '-b', start w/ min -1, maxV 10)
23:49:49:alg:Debug:got -b <= -1
23:49:49:alg:Debug:l24: compute ub for '-a - y', start w/ min -2, maxV 10)
23:49:52:alg:Debug:got -a - y <= -2
23:49:47:alg:Debug:l24: compute ub for 'a - x', start w/ min 0, maxV 10)
23:49:49:alg:Debug:got a - x <= 0
23:49:49:alg:Debug:l24: compute ub for '-q - x', start w/ min -1, maxV 10)
23:49:52:alg:Debug:got -q - x <= -1
23:49:47:alg:Debug:l24: compute ub for '-b + y', start w/ min 0, maxV 10)
23:49:49:alg:Debug:got -b + y <= 0
23:49:49:alg:Debug:l24: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:52:alg:Debug:got -q - y <= -1
23:49:47:alg:Debug:l24: compute ub for '-a - b', start w/ min -2, maxV 10)
23:49:49:alg:Debug:got -a - b <= -2
23:49:49:alg:Debug:l24: compute ub for '-r', start w/ min -1, maxV 10)
23:49:52:alg:Debug:got -r <= -1
23:49:47:alg:Debug:l17: compute ub for '-x - y', start w/ min -2, maxV 10)
23:49:49:alg:Debug:got -x - y <= -2
23:49:49:alg:Debug:l17: compute ub for '-q - x', start w/ min -1, maxV 10)
23:49:52:alg:Debug:got -q - x <= -1
23:49:47:alg:Debug:l24: compute ub for '-b - q', start w/ min -1, maxV 10)
23:49:50:alg:Debug:got -b - q <= -1
23:49:50:alg:Debug:l24: compute ub for 'a - b', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got a - b <= 0
23:49:47:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
23:49:49:alg:Debug:got -x <= -1
23:49:49:alg:Debug:l17: compute ub for '-r - y', start w/ min -1, maxV 10)
23:49:52:alg:Debug:got -r - y <= -1
23:49:47:alg:Debug:l24: compute ub for 'b - r', start w/ min 0, maxV 10)
23:49:50:alg:Debug:got b - r <= 0
23:49:50:alg:Debug:l24: compute ub for '-x + y', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got -x + y <= 0
23:49:47:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
23:49:50:alg:Debug:got -a - r <= -2
23:49:50:alg:Debug:l24: compute ub for '-q', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got -q <= 0
23:49:47:alg:Debug:l24: compute ub for '-r - x', start w/ min -2, maxV 10)
23:49:50:alg:Debug:got -r - x <= -2
23:49:50:alg:Debug:l24: compute ub for '-r + y', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got -r + y <= 0
23:49:47:alg:Debug:l24: compute ub for '-r - y', start w/ min -2, maxV 10)
23:49:50:alg:Debug:got -r - y <= -2
23:49:50:alg:Debug:l24: compute ub for 'r - x', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got r - x <= 0
23:49:47:alg:Debug:l24: compute ub for '-x - y', start w/ min -2, maxV 10)
23:49:49:alg:Debug:got -x - y <= -2
23:49:49:alg:Debug:l24: compute ub for '-b - r', start w/ min -2, maxV 10)
23:49:52:alg:Debug:got -b - r <= -2
23:49:47:alg:Debug:l24: compute ub for '-q - r', start w/ min -1, maxV 10)
23:49:49:alg:Debug:got -q - r <= -1
23:49:50:alg:Debug:l24: compute ub for 'a - r', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got a - r <= 0
23:49:47:alg:Debug:l17: compute ub for 'r - x', start w/ min 0, maxV 10)
23:49:50:alg:Debug:got r - x <= 0
23:49:50:alg:Debug:l17: compute ub for '-r', start w/ min 0, maxV 10)
23:49:52:alg:Debug:got -r <= 0
23:49:47:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:49:50:alg:Debug:got -q - y <= -1
23:49:50:alg:Debug:l17: compute ub for 'q - x', start w/ min 0, maxV 10)
23:49:53:alg:Debug:got q - x <= 0
23:49:47:alg:Debug:l17: compute ub for '-r - x', start w/ min -1, maxV 10)
23:49:50:alg:Debug:got -r - x <= -1
23:49:50:alg:Debug:l17: compute ub for '-q - r', start w/ min -1, maxV 10)
23:49:53:alg:Debug:got -q - r <= -1
23:49:47:alg:Debug:l24: compute ub for '-b - x', start w/ min -2, maxV 10)
23:49:49:alg:Debug:got -b - x <= -2
23:49:49:alg:Debug:l24: compute ub for '-x', start w/ min -1, maxV 10)
23:49:51:alg:Debug:got -x <= -1
23:49:52:alg:Debug:l24: compute ub for '-a - x', start w/ min -2, maxV 10)
23:49:53:alg:Debug:got -a - x <= -2
23:49:53:alg:Debug:l24: compute ub for 'q - x', start w/ min -1, maxV 10)
23:49:55:alg:Debug:got q - x <= -1
23:49:55:alg:Debug:l24: compute ub for '-y', start w/ min -1, maxV 10)
23:49:56:alg:Debug:got -y <= -1
23:49:56:alg:Info:46 invs:
l17: -x - y <= -2, -y <= -1, -q - x <= -1, -x <= -1, -q <= 0, r - x <= 0, -r - y <= -1, -q - r <= -1, -q - y <= -1, -r <= 0, q - x <= 0, -r - x <= -1, q*y + r - x == 0
l24: -a - q <= -1, -a <= -1, -b - y <= -2, r - x <= 0, -q - r <= -1, b - x <= 0, -b <= -1, -r <= -1, b - r <= 0, -q <= 0, -r - y <= -2, a - b <= 0, -q - x <= -1, -a - y <= -2, a - r <= 0, -r - x <= -2, -q - y <= -1, -x - y <= -2, -x + y <= 0, -b + y <= 0, a - x <= 0, -r + y <= 0, -b - q <= -1, -a - b <= -2, -b - r <= -2, -a - r <= -2, -x <= -1, -a - x <= -2, -y <= -1, q - x <= -1, -b - x <= -2, q*y + r - x == 0, a*y - b == 0
23:49:56:alg:Info:test 46 invs on all 573 traces
23:49:57:alg:Info:find uniq invs
23:49:57:alg:Info:46 invs:
l17: -x - y <= -2, -y <= -1, -q - x <= -1, -x <= -1, -q <= 0, r - x <= 0, -r - y <= -1, -q - r <= -1, -q - y <= -1, -r <= 0, q - x <= 0, -r - x <= -1, q*y + r - x == 0
l24: -a - q <= -1, -a <= -1, -b - y <= -2, r - x <= 0, -q - r <= -1, b - x <= 0, -b <= -1, -r <= -1, b - r <= 0, -q <= 0, -r - y <= -2, a - b <= 0, -q - x <= -1, -a - y <= -2, a - r <= 0, -r - x <= -2, -q - y <= -1, -x - y <= -2, -x + y <= 0, -b + y <= 0, a - x <= 0, -r + y <= 0, -b - q <= -1, -a - b <= -2, -b - r <= -2, -a - r <= -2, -x <= -1, -a - x <= -2, -y <= -1, q - x <= -1, -b - x <= -2, q*y + r - x == 0, a*y - b == 0
23:49:57:miscs:Debug:workloads 'uniqify' 2: [1, 1]
23:49:58:alg:Info:removed 35 redundant invs
23:49:58:alg:Info:got 11 invs, 139 inps (test 45): 
l17: -q - r <= -1, q*y + r - x == 0, -q <= 0, -r <= 0, -y <= -1
l24: q*y + r - x == 0, -y <= -1, a*y - b == 0, -q <= 0, b - r <= 0, -a <= -1
23:49:58:alg:Info:*done* prog programs/nla/cohendiv.c, invs 11, time 24.6633319855 s
23:49:58:alg:Debug:rm -rf /var/tmp/DIG2_1FQhyD
running prod4br
23:49:59:alg:Debug:src: /var/tmp/DIG2_JC5HaA/prod4br.c
23:49:59:alg:Info:analyze programs/nla/prod4br.c
23:49:59:alg:Info:set seed to: 0.0 (test 11)
23:49:59:miscs:Info:autodeg 3
23:49:59:alg:Info:check reachability
23:49:59:alg:Info:gen eqts at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:49:59:alg:Debug:l17: need more traces (39 eqts, need >= 126)
23:50:0:alg:Debug:obtain 41 new traces
23:50:0:alg:Debug:l17: need more traces (80 eqts, need >= 126)
23:50:0:alg:Debug:obtain 43 new traces
23:50:0:alg:Debug:l17: need more traces (123 eqts, need >= 126)
23:50:0:alg:Debug:obtain 42 new traces
23:50:0:alg:Debug:l17: infer using 126 exprs
23:50:0:miscs:Debug:solve 84 uks using 126 eqts
23:50:5:alg:Debug:l17: 1 candidates:
-a*b*p + x*y - q == 0
23:50:5:alg:Debug:l17: check 1 unchecked (1 candidates)
23:50:8:alg:Debug:l17: no disproved candidates -- break
23:50:8:alg:Debug:l17: got 1 eqts, 0 new inps
23:50:8:alg:Debug:-a*b*p + x*y - q == 0
23:50:8:alg:Info:1 invs:
l17: -a*b*p + x*y - q == 0
23:50:8:alg:Info:gen ieqs at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:50:8:alg:Info:1 locs: check upperbounds for 72 terms
23:50:8:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
23:50:22:alg:Info:1 locs: compute upperbounds for 23 terms
23:50:22:miscs:Debug:workloads 'guesscheck' 12: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:50:22:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -y <= -1
23:50:22:alg:Debug:l17: compute ub for '-a - x', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -a - x <= -1
23:50:38:alg:Debug:l17: compute ub for '-x - y', start w/ min -6, maxV 10)
23:50:50:alg:Debug:got -x - y <= -2
23:50:22:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
23:50:35:alg:Debug:got -a - y <= -1
23:50:35:alg:Debug:l17: compute ub for '-a - p', start w/ min -1, maxV 10)
23:50:50:alg:Debug:got -a - p <= -1
23:50:22:alg:Debug:l17: compute ub for '-b - x', start w/ min -3, maxV 10)
23:50:35:alg:Debug:got -b - x <= -1
23:50:35:alg:Debug:l17: compute ub for 'b - y', start w/ min 0, maxV 10)
23:50:50:alg:Debug:got b - y <= 0
23:50:22:alg:Debug:l17: compute ub for '-a - q', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -a - q <= -1
23:50:38:alg:Debug:l17: compute ub for '-p - q', start w/ min -1, maxV 10)
23:50:53:alg:Debug:got -p - q <= -1
23:50:22:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -q - y <= -1
23:50:38:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:50:53:alg:Debug:got -q <= 0
23:50:22:alg:Debug:l17: compute ub for 'a - x', start w/ min 0, maxV 10)
23:50:38:alg:Debug:got a - x <= 0
23:50:38:alg:Debug:l17: compute ub for '-q - x', start w/ min -1, maxV 10)
23:50:53:alg:Debug:got -q - x <= -1
23:50:22:alg:Debug:l17: compute ub for '-b', start w/ min 0, maxV 10)
23:50:38:alg:Debug:got -b <= 0
23:50:38:alg:Debug:l17: compute ub for '-a', start w/ min 0, maxV 10)
23:50:53:alg:Debug:got -a <= 0
23:50:22:alg:Debug:l17: compute ub for '-b - q', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -b - q <= -1
23:50:38:alg:Debug:l17: compute ub for '-b - p', start w/ min -1, maxV 10)
23:50:53:alg:Debug:got -b - p <= -1
23:50:22:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -x <= -1
23:50:38:alg:Debug:l17: compute ub for '-a - b', start w/ min 0, maxV 10)
23:50:53:alg:Debug:got -a - b <= 0
23:50:22:alg:Debug:l17: compute ub for '-p - x', start w/ min -2, maxV 10)
23:50:38:alg:Debug:got -p - x <= -2
23:50:38:alg:Debug:l17: compute ub for '-p - y', start w/ min -2, maxV 10)
23:50:53:alg:Debug:got -p - y <= -2
23:50:22:alg:Debug:l17: compute ub for '-p', start w/ min -1, maxV 10)
23:50:38:alg:Debug:got -p <= -1
23:50:38:alg:Debug:l17: compute ub for '-b - y', start w/ min -1, maxV 10)
23:50:54:alg:Debug:got -b - y <= -1
23:50:54:alg:Info:24 invs:
l17: -a <= 0, -p <= -1, -x <= -1, -b - q <= -1, -a - b <= 0, -b - p <= -1, -b - y <= -1, -p - x <= -2, -b <= 0, -p - y <= -2, -a - x <= -1, -a - y <= -1, -q - y <= -1, -q - x <= -1, -a - p <= -1, -b - x <= -1, -a - q <= -1, -p - q <= -1, -q <= 0, -y <= -1, a - x <= 0, b - y <= 0, -x - y <= -2, -a*b*p + x*y - q == 0
23:50:54:alg:Info:test 24 invs on all 771 traces
23:50:55:alg:Info:find uniq invs
23:50:55:alg:Info:24 invs:
l17: -a <= 0, -p <= -1, -x <= -1, -b - q <= -1, -a - b <= 0, -b - p <= -1, -b - y <= -1, -p - x <= -2, -b <= 0, -p - y <= -2, -a - x <= -1, -a - y <= -1, -q - y <= -1, -q - x <= -1, -a - p <= -1, -b - x <= -1, -a - q <= -1, -p - q <= -1, -q <= 0, -y <= -1, a - x <= 0, b - y <= 0, -x - y <= -2, -a*b*p + x*y - q == 0
23:50:55:alg:Info:removed 13 redundant invs
23:50:55:alg:Info:got 11 invs, 146 inps (test 51): 
l17: -a - q <= -1, -a <= 0, -b <= 0, a - x <= 0, -a*b*p + x*y - q == 0, b - y <= 0, -p <= -1, -y <= -1, -x <= -1, -q <= 0, -b - q <= -1
23:50:55:alg:Info:*done* prog programs/nla/prod4br.c, invs 11, time 56.0032629967 s
23:50:55:alg:Debug:rm -rf /var/tmp/DIG2_JC5HaA
23:50:56:alg:Debug:src: /var/tmp/DIG2_Fnfjr8/prod4br.c
23:50:57:alg:Info:analyze programs/nla/prod4br.c
23:50:57:alg:Info:set seed to: 1.0 (test 83)
23:50:57:miscs:Info:autodeg 3
23:50:57:alg:Info:check reachability
23:50:57:alg:Info:gen eqts at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:50:57:alg:Debug:l17: need more traces (34 eqts, need >= 126)
23:50:57:alg:Debug:obtain 37 new traces
23:50:57:alg:Debug:l17: need more traces (71 eqts, need >= 126)
23:50:57:alg:Debug:obtain 39 new traces
23:50:57:alg:Debug:l17: need more traces (110 eqts, need >= 126)
23:50:57:alg:Debug:obtain 39 new traces
23:50:57:alg:Debug:l17: infer using 126 exprs
23:50:57:miscs:Debug:solve 84 uks using 126 eqts
23:51:2:alg:Debug:l17: 1 candidates:
a*b*p - x*y + q == 0
23:51:2:alg:Debug:l17: check 1 unchecked (1 candidates)
23:51:5:alg:Debug:l17: no disproved candidates -- break
23:51:5:alg:Debug:l17: got 1 eqts, 0 new inps
23:51:5:alg:Debug:a*b*p - x*y + q == 0
23:51:5:alg:Info:1 invs:
l17: a*b*p - x*y + q == 0
23:51:5:alg:Info:gen ieqs at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:51:5:alg:Info:1 locs: check upperbounds for 72 terms
23:51:5:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
23:51:19:alg:Info:1 locs: compute upperbounds for 23 terms
23:51:19:miscs:Debug:workloads 'guesscheck' 12: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:51:19:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -y <= -1
23:51:19:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
23:51:31:alg:Debug:got -a - y <= -1
23:51:31:alg:Debug:l17: compute ub for '-p - q', start w/ min -1, maxV 10)
23:51:47:alg:Debug:got -p - q <= -1
23:51:19:alg:Debug:l17: compute ub for '-x - y', start w/ min -6, maxV 10)
23:51:31:alg:Debug:got -x - y <= -2
23:51:31:alg:Debug:l17: compute ub for '-p - x', start w/ min -2, maxV 10)
23:51:47:alg:Debug:got -p - x <= -2
23:51:19:alg:Debug:l17: compute ub for '-b - x', start w/ min -3, maxV 10)
23:51:31:alg:Debug:got -b - x <= -1
23:51:32:alg:Debug:l17: compute ub for '-p', start w/ min -1, maxV 10)
23:51:47:alg:Debug:got -p <= -1
23:51:19:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -x <= -1
23:51:34:alg:Debug:l17: compute ub for '-a - b', start w/ min 0, maxV 10)
23:51:50:alg:Debug:got -a - b <= 0
23:51:19:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -q - y <= -1
23:51:34:alg:Debug:l17: compute ub for '-a', start w/ min 0, maxV 10)
23:51:50:alg:Debug:got -a <= 0
23:51:19:alg:Debug:l17: compute ub for '-b - q', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -b - q <= -1
23:51:34:alg:Debug:l17: compute ub for '-a - p', start w/ min -1, maxV 10)
23:51:50:alg:Debug:got -a - p <= -1
23:51:19:alg:Debug:l17: compute ub for '-b - y', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -b - y <= -1
23:51:34:alg:Debug:l17: compute ub for '-b - p', start w/ min -1, maxV 10)
23:51:50:alg:Debug:got -b - p <= -1
23:51:19:alg:Debug:l17: compute ub for '-a - q', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -a - q <= -1
23:51:34:alg:Debug:l17: compute ub for '-b', start w/ min 0, maxV 10)
23:51:50:alg:Debug:got -b <= 0
23:51:19:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:51:34:alg:Debug:got -q <= 0
23:51:35:alg:Debug:l17: compute ub for 'a - x', start w/ min 0, maxV 10)
23:51:50:alg:Debug:got a - x <= 0
23:51:19:alg:Debug:l17: compute ub for '-a - x', start w/ min -1, maxV 10)
23:51:34:alg:Debug:got -a - x <= -1
23:51:35:alg:Debug:l17: compute ub for '-p - y', start w/ min -2, maxV 10)
23:51:50:alg:Debug:got -p - y <= -2
23:51:19:alg:Debug:l17: compute ub for 'b - y', start w/ min 0, maxV 10)
23:51:34:alg:Debug:got b - y <= 0
23:51:35:alg:Debug:l17: compute ub for '-q - x', start w/ min -1, maxV 10)
23:51:50:alg:Debug:got -q - x <= -1
23:51:50:alg:Info:24 invs:
l17: -a - y <= -1, -p - q <= -1, -b - x <= -1, -y <= -1, -x - y <= -2, -p - x <= -2, -a - q <= -1, -x <= -1, -p <= -1, a - x <= 0, -q - y <= -1, -b - p <= -1, -q - x <= -1, -b - y <= -1, -a - p <= -1, -a - x <= -1, -a - b <= 0, -q <= 0, -b <= 0, -a <= 0, -p - y <= -2, -b - q <= -1, b - y <= 0, a*b*p - x*y + q == 0
23:51:50:alg:Info:test 24 invs on all 739 traces
23:51:51:alg:Info:find uniq invs
23:51:51:alg:Info:24 invs:
l17: -a - y <= -1, -p - q <= -1, -b - x <= -1, -y <= -1, -x - y <= -2, -p - x <= -2, -a - q <= -1, -x <= -1, -p <= -1, a - x <= 0, -q - y <= -1, -b - p <= -1, -q - x <= -1, -b - y <= -1, -a - p <= -1, -a - x <= -1, -a - b <= 0, -q <= 0, -b <= 0, -a <= 0, -p - y <= -2, -b - q <= -1, b - y <= 0, a*b*p - x*y + q == 0
23:51:52:alg:Info:removed 13 redundant invs
23:51:52:alg:Info:got 11 invs, 144 inps (test 60): 
l17: a - x <= 0, -b <= 0, -a - q <= -1, a*b*p - x*y + q == 0, -b - q <= -1, -p <= -1, b - y <= 0, -q <= 0, -x <= -1, -a <= 0, -y <= -1
23:51:52:alg:Info:*done* prog programs/nla/prod4br.c, invs 11, time 55.4252970219 s
23:51:52:alg:Debug:rm -rf /var/tmp/DIG2_Fnfjr8
23:51:53:alg:Debug:src: /var/tmp/DIG2_8q8xtJ/prod4br.c
23:51:53:alg:Info:analyze programs/nla/prod4br.c
23:51:53:alg:Info:set seed to: 2.0 (test 98)
23:51:53:miscs:Info:autodeg 3
23:51:53:alg:Info:check reachability
23:51:53:alg:Info:gen eqts at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:51:53:alg:Debug:l17: need more traces (34 eqts, need >= 126)
23:51:53:alg:Debug:obtain 35 new traces
23:51:53:alg:Debug:l17: need more traces (69 eqts, need >= 126)
23:51:54:alg:Debug:obtain 38 new traces
23:51:54:alg:Debug:l17: need more traces (107 eqts, need >= 126)
23:51:54:alg:Debug:obtain 38 new traces
23:51:54:alg:Debug:l17: infer using 126 exprs
23:51:54:miscs:Debug:solve 84 uks using 126 eqts
23:51:59:alg:Debug:l17: 1 candidates:
a*b*p - x*y + q == 0
23:51:59:alg:Debug:l17: check 1 unchecked (1 candidates)
23:52:2:alg:Debug:l17: no disproved candidates -- break
23:52:2:alg:Debug:l17: got 1 eqts, 0 new inps
23:52:2:alg:Debug:a*b*p - x*y + q == 0
23:52:2:alg:Info:1 invs:
l17: a*b*p - x*y + q == 0
23:52:2:alg:Info:gen ieqs at 1 locs: l17 (int x, int y, int a, int b, int p, int q)
23:52:2:alg:Info:1 locs: check upperbounds for 72 terms
23:52:2:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
23:52:15:alg:Info:1 locs: compute upperbounds for 23 terms
23:52:15:miscs:Debug:workloads 'guesscheck' 12: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:52:16:alg:Debug:l17: compute ub for '-p', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -p <= -1
23:52:16:alg:Debug:l17: compute ub for '-a', start w/ min 0, maxV 10)
23:52:31:alg:Debug:got -a <= 0
23:52:31:alg:Debug:l17: compute ub for '-x - y', start w/ min -6, maxV 10)
23:52:44:alg:Debug:got -x - y <= -2
23:52:16:alg:Debug:l17: compute ub for '-b - p', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -b - p <= -1
23:52:31:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
23:52:44:alg:Debug:got -a - y <= -1
23:52:16:alg:Debug:l17: compute ub for '-b - x', start w/ min -3, maxV 10)
23:52:28:alg:Debug:got -b - x <= -1
23:52:28:alg:Debug:l17: compute ub for 'b - y', start w/ min 0, maxV 10)
23:52:44:alg:Debug:got b - y <= 0
23:52:16:alg:Debug:l17: compute ub for '-p - x', start w/ min -2, maxV 10)
23:52:31:alg:Debug:got -p - x <= -2
23:52:31:alg:Debug:l17: compute ub for '-a - p', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -a - p <= -1
23:52:16:alg:Debug:l17: compute ub for '-q - x', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -q - x <= -1
23:52:31:alg:Debug:l17: compute ub for '-q - y', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -q - y <= -1
23:52:16:alg:Debug:l17: compute ub for '-q', start w/ min 0, maxV 10)
23:52:31:alg:Debug:got -q <= 0
23:52:31:alg:Debug:l17: compute ub for '-p - q', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -p - q <= -1
23:52:16:alg:Debug:l17: compute ub for '-a - b', start w/ min 0, maxV 10)
23:52:31:alg:Debug:got -a - b <= 0
23:52:31:alg:Debug:l17: compute ub for '-b', start w/ min 0, maxV 10)
23:52:47:alg:Debug:got -b <= 0
23:52:16:alg:Debug:l17: compute ub for '-a - q', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -a - q <= -1
23:52:31:alg:Debug:l17: compute ub for '-p - y', start w/ min -2, maxV 10)
23:52:47:alg:Debug:got -p - y <= -2
23:52:16:alg:Debug:l17: compute ub for 'a - x', start w/ min 0, maxV 10)
23:52:31:alg:Debug:got a - x <= 0
23:52:31:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -y <= -1
23:52:16:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -x <= -1
23:52:32:alg:Debug:l17: compute ub for '-b - q', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -b - q <= -1
23:52:16:alg:Debug:l17: compute ub for '-a - x', start w/ min -1, maxV 10)
23:52:31:alg:Debug:got -a - x <= -1
23:52:31:alg:Debug:l17: compute ub for '-b - y', start w/ min -1, maxV 10)
23:52:47:alg:Debug:got -b - y <= -1
23:52:47:alg:Info:24 invs:
l17: -x - y <= -2, -b - p <= -1, -a <= 0, -a - y <= -1, -p <= -1, -a - q <= -1, -a - p <= -1, -p - x <= -2, -p - q <= -1, -a - x <= -1, -q - y <= -1, -q - x <= -1, -p - y <= -2, -x <= -1, -b - q <= -1, -b - x <= -1, -a - b <= 0, -b - y <= -1, -y <= -1, a - x <= 0, -q <= 0, -b <= 0, b - y <= 0, a*b*p - x*y + q == 0
23:52:47:alg:Info:test 24 invs on all 763 traces
23:52:48:alg:Info:find uniq invs
23:52:48:alg:Info:24 invs:
l17: -x - y <= -2, -b - p <= -1, -a <= 0, -a - y <= -1, -p <= -1, -a - q <= -1, -a - p <= -1, -p - x <= -2, -p - q <= -1, -a - x <= -1, -q - y <= -1, -q - x <= -1, -p - y <= -2, -x <= -1, -b - q <= -1, -b - x <= -1, -a - b <= 0, -b - y <= -1, -y <= -1, a - x <= 0, -q <= 0, -b <= 0, b - y <= 0, a*b*p - x*y + q == 0
23:52:49:alg:Info:removed 13 redundant invs
23:52:49:alg:Info:got 11 invs, 149 inps (test 45): 
l17: -b - q <= -1, -a - q <= -1, -a <= 0, -b <= 0, a - x <= 0, b - y <= 0, a*b*p - x*y + q == 0, -y <= -1, -p <= -1, -q <= 0, -x <= -1
23:52:49:alg:Info:*done* prog programs/nla/prod4br.c, invs 11, time 55.7357280254 s
23:52:49:alg:Debug:rm -rf /var/tmp/DIG2_8q8xtJ
running prodbin
23:52:50:alg:Debug:src: /var/tmp/DIG2_KohQtu/prodbin.c
23:52:50:alg:Info:analyze programs/nla/prodbin.c
23:52:50:alg:Info:set seed to: 0.0 (test 11)
23:52:50:miscs:Info:autodeg 4
23:52:50:alg:Info:check reachability
23:52:50:alg:Info:gen eqts at 1 locs: l15 (int a, int b, int x, int y, int z)
23:52:50:alg:Debug:l15: need more traces (31 eqts, need >= 189)
23:52:50:alg:Debug:obtain 5 new traces
23:52:50:alg:Debug:l15: need more traces (36 eqts, need >= 189)
23:52:50:alg:Debug:obtain 51 new traces
23:52:51:alg:Debug:l15: need more traces (87 eqts, need >= 189)
23:52:51:alg:Debug:obtain 52 new traces
23:52:51:alg:Debug:l15: need more traces (139 eqts, need >= 189)
23:52:51:alg:Debug:obtain 59 new traces
23:52:51:alg:Debug:l15: infer using 189 exprs
23:52:51:miscs:Debug:solve 126 uks using 189 eqts
23:53:5:alg:Debug:l15: 1 candidates:
a*b - x*y - z == 0
23:53:5:alg:Debug:l15: check 1 unchecked (1 candidates)
23:53:8:alg:Debug:l15: no disproved candidates -- break
23:53:8:alg:Debug:l15: got 1 eqts, 0 new inps
23:53:8:alg:Debug:a*b - x*y - z == 0
23:53:8:alg:Info:1 invs:
l15: a*b - x*y - z == 0
23:53:8:alg:Info:gen ieqs at 1 locs: l15 (int a, int b, int x, int y, int z)
23:53:8:alg:Info:1 locs: check upperbounds for 50 terms
23:53:8:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:53:18:alg:Info:1 locs: compute upperbounds for 18 terms
23:53:18:miscs:Debug:workloads 'guesscheck' 9: [2, 2, 2, 2, 2, 2, 2, 2, 2]
23:53:18:alg:Debug:l15: compute ub for '-b + y', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -b + y <= 0
23:53:34:alg:Debug:l15: compute ub for '-a - z', start w/ min 0, maxV 10)
23:53:49:alg:Debug:got -a - z <= 0
23:53:19:alg:Debug:l15: compute ub for '-y', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -y <= 0
23:53:34:alg:Debug:l15: compute ub for '-a - y', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -a - y <= 0
23:53:19:alg:Debug:l15: compute ub for '-b - y', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -b - y <= 0
23:53:34:alg:Debug:l15: compute ub for '-z', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -z <= 0
23:53:18:alg:Debug:l15: compute ub for 'a - x', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got a - x <= 0
23:53:34:alg:Debug:l15: compute ub for '-a - x', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -a - x <= 0
23:53:18:alg:Debug:l15: compute ub for '-a - b', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -a - b <= 0
23:53:34:alg:Debug:l15: compute ub for '-x', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -x <= 0
23:53:18:alg:Debug:l15: compute ub for '-b - z', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -b - z <= 0
23:53:34:alg:Debug:l15: compute ub for '-y - z', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -y - z <= 0
23:53:19:alg:Debug:l15: compute ub for '-a', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -a <= 0
23:53:34:alg:Debug:l15: compute ub for '-b - x', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -b - x <= 0
23:53:19:alg:Debug:l15: compute ub for '-x + z', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -x + z <= 0
23:53:34:alg:Debug:l15: compute ub for '-x - y', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -x - y <= 0
23:53:18:alg:Debug:l15: compute ub for '-b', start w/ min 0, maxV 10)
23:53:34:alg:Debug:got -b <= 0
23:53:34:alg:Debug:l15: compute ub for '-x - z', start w/ min 0, maxV 10)
23:53:50:alg:Debug:got -x - z <= 0
23:53:50:alg:Info:19 invs:
l15: -b + y <= 0, -a <= 0, -x <= 0, a - x <= 0, -a - y <= 0, -b <= 0, -a - b <= 0, -y - z <= 0, -x + z <= 0, -x - y <= 0, -y <= 0, -z <= 0, -a - z <= 0, -b - x <= 0, -b - z <= 0, -a - x <= 0, -b - y <= 0, -x - z <= 0, a*b - x*y - z == 0
23:53:50:alg:Info:test 19 invs on all 692 traces
23:53:50:alg:Info:find uniq invs
23:53:50:alg:Info:19 invs:
l15: -b + y <= 0, -a <= 0, -x <= 0, a - x <= 0, -a - y <= 0, -b <= 0, -a - b <= 0, -y - z <= 0, -x + z <= 0, -x - y <= 0, -y <= 0, -z <= 0, -a - z <= 0, -b - x <= 0, -b - z <= 0, -a - x <= 0, -b - y <= 0, -x - z <= 0, a*b - x*y - z == 0
23:53:51:alg:Info:removed 12 redundant invs
23:53:51:alg:Info:got 7 invs, 142 inps (test 51): 
l15: -b + y <= 0, -x + z <= 0, -y <= 0, -a <= 0, a - x <= 0, a*b - x*y - z == 0, -z <= 0
23:53:51:alg:Info:*done* prog programs/nla/prodbin.c, invs 7, time 60.6595129967 s
23:53:51:alg:Debug:rm -rf /var/tmp/DIG2_KohQtu
23:53:52:alg:Debug:src: /var/tmp/DIG2_F7LRjv/prodbin.c
23:53:52:alg:Info:analyze programs/nla/prodbin.c
23:53:52:alg:Info:set seed to: 1.0 (test 83)
23:53:52:miscs:Info:autodeg 4
23:53:52:alg:Info:check reachability
23:53:52:alg:Info:gen eqts at 1 locs: l15 (int a, int b, int x, int y, int z)
23:53:52:alg:Debug:l15: need more traces (31 eqts, need >= 189)
23:53:52:alg:Debug:obtain 5 new traces
23:53:52:alg:Debug:l15: need more traces (36 eqts, need >= 189)
23:53:52:alg:Debug:obtain 51 new traces
23:53:52:alg:Debug:l15: need more traces (87 eqts, need >= 189)
23:53:53:alg:Debug:obtain 52 new traces
23:53:53:alg:Debug:l15: need more traces (139 eqts, need >= 189)
23:53:53:alg:Debug:obtain 59 new traces
23:53:53:alg:Debug:l15: infer using 189 exprs
23:53:53:miscs:Debug:solve 126 uks using 189 eqts
23:54:5:alg:Debug:l15: 1 candidates:
a*b - x*y - z == 0
23:54:5:alg:Debug:l15: check 1 unchecked (1 candidates)
23:54:8:alg:Debug:l15: no disproved candidates -- break
23:54:8:alg:Debug:l15: got 1 eqts, 0 new inps
23:54:8:alg:Debug:a*b - x*y - z == 0
23:54:8:alg:Info:1 invs:
l15: a*b - x*y - z == 0
23:54:8:alg:Info:gen ieqs at 1 locs: l15 (int a, int b, int x, int y, int z)
23:54:8:alg:Info:1 locs: check upperbounds for 50 terms
23:54:8:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:54:19:alg:Info:1 locs: compute upperbounds for 18 terms
23:54:19:miscs:Debug:workloads 'guesscheck' 9: [2, 2, 2, 2, 2, 2, 2, 2, 2]
23:54:19:alg:Debug:l15: compute ub for 'a - x', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got a - x <= 0
23:54:34:alg:Debug:l15: compute ub for '-x', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -x <= 0
23:54:19:alg:Debug:l15: compute ub for '-a - b', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -a - b <= 0
23:54:34:alg:Debug:l15: compute ub for '-a - z', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -a - z <= 0
23:54:19:alg:Debug:l15: compute ub for '-x - y', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -x - y <= 0
23:54:34:alg:Debug:l15: compute ub for '-b - z', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -b - z <= 0
23:54:19:alg:Debug:l15: compute ub for '-b - y', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -b - y <= 0
23:54:34:alg:Debug:l15: compute ub for '-a', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -a <= 0
23:54:19:alg:Debug:l15: compute ub for '-y', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -y <= 0
23:54:34:alg:Debug:l15: compute ub for '-a - y', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -a - y <= 0
23:54:19:alg:Debug:l15: compute ub for '-x - z', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -x - z <= 0
23:54:34:alg:Debug:l15: compute ub for '-b + y', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -b + y <= 0
23:54:19:alg:Debug:l15: compute ub for '-z', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -z <= 0
23:54:34:alg:Debug:l15: compute ub for '-x + z', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -x + z <= 0
23:54:19:alg:Debug:l15: compute ub for '-b - x', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -b - x <= 0
23:54:34:alg:Debug:l15: compute ub for '-a - x', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -a - x <= 0
23:54:19:alg:Debug:l15: compute ub for '-y - z', start w/ min 0, maxV 10)
23:54:34:alg:Debug:got -y - z <= 0
23:54:34:alg:Debug:l15: compute ub for '-b', start w/ min 0, maxV 10)
23:54:50:alg:Debug:got -b <= 0
23:54:50:alg:Info:19 invs:
l15: -b - z <= 0, -x - z <= 0, -b <= 0, -y <= 0, -b - x <= 0, -a - z <= 0, -z <= 0, -x <= 0, -a - b <= 0, -a <= 0, -y - z <= 0, -b - y <= 0, -b + y <= 0, -a - y <= 0, -a - x <= 0, a - x <= 0, -x - y <= 0, -x + z <= 0, a*b - x*y - z == 0
23:54:50:alg:Info:test 19 invs on all 714 traces
23:54:51:alg:Info:find uniq invs
23:54:51:alg:Info:19 invs:
l15: -b - z <= 0, -x - z <= 0, -b <= 0, -y <= 0, -b - x <= 0, -a - z <= 0, -z <= 0, -x <= 0, -a - b <= 0, -a <= 0, -y - z <= 0, -b - y <= 0, -b + y <= 0, -a - y <= 0, -a - x <= 0, a - x <= 0, -x - y <= 0, -x + z <= 0, a*b - x*y - z == 0
23:54:51:alg:Info:removed 12 redundant invs
23:54:51:alg:Info:got 7 invs, 147 inps (test 60): 
l15: a*b - x*y - z == 0, -a - y <= 0, -y <= 0, -b + y <= 0, -x + z <= 0, -z <= 0, a - x <= 0
23:54:51:alg:Info:*done* prog programs/nla/prodbin.c, invs 7, time 59.21154809 s
23:54:51:alg:Debug:rm -rf /var/tmp/DIG2_F7LRjv
23:54:52:alg:Debug:src: /var/tmp/DIG2_qVEsSE/prodbin.c
23:54:52:alg:Info:analyze programs/nla/prodbin.c
23:54:52:alg:Info:set seed to: 2.0 (test 98)
23:54:52:miscs:Info:autodeg 4
23:54:52:alg:Info:check reachability
23:54:52:alg:Info:gen eqts at 1 locs: l15 (int a, int b, int x, int y, int z)
23:54:52:alg:Debug:l15: need more traces (32 eqts, need >= 189)
23:54:52:alg:Debug:obtain 5 new traces
23:54:52:alg:Debug:l15: need more traces (37 eqts, need >= 189)
23:54:53:alg:Debug:obtain 51 new traces
23:54:53:alg:Debug:l15: need more traces (88 eqts, need >= 189)
23:54:53:alg:Debug:obtain 52 new traces
23:54:53:alg:Debug:l15: need more traces (140 eqts, need >= 189)
23:54:53:alg:Debug:obtain 59 new traces
23:54:53:alg:Debug:l15: infer using 189 exprs
23:54:53:miscs:Debug:solve 126 uks using 189 eqts
23:55:6:alg:Debug:l15: 1 candidates:
a*b - x*y - z == 0
23:55:6:alg:Debug:l15: check 1 unchecked (1 candidates)
23:55:9:alg:Debug:l15: no disproved candidates -- break
23:55:9:alg:Debug:l15: got 1 eqts, 0 new inps
23:55:9:alg:Debug:a*b - x*y - z == 0
23:55:9:alg:Info:1 invs:
l15: a*b - x*y - z == 0
23:55:9:alg:Info:gen ieqs at 1 locs: l15 (int a, int b, int x, int y, int z)
23:55:9:alg:Info:1 locs: check upperbounds for 50 terms
23:55:9:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:55:20:alg:Info:1 locs: compute upperbounds for 18 terms
23:55:20:miscs:Debug:workloads 'guesscheck' 9: [2, 2, 2, 2, 2, 2, 2, 2, 2]
23:55:20:alg:Debug:l15: compute ub for '-b - z', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -b - z <= 0
23:55:35:alg:Debug:l15: compute ub for 'a - x', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got a - x <= 0
23:55:20:alg:Debug:l15: compute ub for '-x - y', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -x - y <= 0
23:55:35:alg:Debug:l15: compute ub for '-b + y', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -b + y <= 0
23:55:20:alg:Debug:l15: compute ub for '-a', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -a <= 0
23:55:35:alg:Debug:l15: compute ub for '-a - z', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -a - z <= 0
23:55:20:alg:Debug:l15: compute ub for '-a - b', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -a - b <= 0
23:55:35:alg:Debug:l15: compute ub for '-a - x', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -a - x <= 0
23:55:20:alg:Debug:l15: compute ub for '-b - x', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -b - x <= 0
23:55:35:alg:Debug:l15: compute ub for '-x + z', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -x + z <= 0
23:55:20:alg:Debug:l15: compute ub for '-z', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -z <= 0
23:55:35:alg:Debug:l15: compute ub for '-y - z', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -y - z <= 0
23:55:20:alg:Debug:l15: compute ub for '-y', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -y <= 0
23:55:35:alg:Debug:l15: compute ub for '-a - y', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -a - y <= 0
23:55:20:alg:Debug:l15: compute ub for '-x', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -x <= 0
23:55:35:alg:Debug:l15: compute ub for '-x - z', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -x - z <= 0
23:55:20:alg:Debug:l15: compute ub for '-b - y', start w/ min 0, maxV 10)
23:55:35:alg:Debug:got -b - y <= 0
23:55:35:alg:Debug:l15: compute ub for '-b', start w/ min 0, maxV 10)
23:55:51:alg:Debug:got -b <= 0
23:55:51:alg:Info:19 invs:
l15: -b - z <= 0, a - x <= 0, -b + y <= 0, -a - z <= 0, -a - x <= 0, -x - y <= 0, -a <= 0, -a - b <= 0, -b <= 0, -y - z <= 0, -x - z <= 0, -x + z <= 0, -a - y <= 0, -x <= 0, -b - y <= 0, -y <= 0, -b - x <= 0, -z <= 0, a*b - x*y - z == 0
23:55:51:alg:Info:test 19 invs on all 715 traces
23:55:52:alg:Info:find uniq invs
23:55:52:alg:Info:19 invs:
l15: -b - z <= 0, a - x <= 0, -b + y <= 0, -a - z <= 0, -a - x <= 0, -x - y <= 0, -a <= 0, -a - b <= 0, -b <= 0, -y - z <= 0, -x - z <= 0, -x + z <= 0, -a - y <= 0, -x <= 0, -b - y <= 0, -y <= 0, -b - x <= 0, -z <= 0, a*b - x*y - z == 0
23:55:52:alg:Info:removed 12 redundant invs
23:55:52:alg:Info:got 7 invs, 146 inps (test 45): 
l15: a*b - x*y - z == 0, -b + y <= 0, -a <= 0, -z <= 0, -y <= 0, -x + z <= 0, a - x <= 0
23:55:52:alg:Info:*done* prog programs/nla/prodbin.c, invs 7, time 59.8667030334 s
23:55:52:alg:Debug:rm -rf /var/tmp/DIG2_qVEsSE
running sqrt1
23:55:53:alg:Debug:src: /var/tmp/DIG2_lS_R0F/sqrt1.c
23:55:53:alg:Info:analyze programs/nla/sqrt1.c
23:55:53:alg:Info:set seed to: 0.0 (test 11)
23:55:53:miscs:Info:autodeg 5
23:55:53:alg:Info:check reachability
23:55:53:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int t, int s)
23:55:53:alg:Debug:l19: need more traces (24 eqts, need >= 189)
23:55:53:alg:Debug:obtain 1 new traces
23:55:53:alg:Debug:l19: need more traces (25 eqts, need >= 189)
23:55:53:alg:Debug:obtain 7 new traces
23:55:53:alg:Debug:l19: need more traces (32 eqts, need >= 189)
23:55:54:alg:Debug:obtain 7 new traces
23:55:54:alg:Debug:l19: need more traces (39 eqts, need >= 189)
23:55:54:alg:Debug:obtain 7 new traces
23:55:54:alg:Debug:l19: need more traces (46 eqts, need >= 189)
23:55:54:alg:Debug:obtain 11 new traces
23:55:54:alg:Debug:l19: need more traces (57 eqts, need >= 189)
23:55:54:alg:Debug:obtain 11 new traces
23:55:54:alg:Debug:l19: need more traces (68 eqts, need >= 189)
23:55:54:alg:Debug:obtain 11 new traces
23:55:54:alg:Debug:l19: need more traces (79 eqts, need >= 189)
23:55:54:alg:Debug:obtain 14 new traces
23:55:54:alg:Debug:l19: need more traces (93 eqts, need >= 189)
23:55:54:alg:Debug:obtain 14 new traces
23:55:54:alg:Debug:l19: need more traces (107 eqts, need >= 189)
23:55:54:alg:Debug:obtain 14 new traces
23:55:55:alg:Debug:l19: need more traces (121 eqts, need >= 189)
23:55:55:alg:Debug:obtain 8 new traces
23:55:55:alg:Debug:l19: need more traces (129 eqts, need >= 189)
23:55:55:alg:Debug:obtain 14 new traces
23:55:55:alg:Debug:l19: need more traces (143 eqts, need >= 189)
23:55:55:alg:Debug:obtain 12 new traces
23:55:55:alg:Debug:l19: need more traces (155 eqts, need >= 189)
23:55:55:alg:Debug:obtain 8 new traces
23:55:55:alg:Debug:l19: need more traces (163 eqts, need >= 189)
23:55:55:alg:Debug:obtain 8 new traces
23:55:55:alg:Debug:l19: need more traces (171 eqts, need >= 189)
23:55:55:alg:Debug:obtain 12 new traces
23:55:55:alg:Debug:l19: need more traces (183 eqts, need >= 189)
23:55:55:alg:Debug:obtain 12 new traces
23:55:55:alg:Debug:l19: infer using 189 exprs
23:55:55:miscs:Debug:solve 126 uks using 189 eqts
23:56:11:alg:Debug:l19: 2 candidates:
t^2 - 4*s + 2*t + 1 == 0
2*a - t + 1 == 0
23:56:11:alg:Debug:l19: check 2 unchecked (2 candidates)
23:56:11:miscs:Debug:workloads 'prove' 2: [1, 1]
23:56:11:alg:Debug:l19: no disproved candidates -- break
23:56:11:alg:Debug:l19: got 2 eqts, 0 new inps
23:56:11:alg:Debug:2*a - t + 1 == 0
(t*t) - 4*s + 2*t + 1 == 0
23:56:11:alg:Info:2 invs:
l19: 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0
23:56:11:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int t, int s)
23:56:11:alg:Info:1 locs: check upperbounds for 32 terms
23:56:11:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:56:11:alg:Info:1 locs: compute upperbounds for 19 terms
23:56:11:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:56:11:alg:Debug:l19: compute ub for '-n - s', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -n - s <= -1
23:56:11:alg:Debug:l19: compute ub for '-t', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -t <= -1
23:56:12:alg:Debug:l19: compute ub for '-n + s', start w/ min 9, maxV 10)
23:56:12:alg:Debug:got -n + s <= 9
23:56:11:alg:Debug:l19: compute ub for 'a - n', start w/ min 0, maxV 10)
23:56:12:alg:Debug:got a - n <= 0
23:56:12:alg:Debug:l19: compute ub for '-a + t', start w/ min 9, maxV 10)
23:56:12:alg:Debug:got -a + t <= 9
23:56:11:alg:Debug:l19: compute ub for '-n - t', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -n - t <= -1
23:56:12:alg:Debug:l19: compute ub for 't', start w/ min 9, maxV 10)
23:56:12:alg:Debug:got t <= 9
23:56:11:alg:Debug:l19: compute ub for 'a', start w/ min 9, maxV 10)
23:56:11:alg:Debug:got a <= 9
23:56:11:alg:Debug:l19: compute ub for '-a - n', start w/ min 0, maxV 10)
23:56:12:alg:Debug:got -a - n <= 0
23:56:11:alg:Debug:l19: compute ub for '-s + t', start w/ min 0, maxV 10)
23:56:12:alg:Debug:got -s + t <= 0
23:56:12:alg:Debug:l19: compute ub for 'a - s', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got a - s <= -1
23:56:11:alg:Debug:l19: compute ub for '-a - t', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -a - t <= -1
23:56:12:alg:Debug:l19: compute ub for '-a', start w/ min 0, maxV 10)
23:56:12:alg:Debug:got -a <= 0
23:56:11:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:56:12:alg:Debug:got -n <= 0
23:56:12:alg:Debug:l19: compute ub for '-a - s', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -a - s <= -1
23:56:11:alg:Debug:l19: compute ub for '-s', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got -s <= -1
23:56:12:alg:Debug:l19: compute ub for '-s - t', start w/ min -2, maxV 10)
23:56:12:alg:Debug:got -s - t <= -2
23:56:11:alg:Debug:l19: compute ub for '-n + t', start w/ min 1, maxV 10)
23:56:12:alg:Debug:got -n + t <= 2
23:56:12:alg:Debug:l19: compute ub for 'a - t', start w/ min -1, maxV 10)
23:56:12:alg:Debug:got a - t <= -1
23:56:12:alg:Info:21 invs:
l19: -a - n <= 0, a <= 9, -n - t <= -1, t <= 9, -a + t <= 9, 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0, -n - s <= -1, -t <= -1, -n + s <= 9, a - n <= 0, -s - t <= -2, -s <= -1, -a <= 0, -n <= 0, -a - s <= -1, a - s <= -1, -n + t <= 2, -a - t <= -1, a - t <= -1, -s + t <= 0
23:56:12:alg:Info:test 21 invs on all 225 traces
23:56:12:ds:Warn:l19: a <= 9 disproved
23:56:12:ds:Warn:l19: -n + s <= 9 disproved
23:56:12:ds:Warn:l19: -a + t <= 9 disproved
23:56:12:ds:Warn:l19: t <= 9 disproved
23:56:12:alg:Info:find uniq invs
23:56:12:alg:Info:17 invs:
l19: -a - n <= 0, -n - t <= -1, 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0, -n - s <= -1, -t <= -1, a - n <= 0, -s - t <= -2, -s <= -1, -a <= 0, -n <= 0, -a - s <= -1, a - s <= -1, -n + t <= 2, -a - t <= -1, a - t <= -1, -s + t <= 0
23:56:13:alg:Info:removed 12 redundant invs
23:56:13:alg:Info:got 5 invs, 27 inps (test 51): 
l19: -a - t <= -1, 2*a - t + 1 == 0, a - n <= 0, -n + t <= 2, (t*t) - 4*s + 2*t + 1 == 0
23:56:13:alg:Info:*done* prog programs/nla/sqrt1.c, invs 5, time 19.4537081718 s
23:56:13:alg:Debug:rm -rf /var/tmp/DIG2_lS_R0F
23:56:14:alg:Debug:src: /var/tmp/DIG2_lCCFBC/sqrt1.c
23:56:14:alg:Info:analyze programs/nla/sqrt1.c
23:56:14:alg:Info:set seed to: 1.0 (test 83)
23:56:14:miscs:Info:autodeg 5
23:56:14:alg:Info:check reachability
23:56:14:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int t, int s)
23:56:14:alg:Debug:l19: need more traces (21 eqts, need >= 189)
23:56:14:alg:Debug:obtain 1 new traces
23:56:14:alg:Debug:l19: need more traces (22 eqts, need >= 189)
23:56:14:alg:Debug:obtain 7 new traces
23:56:14:alg:Debug:l19: need more traces (29 eqts, need >= 189)
23:56:14:alg:Debug:obtain 7 new traces
23:56:14:alg:Debug:l19: need more traces (36 eqts, need >= 189)
23:56:14:alg:Debug:obtain 7 new traces
23:56:14:alg:Debug:l19: need more traces (43 eqts, need >= 189)
23:56:15:alg:Debug:obtain 11 new traces
23:56:15:alg:Debug:l19: need more traces (54 eqts, need >= 189)
23:56:15:alg:Debug:obtain 11 new traces
23:56:15:alg:Debug:l19: need more traces (65 eqts, need >= 189)
23:56:15:alg:Debug:obtain 11 new traces
23:56:15:alg:Debug:l19: need more traces (76 eqts, need >= 189)
23:56:15:alg:Debug:obtain 14 new traces
23:56:15:alg:Debug:l19: need more traces (90 eqts, need >= 189)
23:56:15:alg:Debug:obtain 14 new traces
23:56:15:alg:Debug:l19: need more traces (104 eqts, need >= 189)
23:56:15:alg:Debug:obtain 14 new traces
23:56:15:alg:Debug:l19: need more traces (118 eqts, need >= 189)
23:56:15:alg:Debug:obtain 8 new traces
23:56:15:alg:Debug:l19: need more traces (126 eqts, need >= 189)
23:56:15:alg:Debug:obtain 14 new traces
23:56:15:alg:Debug:l19: need more traces (140 eqts, need >= 189)
23:56:15:alg:Debug:obtain 12 new traces
23:56:15:alg:Debug:l19: need more traces (152 eqts, need >= 189)
23:56:16:alg:Debug:obtain 8 new traces
23:56:16:alg:Debug:l19: need more traces (160 eqts, need >= 189)
23:56:16:alg:Debug:obtain 8 new traces
23:56:16:alg:Debug:l19: need more traces (168 eqts, need >= 189)
23:56:16:alg:Debug:obtain 12 new traces
23:56:16:alg:Debug:l19: need more traces (180 eqts, need >= 189)
23:56:16:alg:Debug:obtain 12 new traces
23:56:16:alg:Debug:l19: infer using 189 exprs
23:56:16:miscs:Debug:solve 126 uks using 189 eqts
23:56:31:alg:Debug:l19: 2 candidates:
t^2 - 4*s + 2*t + 1 == 0
2*a - t + 1 == 0
23:56:31:alg:Debug:l19: check 2 unchecked (2 candidates)
23:56:31:miscs:Debug:workloads 'prove' 2: [1, 1]
23:56:32:alg:Debug:l19: no disproved candidates -- break
23:56:32:alg:Debug:l19: got 2 eqts, 0 new inps
23:56:32:alg:Debug:2*a - t + 1 == 0
(t*t) - 4*s + 2*t + 1 == 0
23:56:32:alg:Info:2 invs:
l19: (t*t) - 4*s + 2*t + 1 == 0, 2*a - t + 1 == 0
23:56:32:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int t, int s)
23:56:32:alg:Info:1 locs: check upperbounds for 32 terms
23:56:32:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:56:32:alg:Info:1 locs: compute upperbounds for 19 terms
23:56:32:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:56:32:alg:Debug:l19: compute ub for 'a - t', start w/ min -1, maxV 10)
23:56:32:alg:Debug:got a - t <= -1
23:56:32:alg:Debug:l19: compute ub for '-t', start w/ min -1, maxV 10)
23:56:32:alg:Debug:got -t <= -1
23:56:32:alg:Debug:l19: compute ub for 'a', start w/ min 9, maxV 10)
23:56:32:alg:Debug:got a <= 9
23:56:32:alg:Debug:l19: compute ub for 't', start w/ min 9, maxV 10)
23:56:32:alg:Debug:got t <= 9
23:56:32:alg:Debug:l19: compute ub for '-s - t', start w/ min -2, maxV 10)
23:56:32:alg:Debug:got -s - t <= -2
23:56:32:alg:Debug:l19: compute ub for '-a + t', start w/ min 9, maxV 10)
23:56:32:alg:Debug:got -a + t <= 9
23:56:32:alg:Debug:l19: compute ub for '-n - s', start w/ min -1, maxV 10)
23:56:32:alg:Debug:got -n - s <= -1
23:56:32:alg:Debug:l19: compute ub for '-a - n', start w/ min 0, maxV 10)
23:56:32:alg:Debug:got -a - n <= 0
23:56:32:alg:Debug:l19: compute ub for '-n + s', start w/ min 9, maxV 10)
23:56:32:alg:Debug:got -n + s <= 9
23:56:32:alg:Debug:l19: compute ub for 'a - s', start w/ min -1, maxV 10)
23:56:32:alg:Debug:got a - s <= -1
23:56:32:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:56:33:alg:Debug:got -n <= 0
23:56:32:alg:Debug:l19: compute ub for '-s + t', start w/ min 0, maxV 10)
23:56:32:alg:Debug:got -s + t <= 0
23:56:32:alg:Debug:l19: compute ub for '-s', start w/ min -1, maxV 10)
23:56:33:alg:Debug:got -s <= -1
23:56:32:alg:Debug:l19: compute ub for 'a - n', start w/ min 0, maxV 10)
23:56:32:alg:Debug:got a - n <= 0
23:56:32:alg:Debug:l19: compute ub for '-a - t', start w/ min -1, maxV 10)
23:56:33:alg:Debug:got -a - t <= -1
23:56:32:alg:Debug:l19: compute ub for '-a - s', start w/ min -1, maxV 10)
23:56:32:alg:Debug:got -a - s <= -1
23:56:32:alg:Debug:l19: compute ub for '-n - t', start w/ min -1, maxV 10)
23:56:33:alg:Debug:got -n - t <= -1
23:56:32:alg:Debug:l19: compute ub for '-n + t', start w/ min 1, maxV 10)
23:56:32:alg:Debug:got -n + t <= 2
23:56:32:alg:Debug:l19: compute ub for '-a', start w/ min 0, maxV 10)
23:56:33:alg:Debug:got -a <= 0
23:56:33:alg:Info:21 invs:
l19: (t*t) - 4*s + 2*t + 1 == 0, 2*a - t + 1 == 0, -n - t <= -1, -a - s <= -1, -n + t <= 2, -a - t <= -1, -a <= 0, -s - t <= -2, t <= 9, -s + t <= 0, a - t <= -1, -n + s <= 9, -a + t <= 9, a - s <= -1, -t <= -1, -s <= -1, -n - s <= -1, -n <= 0, a <= 9, a - n <= 0, -a - n <= 0
23:56:33:alg:Info:test 21 invs on all 219 traces
23:56:33:ds:Warn:l19: a <= 9 disproved
23:56:33:ds:Warn:l19: -n + s <= 9 disproved
23:56:33:ds:Warn:l19: -a + t <= 9 disproved
23:56:33:ds:Warn:l19: t <= 9 disproved
23:56:33:alg:Info:find uniq invs
23:56:33:alg:Info:17 invs:
l19: (t*t) - 4*s + 2*t + 1 == 0, 2*a - t + 1 == 0, -n - t <= -1, -a - s <= -1, -n + t <= 2, -a - t <= -1, -a <= 0, -s - t <= -2, -s + t <= 0, a - t <= -1, a - s <= -1, -t <= -1, -s <= -1, -n - s <= -1, -n <= 0, a - n <= 0, -a - n <= 0
23:56:33:alg:Info:removed 12 redundant invs
23:56:33:alg:Info:got 5 invs, 27 inps (test 60): 
l19: -a - t <= -1, (t*t) - 4*s + 2*t + 1 == 0, -n + t <= 2, a - n <= 0, 2*a - t + 1 == 0
23:56:33:alg:Info:*done* prog programs/nla/sqrt1.c, invs 5, time 19.5261189938 s
23:56:33:alg:Debug:rm -rf /var/tmp/DIG2_lCCFBC
23:56:34:alg:Debug:src: /var/tmp/DIG2_svdgiM/sqrt1.c
23:56:35:alg:Info:analyze programs/nla/sqrt1.c
23:56:35:alg:Info:set seed to: 2.0 (test 98)
23:56:35:miscs:Info:autodeg 5
23:56:35:alg:Info:check reachability
23:56:35:alg:Info:gen eqts at 1 locs: l19 (int a, int n, int t, int s)
23:56:35:alg:Debug:l19: need more traces (24 eqts, need >= 189)
23:56:35:alg:Debug:obtain 1 new traces
23:56:35:alg:Debug:l19: need more traces (25 eqts, need >= 189)
23:56:35:alg:Debug:obtain 7 new traces
23:56:35:alg:Debug:l19: need more traces (32 eqts, need >= 189)
23:56:35:alg:Debug:obtain 7 new traces
23:56:35:alg:Debug:l19: need more traces (39 eqts, need >= 189)
23:56:35:alg:Debug:obtain 7 new traces
23:56:35:alg:Debug:l19: need more traces (46 eqts, need >= 189)
23:56:35:alg:Debug:obtain 11 new traces
23:56:35:alg:Debug:l19: need more traces (57 eqts, need >= 189)
23:56:35:alg:Debug:obtain 11 new traces
23:56:35:alg:Debug:l19: need more traces (68 eqts, need >= 189)
23:56:35:alg:Debug:obtain 11 new traces
23:56:35:alg:Debug:l19: need more traces (79 eqts, need >= 189)
23:56:35:alg:Debug:obtain 14 new traces
23:56:35:alg:Debug:l19: need more traces (93 eqts, need >= 189)
23:56:36:alg:Debug:obtain 14 new traces
23:56:36:alg:Debug:l19: need more traces (107 eqts, need >= 189)
23:56:36:alg:Debug:obtain 14 new traces
23:56:36:alg:Debug:l19: need more traces (121 eqts, need >= 189)
23:56:36:alg:Debug:obtain 8 new traces
23:56:36:alg:Debug:l19: need more traces (129 eqts, need >= 189)
23:56:36:alg:Debug:obtain 14 new traces
23:56:36:alg:Debug:l19: need more traces (143 eqts, need >= 189)
23:56:36:alg:Debug:obtain 12 new traces
23:56:36:alg:Debug:l19: need more traces (155 eqts, need >= 189)
23:56:36:alg:Debug:obtain 8 new traces
23:56:36:alg:Debug:l19: need more traces (163 eqts, need >= 189)
23:56:36:alg:Debug:obtain 8 new traces
23:56:36:alg:Debug:l19: need more traces (171 eqts, need >= 189)
23:56:36:alg:Debug:obtain 12 new traces
23:56:36:alg:Debug:l19: need more traces (183 eqts, need >= 189)
23:56:36:alg:Debug:obtain 12 new traces
23:56:36:alg:Debug:l19: infer using 189 exprs
23:56:36:miscs:Debug:solve 126 uks using 189 eqts
23:56:52:alg:Debug:l19: 2 candidates:
t^2 - 4*s + 2*t + 1 == 0
2*a - t + 1 == 0
23:56:52:alg:Debug:l19: check 2 unchecked (2 candidates)
23:56:52:miscs:Debug:workloads 'prove' 2: [1, 1]
23:56:52:alg:Debug:l19: no disproved candidates -- break
23:56:52:alg:Debug:l19: got 2 eqts, 0 new inps
23:56:52:alg:Debug:(t*t) - 4*s + 2*t + 1 == 0
2*a - t + 1 == 0
23:56:52:alg:Info:2 invs:
l19: 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0
23:56:52:alg:Info:gen ieqs at 1 locs: l19 (int a, int n, int t, int s)
23:56:52:alg:Info:1 locs: check upperbounds for 32 terms
23:56:52:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:56:52:alg:Info:1 locs: compute upperbounds for 19 terms
23:56:52:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
23:56:52:alg:Debug:l19: compute ub for '-n - s', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -n - s <= -1
23:56:52:alg:Debug:l19: compute ub for 'a', start w/ min 9, maxV 10)
23:56:52:alg:Debug:got a <= 9
23:56:52:alg:Debug:l19: compute ub for '-s', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -s <= -1
23:56:52:alg:Debug:l19: compute ub for '-n + s', start w/ min 9, maxV 10)
23:56:52:alg:Debug:got -n + s <= 9
23:56:52:alg:Debug:l19: compute ub for '-s - t', start w/ min -2, maxV 10)
23:56:53:alg:Debug:got -s - t <= -2
23:56:52:alg:Debug:l19: compute ub for 't', start w/ min 9, maxV 10)
23:56:52:alg:Debug:got t <= 9
23:56:52:alg:Debug:l19: compute ub for 'a - n', start w/ min 0, maxV 10)
23:56:53:alg:Debug:got a - n <= 0
23:56:52:alg:Debug:l19: compute ub for '-n - t', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -n - t <= -1
23:56:53:alg:Debug:l19: compute ub for '-a + t', start w/ min 9, maxV 10)
23:56:53:alg:Debug:got -a + t <= 9
23:56:52:alg:Debug:l19: compute ub for 'a - s', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got a - s <= -1
23:56:53:alg:Debug:l19: compute ub for '-a - s', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -a - s <= -1
23:56:52:alg:Debug:l19: compute ub for '-a - t', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -a - t <= -1
23:56:53:alg:Debug:l19: compute ub for '-n', start w/ min 0, maxV 10)
23:56:53:alg:Debug:got -n <= 0
23:56:52:alg:Debug:l19: compute ub for '-a - n', start w/ min 0, maxV 10)
23:56:53:alg:Debug:got -a - n <= 0
23:56:53:alg:Debug:l19: compute ub for '-t', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got -t <= -1
23:56:52:alg:Debug:l19: compute ub for 'a - t', start w/ min -1, maxV 10)
23:56:53:alg:Debug:got a - t <= -1
23:56:53:alg:Debug:l19: compute ub for '-s + t', start w/ min 0, maxV 10)
23:56:53:alg:Debug:got -s + t <= 0
23:56:52:alg:Debug:l19: compute ub for '-n + t', start w/ min 1, maxV 10)
23:56:53:alg:Debug:got -n + t <= 2
23:56:53:alg:Debug:l19: compute ub for '-a', start w/ min 0, maxV 10)
23:56:53:alg:Debug:got -a <= 0
23:56:53:alg:Info:21 invs:
l19: -s <= -1, t <= 9, -n + s <= 9, -s - t <= -2, a <= 9, 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0, -n - s <= -1, a - s <= -1, -a - n <= 0, -a <= 0, a - t <= -1, -n <= 0, -t <= -1, -a - s <= -1, -s + t <= 0, -n - t <= -1, -a - t <= -1, -n + t <= 2, -a + t <= 9, a - n <= 0
23:56:53:alg:Info:test 21 invs on all 225 traces
23:56:53:ds:Warn:l19: a <= 9 disproved
23:56:53:ds:Warn:l19: -n + s <= 9 disproved
23:56:53:ds:Warn:l19: -a + t <= 9 disproved
23:56:53:ds:Warn:l19: t <= 9 disproved
23:56:53:alg:Info:find uniq invs
23:56:53:alg:Info:17 invs:
l19: -s <= -1, -s - t <= -2, 2*a - t + 1 == 0, (t*t) - 4*s + 2*t + 1 == 0, -n - s <= -1, a - s <= -1, -a - n <= 0, -a <= 0, a - t <= -1, -n <= 0, -t <= -1, -a - s <= -1, -s + t <= 0, -n - t <= -1, -a - t <= -1, -n + t <= 2, a - n <= 0
23:56:54:alg:Info:removed 12 redundant invs
23:56:54:alg:Info:got 5 invs, 27 inps (test 45): 
l19: a - t <= -1, (t*t) - 4*s + 2*t + 1 == 0, a - n <= 0, 2*a - t + 1 == 0, -n + t <= 2
23:56:54:alg:Info:*done* prog programs/nla/sqrt1.c, invs 5, time 18.9908618927 s
23:56:54:alg:Debug:rm -rf /var/tmp/DIG2_svdgiM
running geo1
23:56:55:alg:Debug:src: /var/tmp/DIG2_F_TW0Y/geo1.c
23:56:55:alg:Info:analyze programs/nla/geo1.c
23:56:55:alg:Info:set seed to: 0.0 (test 11)
23:56:55:miscs:Info:autodeg 5
23:56:55:alg:Info:check reachability
23:56:55:alg:Info:gen eqts at 1 locs: l13 (int x, int y, int z, int k)
23:56:55:alg:Debug:l13: infer using 189 exprs
23:56:55:miscs:Debug:solve 126 uks using 189 eqts
23:57:15:alg:Debug:l13: no new results -- break
23:57:15:alg:Debug:l13: got 0 eqts, 0 new inps
23:57:15:alg:Info:0 invs:
l13: 
23:57:15:alg:Info:gen ieqs at 1 locs: l13 (int x, int y, int z, int k)
23:57:15:alg:Info:1 locs: check upperbounds for 32 terms
23:57:15:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:57:22:alg:Info:1 locs: compute upperbounds for 1 terms
23:57:23:alg:Debug:l13: compute ub for '-k', start w/ min 0, maxV 10)
23:57:23:alg:Debug:got -k <= 0
23:57:23:alg:Info:1 invs:
l13: -k <= 0
23:57:23:alg:Info:test 1 invs on all 1012 traces
23:57:23:alg:Info:find uniq invs
23:57:23:alg:Info:1 invs:
l13: -k <= 0
23:57:23:alg:Info:got 1 invs, 81 inps (test 51): 
l13: -k <= 0
23:57:23:alg:Info:*done* prog programs/nla/geo1.c, invs 1, time 28.7525579929 s
23:57:23:alg:Debug:rm -rf /var/tmp/DIG2_F_TW0Y
23:57:25:alg:Debug:src: /var/tmp/DIG2_K5_P4n/geo1.c
23:57:25:alg:Info:analyze programs/nla/geo1.c
23:57:25:alg:Info:set seed to: 1.0 (test 83)
23:57:25:miscs:Info:autodeg 5
23:57:25:alg:Info:check reachability
23:57:25:alg:Info:gen eqts at 1 locs: l13 (int x, int y, int z, int k)
23:57:25:alg:Debug:l13: infer using 189 exprs
23:57:25:miscs:Debug:solve 126 uks using 189 eqts
23:57:46:alg:Debug:l13: no new results -- break
23:57:46:alg:Debug:l13: got 0 eqts, 0 new inps
23:57:46:alg:Info:0 invs:
l13: 
23:57:46:alg:Info:gen ieqs at 1 locs: l13 (int x, int y, int z, int k)
23:57:46:alg:Info:1 locs: check upperbounds for 32 terms
23:57:46:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:57:54:alg:Info:1 locs: compute upperbounds for 1 terms
23:57:55:alg:Debug:l13: compute ub for '-k', start w/ min 0, maxV 10)
23:57:55:alg:Debug:got -k <= 0
23:57:55:alg:Info:1 invs:
l13: -k <= 0
23:57:55:alg:Info:test 1 invs on all 1025 traces
23:57:55:alg:Info:find uniq invs
23:57:55:alg:Info:1 invs:
l13: -k <= 0
23:57:55:alg:Info:got 1 invs, 80 inps (test 60): 
l13: -k <= 0
23:57:55:alg:Info:*done* prog programs/nla/geo1.c, invs 1, time 30.6961019039 s
23:57:55:alg:Debug:rm -rf /var/tmp/DIG2_K5_P4n
23:57:56:alg:Debug:src: /var/tmp/DIG2_393KMC/geo1.c
23:57:56:alg:Info:analyze programs/nla/geo1.c
23:57:56:alg:Info:set seed to: 2.0 (test 98)
23:57:56:miscs:Info:autodeg 5
23:57:56:alg:Info:check reachability
23:57:57:alg:Info:gen eqts at 1 locs: l13 (int x, int y, int z, int k)
23:57:57:alg:Debug:l13: infer using 189 exprs
23:57:57:miscs:Debug:solve 126 uks using 189 eqts
23:58:41:alg:Debug:l13: no new results -- break
23:58:41:alg:Debug:l13: got 0 eqts, 0 new inps
23:58:41:alg:Info:0 invs:
l13: 
23:58:41:alg:Info:gen ieqs at 1 locs: l13 (int x, int y, int z, int k)
23:58:41:alg:Info:1 locs: check upperbounds for 32 terms
23:58:41:miscs:Debug:workloads 'prove' 16: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
23:58:49:alg:Info:1 locs: compute upperbounds for 1 terms
23:58:49:alg:Debug:l13: compute ub for '-k', start w/ min 0, maxV 10)
23:58:49:alg:Debug:got -k <= 0
23:58:49:alg:Info:1 invs:
l13: -k <= 0
23:58:49:alg:Info:test 1 invs on all 1045 traces
23:58:49:alg:Info:find uniq invs
23:58:49:alg:Info:1 invs:
l13: -k <= 0
23:58:49:alg:Info:got 1 invs, 82 inps (test 45): 
l13: -k <= 0
23:58:49:alg:Info:*done* prog programs/nla/geo1.c, invs 1, time 52.9694609642 s
23:58:49:alg:Debug:rm -rf /var/tmp/DIG2_393KMC
running geo3
23:58:51:alg:Debug:src: /var/tmp/DIG2_crjN7K/geo3.c
23:58:51:alg:Info:analyze programs/nla/geo3.c
23:58:51:alg:Info:set seed to: 0.0 (test 11)
23:58:51:miscs:Info:autodeg 4
23:58:51:alg:Info:check reachability
23:58:51:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int a, int k)
23:58:52:alg:Debug:l12: infer using 189 exprs
23:58:52:miscs:Debug:solve 126 uks using 189 eqts
23:59:12:alg:Debug:l12: no new results -- break
23:59:12:alg:Debug:l12: got 0 eqts, 0 new inps
23:59:12:alg:Info:0 invs:
l12: 
23:59:12:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int a, int k)
23:59:12:alg:Info:1 locs: check upperbounds for 50 terms
23:59:12:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
23:59:28:alg:Info:1 locs: compute upperbounds for 1 terms
23:59:28:alg:Debug:l12: compute ub for '-k', start w/ min -3, maxV 10)
23:59:29:alg:Debug:got -k <= -1
23:59:29:alg:Info:1 invs:
l12: -k <= -1
23:59:29:alg:Info:test 1 invs on all 2172 traces
23:59:29:alg:Info:find uniq invs
23:59:29:alg:Info:1 invs:
l12: -k <= -1
23:59:29:alg:Info:got 1 invs, 151 inps (test 51): 
l12: -k <= -1
23:59:29:alg:Info:*done* prog programs/nla/geo3.c, invs 1, time 38.2773339748 s
23:59:29:alg:Debug:rm -rf /var/tmp/DIG2_crjN7K
23:59:30:alg:Debug:src: /var/tmp/DIG2_Erlc2b/geo3.c
23:59:30:alg:Info:analyze programs/nla/geo3.c
23:59:30:alg:Info:set seed to: 1.0 (test 83)
23:59:30:miscs:Info:autodeg 4
23:59:30:alg:Info:check reachability
23:59:30:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int a, int k)
23:59:31:alg:Debug:l12: infer using 189 exprs
23:59:31:miscs:Debug:solve 126 uks using 189 eqts
23:59:48:alg:Debug:l12: no new results -- break
23:59:48:alg:Debug:l12: got 0 eqts, 0 new inps
23:59:48:alg:Info:0 invs:
l12: 
23:59:48:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int a, int k)
23:59:48:alg:Info:1 locs: check upperbounds for 50 terms
23:59:48:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:0:3:alg:Info:1 locs: compute upperbounds for 1 terms
0:0:3:alg:Debug:l12: compute ub for '-k', start w/ min -2, maxV 10)
0:0:4:alg:Debug:got -k <= -1
0:0:4:alg:Info:1 invs:
l12: -k <= -1
0:0:4:alg:Info:test 1 invs on all 1598 traces
0:0:4:alg:Info:find uniq invs
0:0:4:alg:Info:1 invs:
l12: -k <= -1
0:0:4:alg:Info:got 1 invs, 149 inps (test 60): 
l12: -k <= -1
0:0:4:alg:Info:*done* prog programs/nla/geo3.c, invs 1, time 34.091809988 s
0:0:4:alg:Debug:rm -rf /var/tmp/DIG2_Erlc2b
0:0:5:alg:Debug:src: /var/tmp/DIG2_UEp80s/geo3.c
0:0:5:alg:Info:analyze programs/nla/geo3.c
0:0:5:alg:Info:set seed to: 2.0 (test 98)
0:0:5:miscs:Info:autodeg 4
0:0:5:alg:Info:check reachability
0:0:5:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int a, int k)
0:0:6:alg:Debug:l12: infer using 189 exprs
0:0:6:miscs:Debug:solve 126 uks using 189 eqts
0:0:26:alg:Debug:l12: no new results -- break
0:0:26:alg:Debug:l12: got 0 eqts, 0 new inps
0:0:26:alg:Info:0 invs:
l12: 
0:0:26:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int a, int k)
0:0:26:alg:Info:1 locs: check upperbounds for 50 terms
0:0:26:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:0:41:alg:Info:1 locs: compute upperbounds for 1 terms
0:0:41:alg:Debug:l12: compute ub for '-k', start w/ min -1, maxV 10)
0:0:42:alg:Debug:got -k <= -1
0:0:42:alg:Info:1 invs:
l12: -k <= -1
0:0:42:alg:Info:test 1 invs on all 1376 traces
0:0:42:alg:Info:find uniq invs
0:0:42:alg:Info:1 invs:
l12: -k <= -1
0:0:42:alg:Info:got 1 invs, 151 inps (test 45): 
l12: -k <= -1
0:0:42:alg:Info:*done* prog programs/nla/geo3.c, invs 1, time 37.1672439575 s
0:0:42:alg:Debug:rm -rf /var/tmp/DIG2_UEp80s
0:0:44:alg:Debug:src: /var/tmp/DIG2_jjqokm/geo3.c
0:0:44:alg:Info:analyze programs/nla/geo3.c
0:0:44:alg:Info:set seed to: 3.0 (test 43)
0:0:44:miscs:Info:autodeg 4
0:0:44:alg:Info:check reachability
0:0:44:alg:Info:gen eqts at 1 locs: l12 (int x, int y, int z, int a, int k)
0:0:45:alg:Debug:l12: infer using 189 exprs
0:0:45:miscs:Debug:solve 126 uks using 189 eqts
0:1:16:alg:Debug:l12: no new results -- break
0:1:16:alg:Debug:l12: got 0 eqts, 0 new inps
0:1:16:alg:Info:0 invs:
l12: 
0:1:16:alg:Info:gen ieqs at 1 locs: l12 (int x, int y, int z, int a, int k)
0:1:16:alg:Info:1 locs: check upperbounds for 50 terms
0:1:16:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:1:30:alg:Info:1 locs: compute upperbounds for 1 terms
0:1:31:alg:Debug:l12: compute ub for '-k', start w/ min -3, maxV 10)
0:1:31:alg:Debug:got -k <= -1
0:1:31:alg:Info:1 invs:
l12: -k <= -1
0:1:31:alg:Info:test 1 invs on all 1642 traces
0:1:31:alg:Info:find uniq invs
0:1:31:alg:Info:1 invs:
l12: -k <= -1
0:1:31:alg:Info:got 1 invs, 149 inps (test 84): 
l12: -k <= -1
0:1:31:alg:Info:*done* prog programs/nla/geo3.c, invs 1, time 47.8403930664 s
0:1:31:alg:Debug:rm -rf /var/tmp/DIG2_jjqokm
running ps1
0:1:33:alg:Debug:src: /var/tmp/DIG2_WdgmjR/ps1.c
0:1:33:alg:Info:analyze programs/nla/ps1.c
0:1:33:alg:Info:set seed to: 0.0 (test 11)
0:1:33:miscs:Info:autodeg 7
0:1:33:alg:Info:check reachability
0:1:33:alg:Info:gen eqts at 1 locs: l10 (int x, int y, int k)
0:1:33:alg:Debug:l10: infer using 180 exprs
0:1:33:miscs:Debug:solve 120 uks using 180 eqts
0:1:47:alg:Debug:l10: 1 candidates:
x - y == 0
0:1:47:alg:Debug:l10: check 1 unchecked (1 candidates)
0:1:50:alg:Debug:l10: no disproved candidates -- break
0:1:50:alg:Debug:l10: got 1 eqts, 0 new inps
0:1:50:alg:Debug:x - y == 0
0:1:50:alg:Info:1 invs:
l10: x - y == 0
0:1:50:alg:Info:gen ieqs at 1 locs: l10 (int x, int y, int k)
0:1:50:alg:Info:1 locs: check upperbounds for 18 terms
0:1:50:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:1:50:alg:Info:1 locs: compute upperbounds for 10 terms
0:1:50:miscs:Debug:workloads 'guesscheck' 5: [2, 2, 2, 2, 2]
0:1:50:alg:Debug:l10: compute ub for '-x', start w/ min 0, maxV 10)
0:1:51:alg:Debug:got -x <= 0
0:1:51:alg:Debug:l10: compute ub for '-k - y', start w/ min -6, maxV 10)
0:1:51:alg:Debug:got -k - y <= 0
0:1:50:alg:Debug:l10: compute ub for '-y', start w/ min 0, maxV 10)
0:1:51:alg:Debug:got -y <= 0
0:1:51:alg:Debug:l10: compute ub for '-x - y', start w/ min 0, maxV 10)
0:1:52:alg:Debug:got -x - y <= 0
0:1:50:alg:Debug:l10: compute ub for 'x - y', start w/ min 0, maxV 10)
0:1:51:alg:Debug:got x - y <= 0
0:1:51:alg:Debug:l10: compute ub for '-k - x', start w/ min -6, maxV 10)
0:1:52:alg:Debug:got -k - x <= 0
0:1:50:alg:Debug:l10: compute ub for '-k', start w/ min -6, maxV 10)
0:1:51:alg:Debug:got -k <= 0
0:1:51:alg:Debug:l10: compute ub for '-k + y', start w/ min 0, maxV 10)
0:1:52:alg:Debug:got -k + y <= 0
0:1:50:alg:Debug:l10: compute ub for '-k + x', start w/ min 0, maxV 10)
0:1:51:alg:Debug:got -k + x <= 0
0:1:51:alg:Debug:l10: compute ub for '-x + y', start w/ min 0, maxV 10)
0:1:52:alg:Debug:got -x + y <= 0
0:1:52:alg:Info:11 invs:
l10: x - y == 0, -k - x <= 0, -k <= 0, -x - y <= 0, -k + x <= 0, -k + y <= 0, -k - y <= 0, -y <= 0, x - y <= 0, -x <= 0, -x + y <= 0
0:1:52:alg:Info:test 11 invs on all 380 traces
0:1:52:alg:Info:find uniq invs
0:1:52:alg:Info:11 invs:
l10: x - y == 0, -k - x <= 0, -k <= 0, -x - y <= 0, -k + x <= 0, -k + y <= 0, -k - y <= 0, -y <= 0, x - y <= 0, -x <= 0, -x + y <= 0
0:1:52:alg:Info:removed 7 redundant invs
0:1:52:alg:Info:got 4 invs, 8 inps (test 51): 
l10: x - y <= 0, -y <= 0, -k + x <= 0, -x + y <= 0
0:1:52:alg:Info:*done* prog programs/nla/ps1.c, invs 4, time 19.5628900528 s
0:1:52:alg:Debug:rm -rf /var/tmp/DIG2_WdgmjR
0:1:53:alg:Debug:src: /var/tmp/DIG2_C9sjvE/ps1.c
0:1:53:alg:Info:analyze programs/nla/ps1.c
0:1:53:alg:Info:set seed to: 1.0 (test 83)
0:1:53:miscs:Info:autodeg 7
0:1:53:alg:Info:check reachability
0:1:53:alg:Info:gen eqts at 1 locs: l10 (int x, int y, int k)
0:1:54:alg:Debug:l10: infer using 180 exprs
0:1:54:miscs:Debug:solve 120 uks using 180 eqts
0:2:8:alg:Debug:l10: 1 candidates:
x - y == 0
0:2:8:alg:Debug:l10: check 1 unchecked (1 candidates)
0:2:11:alg:Debug:l10: no disproved candidates -- break
0:2:11:alg:Debug:l10: got 1 eqts, 0 new inps
0:2:11:alg:Debug:x - y == 0
0:2:11:alg:Info:1 invs:
l10: x - y == 0
0:2:11:alg:Info:gen ieqs at 1 locs: l10 (int x, int y, int k)
0:2:11:alg:Info:1 locs: check upperbounds for 18 terms
0:2:11:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:2:11:alg:Info:1 locs: compute upperbounds for 10 terms
0:2:11:miscs:Debug:workloads 'guesscheck' 5: [2, 2, 2, 2, 2]
0:2:11:alg:Debug:l10: compute ub for '-k - y', start w/ min -4, maxV 10)
0:2:12:alg:Debug:got -k - y <= 0
0:2:12:alg:Debug:l10: compute ub for '-k', start w/ min -4, maxV 10)
0:2:12:alg:Debug:got -k <= 0
0:2:11:alg:Debug:l10: compute ub for '-y', start w/ min 0, maxV 10)
0:2:12:alg:Debug:got -y <= 0
0:2:12:alg:Debug:l10: compute ub for '-k - x', start w/ min -4, maxV 10)
0:2:12:alg:Debug:got -k - x <= 0
0:2:11:alg:Debug:l10: compute ub for '-x + y', start w/ min 0, maxV 10)
0:2:12:alg:Debug:got -x + y <= 0
0:2:12:alg:Debug:l10: compute ub for 'x - y', start w/ min 0, maxV 10)
0:2:12:alg:Debug:got x - y <= 0
0:2:11:alg:Debug:l10: compute ub for '-k + y', start w/ min 0, maxV 10)
0:2:12:alg:Debug:got -k + y <= 0
0:2:12:alg:Debug:l10: compute ub for '-x - y', start w/ min 0, maxV 10)
0:2:13:alg:Debug:got -x - y <= 0
0:2:11:alg:Debug:l10: compute ub for '-k + x', start w/ min 0, maxV 10)
0:2:12:alg:Debug:got -k + x <= 0
0:2:12:alg:Debug:l10: compute ub for '-x', start w/ min 0, maxV 10)
0:2:13:alg:Debug:got -x <= 0
0:2:13:alg:Info:11 invs:
l10: x - y == 0, -x - y <= 0, -k + x <= 0, -k - y <= 0, -x + y <= 0, -k - x <= 0, -k <= 0, -x <= 0, -k + y <= 0, -y <= 0, x - y <= 0
0:2:13:alg:Info:test 11 invs on all 362 traces
0:2:13:alg:Info:find uniq invs
0:2:13:alg:Info:11 invs:
l10: x - y == 0, -x - y <= 0, -k + x <= 0, -k - y <= 0, -x + y <= 0, -k - x <= 0, -k <= 0, -x <= 0, -k + y <= 0, -y <= 0, x - y <= 0
0:2:13:alg:Info:removed 8 redundant invs
0:2:13:alg:Info:got 3 invs, 8 inps (test 60): 
l10: -y <= 0, -k + y <= 0, x - y == 0
0:2:13:alg:Info:*done* prog programs/nla/ps1.c, invs 3, time 19.9489061832 s
0:2:13:alg:Debug:rm -rf /var/tmp/DIG2_C9sjvE
0:2:14:alg:Debug:src: /var/tmp/DIG2_u9U4AW/ps1.c
0:2:15:alg:Info:analyze programs/nla/ps1.c
0:2:15:alg:Info:set seed to: 2.0 (test 98)
0:2:15:miscs:Info:autodeg 7
0:2:15:alg:Info:check reachability
0:2:15:alg:Info:gen eqts at 1 locs: l10 (int x, int y, int k)
0:2:15:alg:Debug:l10: infer using 180 exprs
0:2:15:miscs:Debug:solve 120 uks using 180 eqts
0:2:29:alg:Debug:l10: 1 candidates:
x - y == 0
0:2:29:alg:Debug:l10: check 1 unchecked (1 candidates)
0:2:32:alg:Debug:l10: no disproved candidates -- break
0:2:32:alg:Debug:l10: got 1 eqts, 0 new inps
0:2:32:alg:Debug:x - y == 0
0:2:32:alg:Info:1 invs:
l10: x - y == 0
0:2:32:alg:Info:gen ieqs at 1 locs: l10 (int x, int y, int k)
0:2:32:alg:Info:1 locs: check upperbounds for 18 terms
0:2:32:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:2:32:alg:Info:1 locs: compute upperbounds for 10 terms
0:2:32:miscs:Debug:workloads 'guesscheck' 5: [2, 2, 2, 2, 2]
0:2:33:alg:Debug:l10: compute ub for '-x + y', start w/ min 0, maxV 10)
0:2:33:alg:Debug:got -x + y <= 0
0:2:33:alg:Debug:l10: compute ub for '-k - y', start w/ min -6, maxV 10)
0:2:34:alg:Debug:got -k - y <= 0
0:2:33:alg:Debug:l10: compute ub for '-k - x', start w/ min -6, maxV 10)
0:2:33:alg:Debug:got -k - x <= 0
0:2:33:alg:Debug:l10: compute ub for '-k', start w/ min -6, maxV 10)
0:2:34:alg:Debug:got -k <= 0
0:2:33:alg:Debug:l10: compute ub for 'x - y', start w/ min 0, maxV 10)
0:2:33:alg:Debug:got x - y <= 0
0:2:33:alg:Debug:l10: compute ub for '-y', start w/ min 0, maxV 10)
0:2:34:alg:Debug:got -y <= 0
0:2:32:alg:Debug:l10: compute ub for '-k + x', start w/ min 0, maxV 10)
0:2:33:alg:Debug:got -k + x <= 0
0:2:33:alg:Debug:l10: compute ub for '-x', start w/ min 0, maxV 10)
0:2:34:alg:Debug:got -x <= 0
0:2:33:alg:Debug:l10: compute ub for '-k + y', start w/ min 0, maxV 10)
0:2:33:alg:Debug:got -k + y <= 0
0:2:33:alg:Debug:l10: compute ub for '-x - y', start w/ min 0, maxV 10)
0:2:34:alg:Debug:got -x - y <= 0
0:2:34:alg:Info:11 invs:
l10: x - y == 0, -k + y <= 0, -x - y <= 0, -k - y <= 0, -y <= 0, -x <= 0, -k <= 0, -x + y <= 0, -k - x <= 0, x - y <= 0, -k + x <= 0
0:2:34:alg:Info:test 11 invs on all 389 traces
0:2:34:alg:Info:find uniq invs
0:2:34:alg:Info:11 invs:
l10: x - y == 0, -k + y <= 0, -x - y <= 0, -k - y <= 0, -y <= 0, -x <= 0, -k <= 0, -x + y <= 0, -k - x <= 0, x - y <= 0, -k + x <= 0
0:2:34:alg:Info:removed 8 redundant invs
0:2:34:alg:Info:got 3 invs, 8 inps (test 45): 
l10: -k + y <= 0, -y <= 0, x - y == 0
0:2:34:alg:Info:*done* prog programs/nla/ps1.c, invs 3, time 19.851211071 s
0:2:34:alg:Debug:rm -rf /var/tmp/DIG2_u9U4AW
running ps2
0:2:35:alg:Debug:src: /var/tmp/DIG2_HJsuMR/ps2.c
0:2:36:alg:Info:analyze programs/nla/ps2.c
0:2:36:alg:Info:set seed to: 0.0 (test 11)
0:2:36:miscs:Info:autodeg 7
0:2:36:alg:Info:check reachability
0:2:36:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:2:36:alg:Debug:l14: need more traces (26 eqts, need >= 180)
0:2:36:alg:Debug:obtain 1 new traces
0:2:36:alg:Debug:l14: need more traces (27 eqts, need >= 180)
0:2:36:alg:Debug:obtain 16 new traces
0:2:36:alg:Debug:l14: need more traces (43 eqts, need >= 180)
0:2:36:alg:Debug:obtain 30 new traces
0:2:36:alg:Debug:l14: need more traces (73 eqts, need >= 180)
0:2:36:alg:Debug:obtain 22 new traces
0:2:36:alg:Debug:l14: need more traces (95 eqts, need >= 180)
0:2:36:alg:Debug:obtain 20 new traces
0:2:36:alg:Debug:l14: need more traces (115 eqts, need >= 180)
0:2:36:alg:Debug:obtain 23 new traces
0:2:36:alg:Debug:l14: need more traces (138 eqts, need >= 180)
0:2:36:alg:Debug:obtain 24 new traces
0:2:37:alg:Debug:l14: need more traces (162 eqts, need >= 180)
0:2:37:alg:Debug:obtain 31 new traces
0:2:37:alg:Debug:l14: infer using 180 exprs
0:2:37:miscs:Debug:solve 120 uks using 180 eqts
0:2:51:alg:Debug:l14: 1 candidates:
y^2 - 2*x + y == 0
0:2:51:alg:Debug:l14: check 1 unchecked (1 candidates)
0:2:51:alg:Debug:l14: no disproved candidates -- break
0:2:51:alg:Debug:l14: got 1 eqts, 0 new inps
0:2:51:alg:Debug:(y*y) - 2*x + y == 0
0:2:51:alg:Info:1 invs:
l14: (y*y) - 2*x + y == 0
0:2:51:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:2:51:alg:Info:1 locs: check upperbounds for 18 terms
0:2:51:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:2:51:alg:Info:1 locs: compute upperbounds for 8 terms
0:2:51:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:2:51:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:2:52:alg:Debug:got -y <= 0
0:2:52:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:2:53:alg:Debug:got -x + y <= 0
0:2:51:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:2:52:alg:Debug:got -x - y <= 0
0:2:52:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:2:53:alg:Debug:got -k <= 0
0:2:51:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:2:52:alg:Debug:got -x <= 0
0:2:52:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:2:53:alg:Debug:got -k + y <= 0
0:2:51:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:2:52:alg:Debug:got -k - x <= 0
0:2:52:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:2:53:alg:Debug:got -k - y <= 0
0:2:53:alg:Info:9 invs:
l14: -k + y <= 0, -k - y <= 0, -y <= 0, -k <= 0, -x - y <= 0, -x <= 0, -k - x <= 0, -x + y <= 0, (y*y) - 2*x + y == 0
0:2:53:alg:Info:test 9 invs on all 285 traces
0:2:53:alg:Info:find uniq invs
0:2:53:alg:Info:9 invs:
l14: -k + y <= 0, -k - y <= 0, -y <= 0, -k <= 0, -x - y <= 0, -x <= 0, -k - x <= 0, -x + y <= 0, (y*y) - 2*x + y == 0
0:2:54:alg:Info:removed 5 redundant invs
0:2:54:alg:Info:got 4 invs, 19 inps (test 51): 
l14: -x + y <= 0, (y*y) - 2*x + y == 0, -k + y <= 0, -y <= 0
0:2:54:alg:Info:*done* prog programs/nla/ps2.c, invs 4, time 18.0421659946 s
0:2:54:alg:Debug:rm -rf /var/tmp/DIG2_HJsuMR
0:2:55:alg:Debug:src: /var/tmp/DIG2_KxrnY9/ps2.c
0:2:55:alg:Info:analyze programs/nla/ps2.c
0:2:55:alg:Info:set seed to: 1.0 (test 83)
0:2:55:miscs:Info:autodeg 7
0:2:55:alg:Info:check reachability
0:2:55:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:2:55:alg:Debug:l14: need more traces (5 eqts, need >= 180)
0:2:55:alg:Debug:obtain 1 new traces
0:2:55:alg:Debug:l14: need more traces (6 eqts, need >= 180)
0:2:55:alg:Debug:obtain 16 new traces
0:2:55:alg:Debug:l14: need more traces (22 eqts, need >= 180)
0:2:55:alg:Debug:obtain 30 new traces
0:2:55:alg:Debug:l14: need more traces (52 eqts, need >= 180)
0:2:55:alg:Debug:obtain 22 new traces
0:2:55:alg:Debug:l14: need more traces (74 eqts, need >= 180)
0:2:55:alg:Debug:obtain 20 new traces
0:2:55:alg:Debug:l14: need more traces (94 eqts, need >= 180)
0:2:55:alg:Debug:obtain 23 new traces
0:2:56:alg:Debug:l14: need more traces (117 eqts, need >= 180)
0:2:56:alg:Debug:obtain 24 new traces
0:2:56:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:2:56:alg:Debug:obtain 31 new traces
0:2:56:alg:Debug:l14: need more traces (172 eqts, need >= 180)
0:2:56:alg:Debug:obtain 28 new traces
0:2:56:alg:Debug:l14: infer using 180 exprs
0:2:56:miscs:Debug:solve 120 uks using 180 eqts
0:3:10:alg:Debug:l14: 1 candidates:
y^2 - 2*x + y == 0
0:3:10:alg:Debug:l14: check 1 unchecked (1 candidates)
0:3:11:alg:Debug:l14: no disproved candidates -- break
0:3:11:alg:Debug:l14: got 1 eqts, 0 new inps
0:3:11:alg:Debug:(y*y) - 2*x + y == 0
0:3:11:alg:Info:1 invs:
l14: (y*y) - 2*x + y == 0
0:3:11:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:3:11:alg:Info:1 locs: check upperbounds for 18 terms
0:3:11:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:3:11:alg:Info:1 locs: compute upperbounds for 8 terms
0:3:11:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:3:11:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:3:11:alg:Debug:got -x <= 0
0:3:12:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:3:12:alg:Debug:got -k <= 0
0:3:11:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:3:11:alg:Debug:got -y <= 0
0:3:12:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:3:12:alg:Debug:got -x + y <= 0
0:3:11:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:3:12:alg:Debug:got -k - y <= 0
0:3:12:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:3:12:alg:Debug:got -x - y <= 0
0:3:11:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:3:12:alg:Debug:got -k + y <= 0
0:3:12:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:3:13:alg:Debug:got -k - x <= 0
0:3:13:alg:Info:9 invs:
l14: -k - y <= 0, -k + y <= 0, -k - x <= 0, -x <= 0, -y <= 0, -k <= 0, -x + y <= 0, -x - y <= 0, (y*y) - 2*x + y == 0
0:3:13:alg:Info:test 9 invs on all 287 traces
0:3:13:alg:Info:find uniq invs
0:3:13:alg:Info:9 invs:
l14: -k - y <= 0, -k + y <= 0, -k - x <= 0, -x <= 0, -y <= 0, -k <= 0, -x + y <= 0, -x - y <= 0, (y*y) - 2*x + y == 0
0:3:13:alg:Info:removed 5 redundant invs
0:3:13:alg:Info:got 4 invs, 20 inps (test 60): 
l14: -x + y <= 0, (y*y) - 2*x + y == 0, -k + y <= 0, -y <= 0
0:3:13:alg:Info:*done* prog programs/nla/ps2.c, invs 4, time 18.44851017 s
0:3:13:alg:Debug:rm -rf /var/tmp/DIG2_KxrnY9
0:3:14:alg:Debug:src: /var/tmp/DIG2_MvPGk3/ps2.c
0:3:14:alg:Info:analyze programs/nla/ps2.c
0:3:14:alg:Info:set seed to: 2.0 (test 98)
0:3:14:miscs:Info:autodeg 7
0:3:14:alg:Info:check reachability
0:3:14:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:3:14:alg:Debug:l14: need more traces (29 eqts, need >= 180)
0:3:14:alg:Debug:obtain 1 new traces
0:3:14:alg:Debug:l14: need more traces (30 eqts, need >= 180)
0:3:14:alg:Debug:obtain 16 new traces
0:3:15:alg:Debug:l14: need more traces (46 eqts, need >= 180)
0:3:15:alg:Debug:obtain 30 new traces
0:3:15:alg:Debug:l14: need more traces (76 eqts, need >= 180)
0:3:15:alg:Debug:obtain 22 new traces
0:3:15:alg:Debug:l14: need more traces (98 eqts, need >= 180)
0:3:15:alg:Debug:obtain 20 new traces
0:3:15:alg:Debug:l14: need more traces (118 eqts, need >= 180)
0:3:15:alg:Debug:obtain 23 new traces
0:3:15:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:3:15:alg:Debug:obtain 24 new traces
0:3:15:alg:Debug:l14: need more traces (165 eqts, need >= 180)
0:3:15:alg:Debug:obtain 31 new traces
0:3:15:alg:Debug:l14: infer using 180 exprs
0:3:15:miscs:Debug:solve 120 uks using 180 eqts
0:3:30:alg:Debug:l14: 1 candidates:
y^2 - 2*x + y == 0
0:3:30:alg:Debug:l14: check 1 unchecked (1 candidates)
0:3:30:alg:Debug:l14: no disproved candidates -- break
0:3:30:alg:Debug:l14: got 1 eqts, 0 new inps
0:3:30:alg:Debug:(y*y) - 2*x + y == 0
0:3:30:alg:Info:1 invs:
l14: (y*y) - 2*x + y == 0
0:3:30:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:3:30:alg:Info:1 locs: check upperbounds for 18 terms
0:3:30:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:3:30:alg:Info:1 locs: compute upperbounds for 8 terms
0:3:30:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:3:30:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:3:31:alg:Debug:got -y <= 0
0:3:31:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:3:31:alg:Debug:got -x + y <= 0
0:3:30:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:3:31:alg:Debug:got -k - y <= 0
0:3:31:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:3:32:alg:Debug:got -k <= 0
0:3:30:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:3:31:alg:Debug:got -k - x <= 0
0:3:31:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:3:32:alg:Debug:got -x - y <= 0
0:3:30:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:3:31:alg:Debug:got -k + y <= 0
0:3:31:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:3:32:alg:Debug:got -x <= 0
0:3:32:alg:Info:9 invs:
l14: -k + y <= 0, -y <= 0, -k <= 0, -x - y <= 0, -x <= 0, -k - y <= 0, -k - x <= 0, -x + y <= 0, (y*y) - 2*x + y == 0
0:3:32:alg:Info:test 9 invs on all 288 traces
0:3:32:alg:Info:find uniq invs
0:3:32:alg:Info:9 invs:
l14: -k + y <= 0, -y <= 0, -k <= 0, -x - y <= 0, -x <= 0, -k - y <= 0, -k - x <= 0, -x + y <= 0, (y*y) - 2*x + y == 0
0:3:32:alg:Info:removed 5 redundant invs
0:3:32:alg:Info:got 4 invs, 19 inps (test 45): 
l14: -k + y <= 0, -x + y <= 0, -y <= 0, (y*y) - 2*x + y == 0
0:3:32:alg:Info:*done* prog programs/nla/ps2.c, invs 4, time 17.7961359024 s
0:3:32:alg:Debug:rm -rf /var/tmp/DIG2_MvPGk3
running ps3
0:3:33:alg:Debug:src: /var/tmp/DIG2_aUgFzK/ps3.c
0:3:33:alg:Info:analyze programs/nla/ps3.c
0:3:33:alg:Info:set seed to: 0.0 (test 11)
0:3:33:miscs:Info:autodeg 7
0:3:33:alg:Info:check reachability
0:3:33:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:3:33:alg:Debug:l14: need more traces (26 eqts, need >= 180)
0:3:33:alg:Debug:obtain 1 new traces
0:3:33:alg:Debug:l14: need more traces (27 eqts, need >= 180)
0:3:33:alg:Debug:obtain 16 new traces
0:3:33:alg:Debug:l14: need more traces (43 eqts, need >= 180)
0:3:33:alg:Debug:obtain 30 new traces
0:3:34:alg:Debug:l14: need more traces (73 eqts, need >= 180)
0:3:34:alg:Debug:obtain 22 new traces
0:3:34:alg:Debug:l14: need more traces (95 eqts, need >= 180)
0:3:34:alg:Debug:obtain 20 new traces
0:3:34:alg:Debug:l14: need more traces (115 eqts, need >= 180)
0:3:34:alg:Debug:obtain 23 new traces
0:3:34:alg:Debug:l14: need more traces (138 eqts, need >= 180)
0:3:34:alg:Debug:obtain 24 new traces
0:3:34:alg:Debug:l14: need more traces (162 eqts, need >= 180)
0:3:34:alg:Debug:obtain 31 new traces
0:3:34:alg:Debug:l14: infer using 180 exprs
0:3:34:miscs:Debug:solve 120 uks using 180 eqts
0:3:49:alg:Debug:l14: 1 candidates:
2*y^3 + 3*y^2 - 6*x + y == 0
0:3:49:alg:Debug:l14: check 1 unchecked (1 candidates)
0:3:49:alg:Debug:l14: no disproved candidates -- break
0:3:49:alg:Debug:l14: got 1 eqts, 0 new inps
0:3:49:alg:Debug:2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:3:49:alg:Info:1 invs:
l14: 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:3:49:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:3:49:alg:Info:1 locs: check upperbounds for 18 terms
0:3:49:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:3:50:alg:Info:1 locs: compute upperbounds for 8 terms
0:3:50:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:3:50:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:3:50:alg:Debug:got -y <= 0
0:3:50:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -x - y <= 0
0:3:50:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -k + y <= 0
0:3:51:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -x <= 0
0:3:50:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:3:50:alg:Debug:got -x + y <= 0
0:3:50:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -k - y <= 0
0:3:50:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -k - x <= 0
0:3:51:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:3:51:alg:Debug:got -k <= 0
0:3:51:alg:Info:9 invs:
l14: -y <= 0, -k + y <= 0, -x + y <= 0, -k - y <= 0, -x <= 0, -k <= 0, -x - y <= 0, -k - x <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:3:51:alg:Info:test 9 invs on all 274 traces
0:3:52:alg:Info:find uniq invs
0:3:52:alg:Info:9 invs:
l14: -y <= 0, -k + y <= 0, -x + y <= 0, -k - y <= 0, -x <= 0, -k <= 0, -x - y <= 0, -k - x <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:3:52:alg:Info:removed 5 redundant invs
0:3:52:alg:Info:got 4 invs, 19 inps (test 51): 
l14: 2*(y*y*y) + 3*(y*y) - 6*x + y == 0, -k + y <= 0, -x + y <= 0, -y <= 0
0:3:52:alg:Info:*done* prog programs/nla/ps3.c, invs 4, time 18.6700489521 s
0:3:52:alg:Debug:rm -rf /var/tmp/DIG2_aUgFzK
0:3:53:alg:Debug:src: /var/tmp/DIG2_1Ix26I/ps3.c
0:3:53:alg:Info:analyze programs/nla/ps3.c
0:3:53:alg:Info:set seed to: 1.0 (test 83)
0:3:53:miscs:Info:autodeg 7
0:3:53:alg:Info:check reachability
0:3:53:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:3:53:alg:Debug:l14: need more traces (5 eqts, need >= 180)
0:3:53:alg:Debug:obtain 1 new traces
0:3:53:alg:Debug:l14: need more traces (6 eqts, need >= 180)
0:3:53:alg:Debug:obtain 16 new traces
0:3:53:alg:Debug:l14: need more traces (22 eqts, need >= 180)
0:3:53:alg:Debug:obtain 30 new traces
0:3:53:alg:Debug:l14: need more traces (52 eqts, need >= 180)
0:3:53:alg:Debug:obtain 22 new traces
0:3:53:alg:Debug:l14: need more traces (74 eqts, need >= 180)
0:3:54:alg:Debug:obtain 20 new traces
0:3:54:alg:Debug:l14: need more traces (94 eqts, need >= 180)
0:3:54:alg:Debug:obtain 23 new traces
0:3:54:alg:Debug:l14: need more traces (117 eqts, need >= 180)
0:3:54:alg:Debug:obtain 24 new traces
0:3:54:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:3:54:alg:Debug:obtain 31 new traces
0:3:54:alg:Debug:l14: need more traces (172 eqts, need >= 180)
0:3:54:alg:Debug:obtain 28 new traces
0:3:54:alg:Debug:l14: infer using 180 exprs
0:3:54:miscs:Debug:solve 120 uks using 180 eqts
0:4:10:alg:Debug:l14: 1 candidates:
2*y^3 + 3*y^2 - 6*x + y == 0
0:4:10:alg:Debug:l14: check 1 unchecked (1 candidates)
0:4:10:alg:Debug:l14: no disproved candidates -- break
0:4:10:alg:Debug:l14: got 1 eqts, 0 new inps
0:4:10:alg:Debug:2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:10:alg:Info:1 invs:
l14: 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:10:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:4:10:alg:Info:1 locs: check upperbounds for 18 terms
0:4:10:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:4:10:alg:Info:1 locs: compute upperbounds for 8 terms
0:4:10:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:4:10:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:4:11:alg:Debug:got -x - y <= 0
0:4:11:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:4:12:alg:Debug:got -y <= 0
0:4:10:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:4:11:alg:Debug:got -k + y <= 0
0:4:11:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:4:12:alg:Debug:got -x <= 0
0:4:10:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:4:11:alg:Debug:got -x + y <= 0
0:4:11:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:4:12:alg:Debug:got -k - y <= 0
0:4:10:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:4:11:alg:Debug:got -k - x <= 0
0:4:11:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:4:12:alg:Debug:got -k <= 0
0:4:12:alg:Info:9 invs:
l14: -x - y <= 0, -y <= 0, -x <= 0, -k - y <= 0, -k <= 0, -k + y <= 0, -k - x <= 0, -x + y <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:12:alg:Info:test 9 invs on all 276 traces
0:4:12:alg:Info:find uniq invs
0:4:12:alg:Info:9 invs:
l14: -x - y <= 0, -y <= 0, -x <= 0, -k - y <= 0, -k <= 0, -k + y <= 0, -k - x <= 0, -x + y <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:12:alg:Info:removed 5 redundant invs
0:4:12:alg:Info:got 4 invs, 20 inps (test 60): 
l14: 2*(y*y*y) + 3*(y*y) - 6*x + y == 0, -k + y <= 0, -x + y <= 0, -y <= 0
0:4:12:alg:Info:*done* prog programs/nla/ps3.c, invs 4, time 19.2892010212 s
0:4:12:alg:Debug:rm -rf /var/tmp/DIG2_1Ix26I
0:4:13:alg:Debug:src: /var/tmp/DIG2_yFus4G/ps3.c
0:4:13:alg:Info:analyze programs/nla/ps3.c
0:4:13:alg:Info:set seed to: 2.0 (test 98)
0:4:13:miscs:Info:autodeg 7
0:4:13:alg:Info:check reachability
0:4:13:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:4:13:alg:Debug:l14: need more traces (29 eqts, need >= 180)
0:4:14:alg:Debug:obtain 1 new traces
0:4:14:alg:Debug:l14: need more traces (30 eqts, need >= 180)
0:4:14:alg:Debug:obtain 16 new traces
0:4:14:alg:Debug:l14: need more traces (46 eqts, need >= 180)
0:4:14:alg:Debug:obtain 30 new traces
0:4:14:alg:Debug:l14: need more traces (76 eqts, need >= 180)
0:4:14:alg:Debug:obtain 22 new traces
0:4:14:alg:Debug:l14: need more traces (98 eqts, need >= 180)
0:4:14:alg:Debug:obtain 20 new traces
0:4:14:alg:Debug:l14: need more traces (118 eqts, need >= 180)
0:4:14:alg:Debug:obtain 23 new traces
0:4:14:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:4:14:alg:Debug:obtain 24 new traces
0:4:14:alg:Debug:l14: need more traces (165 eqts, need >= 180)
0:4:15:alg:Debug:obtain 31 new traces
0:4:15:alg:Debug:l14: infer using 180 exprs
0:4:15:miscs:Debug:solve 120 uks using 180 eqts
0:4:29:alg:Debug:l14: 1 candidates:
2*y^3 + 3*y^2 - 6*x + y == 0
0:4:29:alg:Debug:l14: check 1 unchecked (1 candidates)
0:4:30:alg:Debug:l14: no disproved candidates -- break
0:4:30:alg:Debug:l14: got 1 eqts, 0 new inps
0:4:30:alg:Debug:2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:30:alg:Info:1 invs:
l14: 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:30:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:4:30:alg:Info:1 locs: check upperbounds for 18 terms
0:4:30:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:4:30:alg:Info:1 locs: compute upperbounds for 8 terms
0:4:30:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:4:30:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:4:30:alg:Debug:got -y <= 0
0:4:31:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:4:31:alg:Debug:got -x + y <= 0
0:4:30:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:4:31:alg:Debug:got -k <= 0
0:4:31:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:4:31:alg:Debug:got -x - y <= 0
0:4:30:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:4:31:alg:Debug:got -x <= 0
0:4:31:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:4:32:alg:Debug:got -k + y <= 0
0:4:30:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:4:31:alg:Debug:got -k - x <= 0
0:4:31:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:4:32:alg:Debug:got -k - y <= 0
0:4:32:alg:Info:9 invs:
l14: -y <= 0, -k <= 0, -x <= 0, -k + y <= 0, -x - y <= 0, -k - y <= 0, -k - x <= 0, -x + y <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:32:alg:Info:test 9 invs on all 277 traces
0:4:32:alg:Info:find uniq invs
0:4:32:alg:Info:9 invs:
l14: -y <= 0, -k <= 0, -x <= 0, -k + y <= 0, -x - y <= 0, -k - y <= 0, -k - x <= 0, -x + y <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0
0:4:32:alg:Info:removed 5 redundant invs
0:4:32:alg:Info:got 4 invs, 19 inps (test 45): 
l14: -x + y <= 0, 2*(y*y*y) + 3*(y*y) - 6*x + y == 0, -k + y <= 0, -y <= 0
0:4:32:alg:Info:*done* prog programs/nla/ps3.c, invs 4, time 18.6785449982 s
0:4:32:alg:Debug:rm -rf /var/tmp/DIG2_yFus4G
running ps4
0:4:33:alg:Debug:src: /var/tmp/DIG2_MMKVdj/ps4.c
0:4:33:alg:Info:analyze programs/nla/ps4.c
0:4:33:alg:Info:set seed to: 0.0 (test 11)
0:4:33:miscs:Info:autodeg 7
0:4:33:alg:Info:check reachability
0:4:33:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:4:33:alg:Debug:l14: need more traces (26 eqts, need >= 180)
0:4:33:alg:Debug:obtain 1 new traces
0:4:33:alg:Debug:l14: need more traces (27 eqts, need >= 180)
0:4:33:alg:Debug:obtain 16 new traces
0:4:33:alg:Debug:l14: need more traces (43 eqts, need >= 180)
0:4:34:alg:Debug:obtain 30 new traces
0:4:34:alg:Debug:l14: need more traces (73 eqts, need >= 180)
0:4:34:alg:Debug:obtain 22 new traces
0:4:34:alg:Debug:l14: need more traces (95 eqts, need >= 180)
0:4:34:alg:Debug:obtain 20 new traces
0:4:34:alg:Debug:l14: need more traces (115 eqts, need >= 180)
0:4:34:alg:Debug:obtain 23 new traces
0:4:34:alg:Debug:l14: need more traces (138 eqts, need >= 180)
0:4:34:alg:Debug:obtain 24 new traces
0:4:34:alg:Debug:l14: need more traces (162 eqts, need >= 180)
0:4:34:alg:Debug:obtain 31 new traces
0:4:34:alg:Debug:l14: infer using 180 exprs
0:4:34:miscs:Debug:solve 120 uks using 180 eqts
0:4:50:alg:Debug:l14: 1 candidates:
y^4 + 2*y^3 + y^2 - 4*x == 0
0:4:50:alg:Debug:l14: check 1 unchecked (1 candidates)
0:4:50:alg:Debug:l14: no disproved candidates -- break
0:4:50:alg:Debug:l14: got 1 eqts, 0 new inps
0:4:50:alg:Debug:(y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:4:50:alg:Info:1 invs:
l14: (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:4:50:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:4:50:alg:Info:1 locs: check upperbounds for 18 terms
0:4:50:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:4:51:alg:Info:1 locs: compute upperbounds for 8 terms
0:4:51:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:4:51:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:4:51:alg:Debug:got -k <= 0
0:4:51:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:4:52:alg:Debug:got -x + y <= 0
0:4:51:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:4:51:alg:Debug:got -y <= 0
0:4:51:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:4:52:alg:Debug:got -k + y <= 0
0:4:51:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:4:51:alg:Debug:got -k - y <= 0
0:4:51:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:4:52:alg:Debug:got -x <= 0
0:4:51:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:4:51:alg:Debug:got -k - x <= 0
0:4:51:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:4:52:alg:Debug:got -x - y <= 0
0:4:52:alg:Info:9 invs:
l14: -y <= 0, -k - y <= 0, -x <= 0, -x - y <= 0, -k <= 0, -k - x <= 0, -k + y <= 0, -x + y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:4:52:alg:Info:test 9 invs on all 244 traces
0:4:52:alg:Info:find uniq invs
0:4:52:alg:Info:9 invs:
l14: -y <= 0, -k - y <= 0, -x <= 0, -x - y <= 0, -k <= 0, -k - x <= 0, -k + y <= 0, -x + y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:4:52:alg:Info:removed 5 redundant invs
0:4:52:alg:Info:got 4 invs, 16 inps (test 51): 
l14: -k + y <= 0, -y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0, -x + y <= 0
0:4:52:alg:Info:*done* prog programs/nla/ps4.c, invs 4, time 19.2717490196 s
0:4:52:alg:Debug:rm -rf /var/tmp/DIG2_MMKVdj
0:4:54:alg:Debug:src: /var/tmp/DIG2_pnzKGd/ps4.c
0:4:54:alg:Info:analyze programs/nla/ps4.c
0:4:54:alg:Info:set seed to: 1.0 (test 83)
0:4:54:miscs:Info:autodeg 7
0:4:54:alg:Info:check reachability
0:4:54:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:4:54:alg:Debug:l14: need more traces (5 eqts, need >= 180)
0:4:54:alg:Debug:obtain 1 new traces
0:4:54:alg:Debug:l14: need more traces (6 eqts, need >= 180)
0:4:54:alg:Debug:obtain 16 new traces
0:4:54:alg:Debug:l14: need more traces (22 eqts, need >= 180)
0:4:54:alg:Debug:obtain 30 new traces
0:4:54:alg:Debug:l14: need more traces (52 eqts, need >= 180)
0:4:54:alg:Debug:obtain 22 new traces
0:4:54:alg:Debug:l14: need more traces (74 eqts, need >= 180)
0:4:54:alg:Debug:obtain 20 new traces
0:4:54:alg:Debug:l14: need more traces (94 eqts, need >= 180)
0:4:54:alg:Debug:obtain 23 new traces
0:4:55:alg:Debug:l14: need more traces (117 eqts, need >= 180)
0:4:55:alg:Debug:obtain 24 new traces
0:4:55:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:4:55:alg:Debug:obtain 31 new traces
0:4:55:alg:Debug:l14: need more traces (172 eqts, need >= 180)
0:4:55:alg:Debug:obtain 28 new traces
0:4:55:alg:Debug:l14: infer using 180 exprs
0:4:55:miscs:Debug:solve 120 uks using 180 eqts
0:5:11:alg:Debug:l14: 1 candidates:
y^4 + 2*y^3 + y^2 - 4*x == 0
0:5:11:alg:Debug:l14: check 1 unchecked (1 candidates)
0:5:11:alg:Debug:l14: no disproved candidates -- break
0:5:11:alg:Debug:l14: got 1 eqts, 0 new inps
0:5:11:alg:Debug:(y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:11:alg:Info:1 invs:
l14: (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:11:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:5:11:alg:Info:1 locs: check upperbounds for 18 terms
0:5:11:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:5:12:alg:Info:1 locs: compute upperbounds for 8 terms
0:5:12:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:5:12:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:5:12:alg:Debug:got -k <= 0
0:5:12:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:5:13:alg:Debug:got -x <= 0
0:5:12:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:5:12:alg:Debug:got -x + y <= 0
0:5:12:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:5:13:alg:Debug:got -y <= 0
0:5:12:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:5:12:alg:Debug:got -k + y <= 0
0:5:13:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:5:13:alg:Debug:got -x - y <= 0
0:5:12:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:5:12:alg:Debug:got -k - y <= 0
0:5:12:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:5:13:alg:Debug:got -k - x <= 0
0:5:13:alg:Info:9 invs:
l14: -x <= 0, -y <= 0, -k + y <= 0, -x - y <= 0, -k - x <= 0, -k <= 0, -k - y <= 0, -x + y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:13:alg:Info:test 9 invs on all 251 traces
0:5:13:alg:Info:find uniq invs
0:5:13:alg:Info:9 invs:
l14: -x <= 0, -y <= 0, -k + y <= 0, -x - y <= 0, -k - x <= 0, -k <= 0, -k - y <= 0, -x + y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:14:alg:Info:removed 5 redundant invs
0:5:14:alg:Info:got 4 invs, 17 inps (test 60): 
l14: (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0, -k + y <= 0, -x + y <= 0, -y <= 0
0:5:14:alg:Info:*done* prog programs/nla/ps4.c, invs 4, time 20.0999979973 s
0:5:14:alg:Debug:rm -rf /var/tmp/DIG2_pnzKGd
0:5:15:alg:Debug:src: /var/tmp/DIG2_qbTUFm/ps4.c
0:5:15:alg:Info:analyze programs/nla/ps4.c
0:5:15:alg:Info:set seed to: 2.0 (test 98)
0:5:15:miscs:Info:autodeg 7
0:5:15:alg:Info:check reachability
0:5:15:alg:Info:gen eqts at 1 locs: l14 (int x, int y, int k)
0:5:15:alg:Debug:l14: need more traces (29 eqts, need >= 180)
0:5:15:alg:Debug:obtain 1 new traces
0:5:15:alg:Debug:l14: need more traces (30 eqts, need >= 180)
0:5:15:alg:Debug:obtain 16 new traces
0:5:15:alg:Debug:l14: need more traces (46 eqts, need >= 180)
0:5:15:alg:Debug:obtain 30 new traces
0:5:15:alg:Debug:l14: need more traces (76 eqts, need >= 180)
0:5:15:alg:Debug:obtain 22 new traces
0:5:15:alg:Debug:l14: need more traces (98 eqts, need >= 180)
0:5:15:alg:Debug:obtain 20 new traces
0:5:15:alg:Debug:l14: need more traces (118 eqts, need >= 180)
0:5:16:alg:Debug:obtain 23 new traces
0:5:16:alg:Debug:l14: need more traces (141 eqts, need >= 180)
0:5:16:alg:Debug:obtain 24 new traces
0:5:16:alg:Debug:l14: need more traces (165 eqts, need >= 180)
0:5:16:alg:Debug:obtain 31 new traces
0:5:16:alg:Debug:l14: infer using 180 exprs
0:5:16:miscs:Debug:solve 120 uks using 180 eqts
0:5:32:alg:Debug:l14: 1 candidates:
y^4 + 2*y^3 + y^2 - 4*x == 0
0:5:32:alg:Debug:l14: check 1 unchecked (1 candidates)
0:5:32:alg:Debug:l14: no disproved candidates -- break
0:5:32:alg:Debug:l14: got 1 eqts, 0 new inps
0:5:32:alg:Debug:(y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:32:alg:Info:1 invs:
l14: (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:32:alg:Info:gen ieqs at 1 locs: l14 (int x, int y, int k)
0:5:32:alg:Info:1 locs: check upperbounds for 18 terms
0:5:32:miscs:Debug:workloads 'prove' 18: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
0:5:33:alg:Info:1 locs: compute upperbounds for 8 terms
0:5:33:miscs:Debug:workloads 'guesscheck' 4: [2, 2, 2, 2]
0:5:33:alg:Debug:l14: compute ub for '-y', start w/ min 0, maxV 10)
0:5:33:alg:Debug:got -y <= 0
0:5:33:alg:Debug:l14: compute ub for '-x - y', start w/ min 0, maxV 10)
0:5:34:alg:Debug:got -x - y <= 0
0:5:33:alg:Debug:l14: compute ub for '-k + y', start w/ min 0, maxV 10)
0:5:33:alg:Debug:got -k + y <= 0
0:5:33:alg:Debug:l14: compute ub for '-x', start w/ min 0, maxV 10)
0:5:34:alg:Debug:got -x <= 0
0:5:33:alg:Debug:l14: compute ub for '-k - x', start w/ min 0, maxV 10)
0:5:33:alg:Debug:got -k - x <= 0
0:5:33:alg:Debug:l14: compute ub for '-k', start w/ min 0, maxV 10)
0:5:34:alg:Debug:got -k <= 0
0:5:33:alg:Debug:l14: compute ub for '-x + y', start w/ min 0, maxV 10)
0:5:33:alg:Debug:got -x + y <= 0
0:5:33:alg:Debug:l14: compute ub for '-k - y', start w/ min 0, maxV 10)
0:5:34:alg:Debug:got -k - y <= 0
0:5:34:alg:Info:9 invs:
l14: -x - y <= 0, -x <= 0, -k <= 0, -x + y <= 0, -y <= 0, -k - y <= 0, -k + y <= 0, -k - x <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:34:alg:Info:test 9 invs on all 247 traces
0:5:34:alg:Info:find uniq invs
0:5:34:alg:Info:9 invs:
l14: -x - y <= 0, -x <= 0, -k <= 0, -x + y <= 0, -y <= 0, -k - y <= 0, -k + y <= 0, -k - x <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0
0:5:35:alg:Info:removed 5 redundant invs
0:5:35:alg:Info:got 4 invs, 16 inps (test 45): 
l14: -x + y <= 0, (y*y*y*y) + 2*(y*y*y) + (y*y) - 4*x == 0, -y <= 0, -k + y <= 0
0:5:35:alg:Info:*done* prog programs/nla/ps4.c, invs 4, time 19.7138428688 s
0:5:35:alg:Debug:rm -rf /var/tmp/DIG2_qbTUFm
running mannadiv
0:5:36:alg:Debug:src: /var/tmp/DIG2_byJQ0x/mannadiv.c
0:5:36:alg:Info:analyze programs/nla/mannadiv.c
0:5:36:alg:Info:set seed to: 0.0 (test 11)
0:5:36:miscs:Info:autodeg 4
0:5:36:alg:Info:check reachability
0:5:36:alg:Info:gen eqts at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:5:36:alg:Debug:l16: infer using 189 exprs
0:5:36:miscs:Debug:solve 126 uks using 189 eqts
0:5:44:alg:Debug:l16: 2 candidates:
y1*y2*y3 == 0
x2*y1 - x1 + y2 + y3 == 0
0:5:44:alg:Debug:l16: check 2 unchecked (2 candidates)
0:5:44:miscs:Debug:workloads 'prove' 2: [1, 1]
0:5:48:alg:Debug:l16: 1 new cex exprs
0:5:48:alg:Debug:l16: infer using 190 exprs
0:5:48:miscs:Debug:solve 126 uks using 190 eqts
0:5:56:alg:Debug:l16: no new results -- break
0:5:56:alg:Debug:l16: got 1 eqts, 180 new inps
0:5:56:alg:Debug:x2*y1 - x1 + y2 + y3 == 0
0:5:56:alg:Info:1 invs:
l16: x2*y1 - x1 + y2 + y3 == 0
0:5:56:alg:Info:gen ieqs at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:5:56:alg:Info:1 locs: check upperbounds for 50 terms
0:5:56:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:5:58:alg:Info:1 locs: compute upperbounds for 19 terms
0:5:58:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
0:5:59:alg:Debug:l16: compute ub for '-x1 - y2', start w/ min 0, maxV 10)
0:6:0:alg:Debug:got -x1 - y2 <= 0
0:5:59:alg:Debug:l16: compute ub for '-y1 - y2', start w/ min 0, maxV 10)
0:6:0:alg:Debug:got -y1 - y2 <= 0
0:6:0:alg:Debug:l16: compute ub for '-x2 - y1', start w/ min -1, maxV 10)
0:6:1:alg:Debug:got -x2 - y1 <= -1
0:5:59:alg:Debug:l16: compute ub for '-y3', start w/ min 0, maxV 10)
0:6:0:alg:Debug:got -y3 <= 0
0:6:0:alg:Debug:l16: compute ub for '-y2', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -y2 <= 0
0:5:59:alg:Debug:l16: compute ub for '-y1', start w/ min 0, maxV 10)
0:5:59:alg:Debug:got -y1 <= 0
0:6:0:alg:Debug:l16: compute ub for '-x1 + y2', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -x1 + y2 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x1', start w/ min 0, maxV 10)
0:6:0:alg:Debug:got -x1 <= 0
0:6:0:alg:Debug:l16: compute ub for '-y2 - y3', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -y2 - y3 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x2', start w/ min -1, maxV 10)
0:6:0:alg:Debug:got -x2 <= -1
0:6:0:alg:Debug:l16: compute ub for '-x1 - y3', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -x1 - y3 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x2 + y2', start w/ min -1, maxV 10)
0:6:0:alg:Debug:got -x2 + y2 <= -1
0:6:0:alg:Debug:l16: compute ub for '-x1 + y1', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -x1 + y1 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x2 - y2', start w/ min -1, maxV 10)
0:6:0:alg:Debug:got -x2 - y2 <= -1
0:6:0:alg:Debug:l16: compute ub for '-y1 - y3', start w/ min 0, maxV 10)
0:6:1:alg:Debug:got -y1 - y3 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x1 - x2', start w/ min -7, maxV 10)
0:6:0:alg:Debug:got -x1 - x2 <= -1
0:6:1:alg:Debug:l16: compute ub for '-x1 + y3', start w/ min 0, maxV 10)
0:6:2:alg:Debug:got -x1 + y3 <= 0
0:5:59:alg:Debug:l16: compute ub for '-x2 - y3', start w/ min -1, maxV 10)
0:6:0:alg:Debug:got -x2 - y3 <= -1
0:6:1:alg:Debug:l16: compute ub for '-x1 - y1', start w/ min 0, maxV 10)
0:6:2:alg:Debug:got -x1 - y1 <= 0
0:6:2:alg:Info:20 invs:
l16: -x1 - y1 <= 0, -x2 - y3 <= -1, x2*y1 - x1 + y2 + y3 == 0, -x1 - y2 <= 0, -y2 <= 0, -x1 <= 0, -x2 <= -1, -x2 + y2 <= -1, -x1 + y3 <= 0, -x2 - y1 <= -1, -y2 - y3 <= 0, -x2 - y2 <= -1, -y1 <= 0, -y1 - y3 <= 0, -y3 <= 0, -x1 + y1 <= 0, -x1 + y2 <= 0, -x1 - x2 <= -1, -y1 - y2 <= 0, -x1 - y3 <= 0
0:6:2:alg:Info:test 20 invs on all 1984 traces
0:6:4:alg:Info:find uniq invs
0:6:4:alg:Info:20 invs:
l16: -x1 - y1 <= 0, -x2 - y3 <= -1, x2*y1 - x1 + y2 + y3 == 0, -x1 - y2 <= 0, -y2 <= 0, -x1 <= 0, -x2 <= -1, -x2 + y2 <= -1, -x1 + y3 <= 0, -x2 - y1 <= -1, -y2 - y3 <= 0, -x2 - y2 <= -1, -y1 <= 0, -y1 - y3 <= 0, -y3 <= 0, -x1 + y1 <= 0, -x1 + y2 <= 0, -x1 - x2 <= -1, -y1 - y2 <= 0, -x1 - y3 <= 0
0:6:4:alg:Info:removed 15 redundant invs
0:6:4:alg:Info:got 5 invs, 280 inps (test 51): 
l16: -y2 <= 0, -x2 + y2 <= -1, -y1 <= 0, -y3 <= 0, x2*y1 - x1 + y2 + y3 == 0
0:6:4:alg:Info:*done* prog programs/nla/mannadiv.c, invs 5, time 28.3970630169 s
0:6:4:alg:Debug:rm -rf /var/tmp/DIG2_byJQ0x
0:6:5:alg:Debug:src: /var/tmp/DIG2_RMJ97Y/mannadiv.c
0:6:5:alg:Info:analyze programs/nla/mannadiv.c
0:6:5:alg:Info:set seed to: 1.0 (test 83)
0:6:5:miscs:Info:autodeg 4
0:6:5:alg:Info:check reachability
0:6:5:alg:Info:gen eqts at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:6:6:alg:Debug:l16: infer using 189 exprs
0:6:6:miscs:Debug:solve 126 uks using 189 eqts
0:6:14:alg:Debug:l16: 4 candidates:
y1*y2^2 - 11*y1*y2 == 0
y1*y2*y3 == 0
x2*y1 - 13*y1 == 0
x1 - 13*y1 - y2 - y3 == 0
0:6:14:alg:Debug:l16: check 4 unchecked (4 candidates)
0:6:14:miscs:Debug:workloads 'prove' 4: [1, 1, 1, 1]
0:6:17:alg:Debug:l16: 2 new cex exprs
0:6:17:alg:Debug:l16: infer using 191 exprs
0:6:17:miscs:Debug:solve 126 uks using 191 eqts
0:6:25:alg:Debug:l16: 1 candidates:
x2*y1 - x1 + y2 + y3 == 0
0:6:25:alg:Debug:l16: check 1 unchecked (1 candidates)
0:6:29:alg:Debug:l16: no disproved candidates -- break
0:6:29:alg:Debug:l16: got 1 eqts, 208 new inps
0:6:29:alg:Debug:x2*y1 - x1 + y2 + y3 == 0
0:6:29:alg:Info:1 invs:
l16: x2*y1 - x1 + y2 + y3 == 0
0:6:29:alg:Info:gen ieqs at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:6:29:alg:Info:1 locs: check upperbounds for 50 terms
0:6:29:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:6:31:alg:Info:1 locs: compute upperbounds for 19 terms
0:6:31:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
0:6:32:alg:Debug:l16: compute ub for '-x2', start w/ min -1, maxV 10)
0:6:32:alg:Debug:got -x2 <= -1
0:6:33:alg:Debug:l16: compute ub for '-y1', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -y1 <= 0
0:6:32:alg:Debug:l16: compute ub for '-x2 - y3', start w/ min -1, maxV 10)
0:6:33:alg:Debug:got -x2 - y3 <= -1
0:6:32:alg:Debug:l16: compute ub for '-y2', start w/ min 0, maxV 10)
0:6:32:alg:Debug:got -y2 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x2 - y2', start w/ min -1, maxV 10)
0:6:34:alg:Debug:got -x2 - y2 <= -1
0:6:32:alg:Debug:l16: compute ub for '-x1 + y2', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -x1 + y2 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x1 + y3', start w/ min 0, maxV 10)
0:6:34:alg:Debug:got -x1 + y3 <= 0
0:6:32:alg:Debug:l16: compute ub for '-x1', start w/ min 0, maxV 10)
0:6:32:alg:Debug:got -x1 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x1 + y1', start w/ min 0, maxV 10)
0:6:34:alg:Debug:got -x1 + y1 <= 0
0:6:32:alg:Debug:l16: compute ub for '-y2 - y3', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -y2 - y3 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x2 - y1', start w/ min -1, maxV 10)
0:6:34:alg:Debug:got -x2 - y1 <= -1
0:6:32:alg:Debug:l16: compute ub for '-y3', start w/ min 0, maxV 10)
0:6:32:alg:Debug:got -y3 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x2 + y2', start w/ min -1, maxV 10)
0:6:34:alg:Debug:got -x2 + y2 <= -1
0:6:32:alg:Debug:l16: compute ub for '-x1 - y3', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -x1 - y3 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x1 - y2', start w/ min 0, maxV 10)
0:6:34:alg:Debug:got -x1 - y2 <= 0
0:6:32:alg:Debug:l16: compute ub for '-y1 - y3', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -y1 - y3 <= 0
0:6:33:alg:Debug:l16: compute ub for '-y1 - y2', start w/ min 0, maxV 10)
0:6:34:alg:Debug:got -y1 - y2 <= 0
0:6:32:alg:Debug:l16: compute ub for '-x1 - y1', start w/ min 0, maxV 10)
0:6:33:alg:Debug:got -x1 - y1 <= 0
0:6:33:alg:Debug:l16: compute ub for '-x1 - x2', start w/ min -7, maxV 10)
0:6:34:alg:Debug:got -x1 - x2 <= -1
0:6:34:alg:Info:20 invs:
l16: x2*y1 - x1 + y2 + y3 == 0, -x1 + y3 <= 0, -x2 - y2 <= -1, -x1 <= 0, -x1 + y2 <= 0, -y2 <= 0, -x2 - y3 <= -1, -y1 <= 0, -x2 <= -1, -y2 - y3 <= 0, -x2 + y2 <= -1, -x1 - y2 <= 0, -x1 - y3 <= 0, -y3 <= 0, -y1 - y3 <= 0, -y1 - y2 <= 0, -x2 - y1 <= -1, -x1 + y1 <= 0, -x1 - x2 <= -1, -x1 - y1 <= 0
0:6:34:alg:Info:test 20 invs on all 1941 traces
0:6:36:alg:Info:find uniq invs
0:6:36:alg:Info:20 invs:
l16: x2*y1 - x1 + y2 + y3 == 0, -x1 + y3 <= 0, -x2 - y2 <= -1, -x1 <= 0, -x1 + y2 <= 0, -y2 <= 0, -x2 - y3 <= -1, -y1 <= 0, -x2 <= -1, -y2 - y3 <= 0, -x2 + y2 <= -1, -x1 - y2 <= 0, -x1 - y3 <= 0, -y3 <= 0, -y1 - y3 <= 0, -y1 - y2 <= 0, -x2 - y1 <= -1, -x1 + y1 <= 0, -x1 - x2 <= -1, -x1 - y1 <= 0
0:6:37:alg:Info:removed 15 redundant invs
0:6:37:alg:Info:got 5 invs, 306 inps (test 60): 
l16: -x2 + y2 <= -1, -y3 <= 0, -y2 <= 0, x2*y1 - x1 + y2 + y3 == 0, -y1 <= 0
0:6:37:alg:Info:*done* prog programs/nla/mannadiv.c, invs 5, time 31.5754630566 s
0:6:37:alg:Debug:rm -rf /var/tmp/DIG2_RMJ97Y
0:6:38:alg:Debug:src: /var/tmp/DIG2_xwpVLD/mannadiv.c
0:6:38:alg:Info:analyze programs/nla/mannadiv.c
0:6:38:alg:Info:set seed to: 2.0 (test 98)
0:6:38:miscs:Info:autodeg 4
0:6:38:alg:Info:check reachability
0:6:38:alg:Info:gen eqts at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:6:39:alg:Debug:l16: infer using 189 exprs
0:6:39:miscs:Debug:solve 126 uks using 189 eqts
0:6:47:alg:Debug:l16: 2 candidates:
y1*y2*y3 == 0
x2*y1 - x1 + y2 + y3 == 0
0:6:47:alg:Debug:l16: check 2 unchecked (2 candidates)
0:6:47:miscs:Debug:workloads 'prove' 2: [1, 1]
0:6:50:alg:Debug:l16: 1 new cex exprs
0:6:50:alg:Debug:l16: infer using 190 exprs
0:6:50:miscs:Debug:solve 126 uks using 190 eqts
0:6:57:alg:Debug:l16: no new results -- break
0:6:57:alg:Debug:l16: got 1 eqts, 177 new inps
0:6:57:alg:Debug:x2*y1 - x1 + y2 + y3 == 0
0:6:57:alg:Info:1 invs:
l16: x2*y1 - x1 + y2 + y3 == 0
0:6:57:alg:Info:gen ieqs at 1 locs: l16 (int y1, int y2, int y3, int x1, int x2)
0:6:57:alg:Info:1 locs: check upperbounds for 50 terms
0:6:57:miscs:Debug:workloads 'prove' 17: [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2]
0:7:0:alg:Info:1 locs: compute upperbounds for 19 terms
0:7:0:miscs:Debug:workloads 'guesscheck' 10: [2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
0:7:1:alg:Debug:l16: compute ub for '-y1 - y3', start w/ min 0, maxV 10)
0:7:2:alg:Debug:got -y1 - y3 <= 0
0:7:1:alg:Debug:l16: compute ub for '-y1', start w/ min 0, maxV 10)
0:7:1:alg:Debug:got -y1 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x2', start w/ min -1, maxV 10)
0:7:2:alg:Debug:got -x2 <= -1
0:7:1:alg:Debug:l16: compute ub for '-y1 - y2', start w/ min 0, maxV 10)
0:7:1:alg:Debug:got -y1 - y2 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x1 - y1', start w/ min 0, maxV 10)
0:7:3:alg:Debug:got -x1 - y1 <= 0
0:7:1:alg:Debug:l16: compute ub for '-x1', start w/ min 0, maxV 10)
0:7:1:alg:Debug:got -x1 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x2 + y2', start w/ min -1, maxV 10)
0:7:3:alg:Debug:got -x2 + y2 <= -1
0:7:1:alg:Debug:l16: compute ub for '-x2 - y1', start w/ min -1, maxV 10)
0:7:1:alg:Debug:got -x2 - y1 <= -1
0:7:2:alg:Debug:l16: compute ub for '-x1 + y2', start w/ min 0, maxV 10)
0:7:3:alg:Debug:got -x1 + y2 <= 0
0:7:1:alg:Debug:l16: compute ub for '-x1 + y1', start w/ min 0, maxV 10)
0:7:2:alg:Debug:got -x1 + y1 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x2 - y2', start w/ min -1, maxV 10)
0:7:3:alg:Debug:got -x2 - y2 <= -1
0:7:1:alg:Debug:l16: compute ub for '-y2 - y3', start w/ min 0, maxV 10)
0:7:2:alg:Debug:got -y2 - y3 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x1 - y2', start w/ min 0, maxV 10)
0:7:3:alg:Debug:got -x1 - y2 <= 0
0:7:1:alg:Debug:l16: compute ub for '-x1 + y3', start w/ min 0, maxV 10)
0:7:1:alg:Debug:got -x1 + y3 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x1 - x2', start w/ min -7, maxV 10)
0:7:3:alg:Debug:got -x1 - x2 <= -1
0:7:1:alg:Debug:l16: compute ub for '-y3', start w/ min 0, maxV 10)
0:7:2:alg:Debug:got -y3 <= 0
0:7:2:alg:Debug:l16: compute ub for '-x1 - y3', start w/ min 0, maxV 10)
0:7:3:alg:Debug:got -x1 - y3 <= 0
0:7:1:alg:Debug:l16: compute ub for '-x2 - y3', start w/ min -1, maxV 10)
0:7:2:alg:Debug:got -x2 - y3 <= -1
0:7:3:alg:Debug:l16: compute ub for '-y2', start w/ min 0, maxV 10)
0:7:3:alg:Debug:got -y2 <= 0
0:7:3:alg:Info:20 invs:
l16: -x2 - y1 <= -1, -x1 <= 0, -x2 - y2 <= -1, -x1 - y2 <= 0, -x1 - y1 <= 0, -x1 + y1 <= 0, -x1 + y2 <= 0, -x2 + y2 <= -1, -y2 - y3 <= 0, -x2 <= -1, -y3 <= 0, -y1 - y2 <= 0, -y2 <= 0, -x1 - y3 <= 0, -x1 - x2 <= -1, -x1 + y3 <= 0, -x2 - y3 <= -1, -y1 <= 0, -y1 - y3 <= 0, x2*y1 - x1 + y2 + y3 == 0
0:7:3:alg:Info:test 20 invs on all 1983 traces
0:7:5:alg:Info:find uniq invs
0:7:5:alg:Info:20 invs:
l16: -x2 - y1 <= -1, -x1 <= 0, -x2 - y2 <= -1, -x1 - y2 <= 0, -x1 - y1 <= 0, -x1 + y1 <= 0, -x1 + y2 <= 0, -x2 + y2 <= -1, -y2 - y3 <= 0, -x2 <= -1, -y3 <= 0, -y1 - y2 <= 0, -y2 <= 0, -x1 - y3 <= 0, -x1 - x2 <= -1, -x1 + y3 <= 0, -x2 - y3 <= -1, -y1 <= 0, -y1 - y3 <= 0, x2*y1 - x1 + y2 + y3 == 0
0:7:6:alg:Info:removed 15 redundant invs
0:7:6:alg:Info:got 5 invs, 277 inps (test 45): 
l16: -y2 <= 0, -y3 <= 0, x2*y1 - x1 + y2 + y3 == 0, -x2 + y2 <= -1, -y1 <= 0
0:7:6:alg:Info:*done* prog programs/nla/mannadiv.c, invs 5, time 27.7739191055 s
0:7:6:alg:Debug:rm -rf /var/tmp/DIG2_xwpVLD
running dijkstra
0:7:7:alg:Debug:src: /var/tmp/DIG2_QcGAOl/dijkstra.c
0:7:7:alg:Info:analyze programs/nla/dijkstra.c
0:7:7:alg:Info:set seed to: 0.0 (test 11)
0:7:7:miscs:Info:autodeg 4
0:7:7:alg:Info:check reachability
0:7:7:alg:Info:gen eqts at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:7:7:alg:Debug:l14: need more traces (10 eqts, need >= 189)
0:7:7:alg:Debug:obtain 1 new traces
0:7:7:alg:Debug:l14: need more traces (11 eqts, need >= 189)
0:7:7:alg:Debug:obtain 4 new traces
0:7:7:alg:Debug:l14: need more traces (15 eqts, need >= 189)
0:7:7:alg:Debug:obtain 4 new traces
0:7:7:alg:Debug:l14: need more traces (19 eqts, need >= 189)
0:7:7:alg:Debug:obtain 4 new traces
0:7:7:alg:Debug:l14: need more traces (23 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (28 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (33 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (38 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (43 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (48 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (53 eqts, need >= 189)
0:7:8:alg:Debug:obtain 4 new traces
0:7:8:alg:Debug:l14: need more traces (57 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (62 eqts, need >= 189)
0:7:8:alg:Debug:obtain 5 new traces
0:7:8:alg:Debug:l14: need more traces (67 eqts, need >= 189)
0:7:8:alg:Debug:obtain 4 new traces
0:7:8:alg:Debug:l14: need more traces (71 eqts, need >= 189)
0:7:8:alg:Debug:obtain 4 new traces
0:7:8:alg:Debug:l14: need more traces (75 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (80 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (85 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (90 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (95 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (100 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (105 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (110 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (115 eqts, need >= 189)
0:7:9:alg:Debug:obtain 5 new traces
0:7:9:alg:Debug:l14: need more traces (120 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (125 eqts, need >= 189)
0:7:10:alg:Debug:obtain 4 new traces
0:7:10:alg:Debug:l14: need more traces (129 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (134 eqts, need >= 189)
0:7:10:alg:Debug:obtain 4 new traces
0:7:10:alg:Debug:l14: need more traces (138 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (143 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (148 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (153 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (158 eqts, need >= 189)
0:7:10:alg:Debug:obtain 5 new traces
0:7:10:alg:Debug:l14: need more traces (163 eqts, need >= 189)
0:7:10:alg:Debug:obtain 4 new traces
0:7:10:alg:Debug:l14: need more traces (167 eqts, need >= 189)
0:7:11:alg:Debug:obtain 4 new traces
0:7:11:alg:Debug:l14: need more traces (171 eqts, need >= 189)
0:7:11:alg:Debug:obtain 5 new traces
0:7:11:alg:Debug:l14: need more traces (176 eqts, need >= 189)
0:7:11:alg:Debug:obtain 5 new traces
0:7:11:alg:Debug:l14: need more traces (181 eqts, need >= 189)
0:7:11:alg:Debug:obtain 5 new traces
0:7:11:alg:Debug:l14: need more traces (186 eqts, need >= 189)
0:7:11:alg:Debug:obtain 4 new traces
0:7:11:miscs:Debug:workloads 'find eqts' 2: [1, 1]
0:7:11:alg:Debug:l14: infer using 189 exprs
0:7:11:miscs:Debug:solve 126 uks using 189 eqts
0:7:16:alg:Debug:l14: 3 candidates:
h == 0
n - r == 0
p == 0
0:7:16:alg:Debug:l14: check 3 unchecked (3 candidates)
0:7:16:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:7:16:alg:Debug:l14: no disproved candidates -- break
0:7:11:alg:Debug:l27: infer using 189 exprs
0:7:11:miscs:Debug:solve 126 uks using 189 eqts
0:7:28:alg:Debug:l27: 3 candidates:
h^3 - 12*h*n*q + 16*n*p*q - h*q^2 - 4*p*q^2 + 12*h*q*r - 16*p*q*r == 0
h^2*p - 4*h*n*q + 4*n*p*q - p*q^2 + 4*h*q*r - 4*p*q*r == 0
p^2 - n*q + q*r == 0
0:7:28:alg:Debug:l27: check 3 unchecked (3 candidates)
0:7:28:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:7:28:alg:Debug:l27: no disproved candidates -- break
0:7:28:alg:Debug:l14: got 3 eqts, 0 new inps
0:7:28:alg:Debug:n - r == 0
h == 0
p == 0
0:7:28:alg:Debug:l27: got 3 eqts, 0 new inps
0:7:28:alg:Debug:(h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
(h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
(p*p) - n*q + q*r == 0
0:7:28:alg:Info:6 invs:
l14: n - r == 0, h == 0, p == 0
l27: (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
0:7:28:alg:Info:gen ieqs at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:7:28:alg:Info:2 locs: check upperbounds for 100 terms
0:7:28:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
0:7:29:alg:Info:2 locs: compute upperbounds for 49 terms
0:7:29:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 11]
0:7:29:alg:Debug:l14: compute ub for '-n', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n <= 0
0:7:30:alg:Debug:l14: compute ub for 'n - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got n - r <= 0
0:7:29:alg:Debug:l14: compute ub for 'h - n', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got h - n <= 0
0:7:30:alg:Debug:l14: compute ub for 'p - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got p - q <= -1
0:7:29:alg:Debug:l14: compute ub for '-p - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -p - q <= -1
0:7:30:alg:Debug:l14: compute ub for '-h - n', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - n <= 0
0:7:29:alg:Debug:l14: compute ub for '-q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -q <= -1
0:7:30:alg:Debug:l14: compute ub for 'p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got p <= 0
0:7:29:alg:Debug:l14: compute ub for '-n - p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n - p <= 0
0:7:30:alg:Debug:l14: compute ub for '-h - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - r <= 0
0:7:29:alg:Debug:l14: compute ub for '-h', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h <= 0
0:7:30:alg:Debug:l14: compute ub for '-h - p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - p <= 0
0:7:29:alg:Debug:l14: compute ub for '-p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -p <= 0
0:7:30:alg:Debug:l14: compute ub for '-h + p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h + p <= 0
0:7:29:alg:Debug:l14: compute ub for '-h - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -h - q <= -1
0:7:30:alg:Debug:l14: compute ub for '-r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -r <= 0
0:7:29:alg:Debug:l14: compute ub for 'h - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got h - q <= -1
0:7:30:alg:Debug:l14: compute ub for 'h - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got h - r <= 0
0:7:29:alg:Debug:l14: compute ub for 'h - p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got h - p <= 0
0:7:30:alg:Debug:l14: compute ub for 'h', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got h <= 0
0:7:29:alg:Debug:l14: compute ub for '-n + r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n + r <= 0
0:7:30:alg:Debug:l14: compute ub for '-p - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -p - r <= 0
0:7:29:alg:Debug:l27: compute ub for '-h', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h <= 0
0:7:30:alg:Debug:l27: compute ub for '-h - p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - p <= 0
0:7:29:alg:Debug:l14: compute ub for 'h + p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got h + p <= 0
0:7:30:alg:Debug:l14: compute ub for '-n - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n - r <= 0
0:7:29:alg:Debug:l14: compute ub for 'p - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got p - r <= 0
0:7:30:alg:Debug:l14: compute ub for '-n - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -n - q <= -1
0:7:29:alg:Debug:l27: compute ub for '-p - q', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -p - q <= -1
0:7:30:alg:Debug:l27: compute ub for '-n', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n <= 0
0:7:29:alg:Debug:l14: compute ub for '-q - r', start w/ min -1, maxV 10)
0:7:30:alg:Debug:got -q - r <= -1
0:7:30:alg:Debug:l14: compute ub for '-n + p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n + p <= 0
0:7:29:alg:Debug:l27: compute ub for '-h - n', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - n <= 0
0:7:30:alg:Debug:l27: compute ub for '-h + p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h + p <= 0
0:7:29:alg:Debug:l27: compute ub for '-h - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -h - r <= 0
0:7:30:alg:Debug:l27: compute ub for '-n + p', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n + p <= 0
0:7:29:alg:Debug:l27: compute ub for '-n - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -n - r <= 0
0:7:30:alg:Debug:l27: compute ub for '-n - p', start w/ min 0, maxV 10)
0:7:31:alg:Debug:got -n - p <= 0
0:7:29:alg:Debug:l27: compute ub for '-p - r', start w/ min 0, maxV 10)
0:7:30:alg:Debug:got -p - r <= 0
0:7:30:alg:Debug:l27: compute ub for '-q + r', start w/ min 9, maxV 10)
0:7:30:alg:Debug:got -q + r <= 9
0:7:30:alg:Debug:l27: compute ub for '-q - r', start w/ min -1, maxV 10)
0:7:31:alg:Debug:got -q - r <= -1
0:7:31:alg:Debug:l27: compute ub for '-p', start w/ min 0, maxV 10)
0:7:31:alg:Debug:got -p <= 0
0:7:31:alg:Debug:l27: compute ub for '-h - q', start w/ min -1, maxV 10)
0:7:31:alg:Debug:got -h - q <= -1
0:7:31:alg:Debug:l27: compute ub for '-q', start w/ min -1, maxV 10)
0:7:32:alg:Debug:got -q <= -1
0:7:32:alg:Debug:l27: compute ub for '-r', start w/ min 0, maxV 10)
0:7:33:alg:Debug:got -r <= 0
0:7:33:alg:Debug:l27: compute ub for '-n + r', start w/ min 0, maxV 10)
0:7:33:alg:Debug:got -n + r <= 0
0:7:33:alg:Debug:l27: compute ub for 'h - n', start w/ min 4, maxV 10)
0:7:34:alg:Debug:got h - n <= 4
0:7:34:alg:Debug:l27: compute ub for '-n - q', start w/ min -1, maxV 10)
0:7:35:alg:Debug:got -n - q <= -1
0:7:35:alg:Debug:l27: compute ub for 'p - q', start w/ min 9, maxV 10)
0:7:35:alg:Debug:got p - q <= 9
0:7:35:alg:Info:55 invs:
l14: -n <= 0, n - r <= 0, -p <= 0, -r <= 0, -n + r <= 0, h - n <= 0, -h - n <= 0, -n - p <= 0, -h - r <= 0, -q <= -1, h - r <= 0, -h <= 0, p - q <= -1, -p - r <= 0, -h + p <= 0, -h - q <= -1, -p - q <= -1, h <= 0, p <= 0, h - q <= -1, h - p <= 0, -h - p <= 0, p - r <= 0, -n - r <= 0, -q - r <= -1, -n - q <= -1, -n + p <= 0, n - r == 0, h == 0, p == 0, h + p <= 0
l27: -h <= 0, -n + r <= 0, h - n <= 4, -n - q <= -1, p - q <= 9, -p - q <= -1, -n <= 0, -h - n <= 0, -h + p <= 0, -h - r <= 0, -n + p <= 0, -n - r <= 0, -n - p <= 0, -p - r <= 0, -q + r <= 9, -q - r <= -1, -p <= 0, -h - q <= -1, -q <= -1, -r <= 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0, -h - p <= 0
0:7:35:alg:Info:test 55 invs on all 436 traces
0:7:35:ds:Warn:l27: h - n <= 4 disproved
0:7:35:ds:Warn:l27: p - q <= 9 disproved
0:7:35:ds:Warn:l27: -q + r <= 9 disproved
0:7:35:alg:Info:find uniq invs
0:7:35:alg:Info:52 invs:
l14: -n <= 0, n - r <= 0, -p <= 0, -r <= 0, -n + r <= 0, h - n <= 0, -h - n <= 0, -n - p <= 0, -h - r <= 0, -q <= -1, h - r <= 0, -h <= 0, p - q <= -1, -p - r <= 0, -h + p <= 0, -h - q <= -1, -p - q <= -1, h <= 0, p <= 0, h - q <= -1, h - p <= 0, -h - p <= 0, p - r <= 0, -n - r <= 0, -q - r <= -1, -n - q <= -1, -n + p <= 0, n - r == 0, h == 0, p == 0, h + p <= 0
l27: -h <= 0, -n + r <= 0, -n - q <= -1, -p - q <= -1, -n <= 0, -h - n <= 0, -h + p <= 0, -h - r <= 0, -n + p <= 0, -n - r <= 0, -n - p <= 0, -p - r <= 0, -q - r <= -1, -p <= 0, -h - q <= -1, -q <= -1, -r <= 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0, -h - p <= 0
0:7:35:miscs:Debug:workloads 'uniqify' 2: [1, 1]
0:7:49:alg:Info:removed 38 redundant invs
0:7:49:alg:Info:got 14 invs, 50 inps (test 51): 
l14: -n + r <= 0, -h - q <= -1, h - p <= 0, -h + p <= 0, h == 0, h - n <= 0, n - r <= 0
l27: -p <= 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, -r <= 0, -h + p <= 0, -n + p <= 0, (p*p) - n*q + q*r == 0, -q <= -1
0:7:49:alg:Info:*done* prog programs/nla/dijkstra.c, invs 14, time 41.539577961 s
0:7:49:alg:Debug:rm -rf /var/tmp/DIG2_QcGAOl
0:7:50:alg:Debug:src: /var/tmp/DIG2_24p8uW/dijkstra.c
0:7:50:alg:Info:analyze programs/nla/dijkstra.c
0:7:50:alg:Info:set seed to: 1.0 (test 83)
0:7:50:miscs:Info:autodeg 4
0:7:50:alg:Info:check reachability
0:7:50:alg:Info:gen eqts at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:7:50:alg:Debug:l14: need more traces (9 eqts, need >= 189)
0:7:50:alg:Debug:obtain 1 new traces
0:7:50:alg:Debug:l14: need more traces (10 eqts, need >= 189)
0:7:50:alg:Debug:obtain 4 new traces
0:7:50:alg:Debug:l14: need more traces (14 eqts, need >= 189)
0:7:50:alg:Debug:obtain 4 new traces
0:7:50:alg:Debug:l14: need more traces (18 eqts, need >= 189)
0:7:50:alg:Debug:obtain 4 new traces
0:7:50:alg:Debug:l14: need more traces (22 eqts, need >= 189)
0:7:50:alg:Debug:obtain 5 new traces
0:7:50:alg:Debug:l14: need more traces (27 eqts, need >= 189)
0:7:50:alg:Debug:obtain 5 new traces
0:7:50:alg:Debug:l14: need more traces (32 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (37 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (42 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (47 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (52 eqts, need >= 189)
0:7:51:alg:Debug:obtain 4 new traces
0:7:51:alg:Debug:l14: need more traces (56 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (61 eqts, need >= 189)
0:7:51:alg:Debug:obtain 5 new traces
0:7:51:alg:Debug:l14: need more traces (66 eqts, need >= 189)
0:7:51:alg:Debug:obtain 4 new traces
0:7:51:alg:Debug:l14: need more traces (70 eqts, need >= 189)
0:7:51:alg:Debug:obtain 4 new traces
0:7:51:alg:Debug:l14: need more traces (74 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (79 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (84 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (89 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (94 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (99 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (104 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (109 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (114 eqts, need >= 189)
0:7:52:alg:Debug:obtain 5 new traces
0:7:52:alg:Debug:l14: need more traces (119 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (124 eqts, need >= 189)
0:7:53:alg:Debug:obtain 4 new traces
0:7:53:alg:Debug:l14: need more traces (128 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (133 eqts, need >= 189)
0:7:53:alg:Debug:obtain 4 new traces
0:7:53:alg:Debug:l14: need more traces (137 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (142 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (147 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (152 eqts, need >= 189)
0:7:53:alg:Debug:obtain 5 new traces
0:7:53:alg:Debug:l14: need more traces (157 eqts, need >= 189)
0:7:54:alg:Debug:obtain 5 new traces
0:7:54:alg:Debug:l14: need more traces (162 eqts, need >= 189)
0:7:54:alg:Debug:obtain 4 new traces
0:7:54:alg:Debug:l14: need more traces (166 eqts, need >= 189)
0:7:54:alg:Debug:obtain 4 new traces
0:7:54:alg:Debug:l14: need more traces (170 eqts, need >= 189)
0:7:54:alg:Debug:obtain 5 new traces
0:7:54:alg:Debug:l14: need more traces (175 eqts, need >= 189)
0:7:54:alg:Debug:obtain 5 new traces
0:7:54:alg:Debug:l14: need more traces (180 eqts, need >= 189)
0:7:54:alg:Debug:obtain 5 new traces
0:7:54:alg:Debug:l14: need more traces (185 eqts, need >= 189)
0:7:54:alg:Debug:obtain 4 new traces
0:7:55:miscs:Debug:workloads 'find eqts' 2: [1, 1]
0:7:55:alg:Debug:l14: infer using 189 exprs
0:7:55:miscs:Debug:solve 126 uks using 189 eqts
0:7:59:alg:Debug:l14: 3 candidates:
h == 0
n - r == 0
p == 0
0:7:59:alg:Debug:l14: check 3 unchecked (3 candidates)
0:7:59:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:7:59:alg:Debug:l14: no disproved candidates -- break
0:7:55:alg:Debug:l27: infer using 189 exprs
0:7:55:miscs:Debug:solve 126 uks using 189 eqts
0:8:11:alg:Debug:l27: 3 candidates:
h^3 - 12*h*n*q + 16*n*p*q - h*q^2 - 4*p*q^2 + 12*h*q*r - 16*p*q*r == 0
h^2*p - 4*h*n*q + 4*n*p*q - p*q^2 + 4*h*q*r - 4*p*q*r == 0
p^2 - n*q + q*r == 0
0:8:11:alg:Debug:l27: check 3 unchecked (3 candidates)
0:8:11:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:8:12:alg:Debug:l27: no disproved candidates -- break
0:8:12:alg:Debug:l14: got 3 eqts, 0 new inps
0:8:12:alg:Debug:h == 0
p == 0
n - r == 0
0:8:12:alg:Debug:l27: got 3 eqts, 0 new inps
0:8:12:alg:Debug:(p*p) - n*q + q*r == 0
(h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
(h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
0:8:12:alg:Info:6 invs:
l14: h == 0, p == 0, n - r == 0
l27: (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
0:8:12:alg:Info:gen ieqs at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:8:12:alg:Info:2 locs: check upperbounds for 100 terms
0:8:12:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
0:8:12:alg:Info:2 locs: compute upperbounds for 49 terms
0:8:12:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 11]
0:8:12:alg:Debug:l14: compute ub for '-h - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -h - q <= -1
0:8:13:alg:Debug:l14: compute ub for 'h - p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got h - p <= 0
0:8:12:alg:Debug:l14: compute ub for 'p - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got p - r <= 0
0:8:13:alg:Debug:l14: compute ub for 'p - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got p - q <= -1
0:8:12:alg:Debug:l14: compute ub for '-n - p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n - p <= 0
0:8:13:alg:Debug:l14: compute ub for '-h - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h - r <= 0
0:8:12:alg:Debug:l14: compute ub for '-h + p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h + p <= 0
0:8:13:alg:Debug:l14: compute ub for '-n', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n <= 0
0:8:12:alg:Debug:l14: compute ub for '-n + p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n + p <= 0
0:8:13:alg:Debug:l14: compute ub for '-q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -q <= -1
0:8:12:alg:Debug:l14: compute ub for '-p - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -p - r <= 0
0:8:13:alg:Debug:l14: compute ub for '-h - p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h - p <= 0
0:8:12:alg:Debug:l14: compute ub for 'h', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got h <= 0
0:8:13:alg:Debug:l14: compute ub for '-h - n', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h - n <= 0
0:8:12:alg:Debug:l14: compute ub for '-n + r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n + r <= 0
0:8:13:alg:Debug:l14: compute ub for '-p - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -p - q <= -1
0:8:12:alg:Debug:l14: compute ub for 'n - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got n - r <= 0
0:8:13:alg:Debug:l14: compute ub for '-r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -r <= 0
0:8:12:alg:Debug:l14: compute ub for 'p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got p <= 0
0:8:13:alg:Debug:l14: compute ub for '-p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -p <= 0
0:8:12:alg:Debug:l14: compute ub for 'h - n', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got h - n <= 0
0:8:13:alg:Debug:l14: compute ub for '-h', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -h <= 0
0:8:12:alg:Debug:l27: compute ub for '-h - p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h - p <= 0
0:8:13:alg:Debug:l27: compute ub for '-h', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -h <= 0
0:8:12:alg:Debug:l14: compute ub for '-n - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n - r <= 0
0:8:13:alg:Debug:l14: compute ub for 'h - r', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got h - r <= 0
0:8:12:alg:Debug:l14: compute ub for 'h - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got h - q <= -1
0:8:13:alg:Debug:l14: compute ub for 'h + p', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got h + p <= 0
0:8:12:alg:Debug:l14: compute ub for '-n - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -n - q <= -1
0:8:13:alg:Debug:l14: compute ub for '-q - r', start w/ min -1, maxV 10)
0:8:14:alg:Debug:got -q - r <= -1
0:8:12:alg:Debug:l27: compute ub for '-n - r', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n - r <= 0
0:8:13:alg:Debug:l27: compute ub for '-h - q', start w/ min -1, maxV 10)
0:8:14:alg:Debug:got -h - q <= -1
0:8:12:alg:Debug:l27: compute ub for '-p - q', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -p - q <= -1
0:8:13:alg:Debug:l27: compute ub for '-p - r', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -p - r <= 0
0:8:12:alg:Debug:l27: compute ub for '-h + p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -h + p <= 0
0:8:13:alg:Debug:l27: compute ub for '-n + p', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -n + p <= 0
0:8:12:alg:Debug:l27: compute ub for '-q - r', start w/ min -1, maxV 10)
0:8:13:alg:Debug:got -q - r <= -1
0:8:13:alg:Debug:l27: compute ub for 'h - n', start w/ min 4, maxV 10)
0:8:14:alg:Debug:got h - n <= 4
0:8:12:alg:Debug:l27: compute ub for '-n - p', start w/ min 0, maxV 10)
0:8:13:alg:Debug:got -n - p <= 0
0:8:13:alg:Debug:l27: compute ub for '-h - r', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -h - r <= 0
0:8:14:alg:Debug:l27: compute ub for '-n', start w/ min 0, maxV 10)
0:8:14:alg:Debug:got -n <= 0
0:8:14:alg:Debug:l27: compute ub for '-n + r', start w/ min 0, maxV 10)
0:8:15:alg:Debug:got -n + r <= 0
0:8:15:alg:Debug:l27: compute ub for '-r', start w/ min 0, maxV 10)
0:8:15:alg:Debug:got -r <= 0
0:8:15:alg:Debug:l27: compute ub for '-p', start w/ min 0, maxV 10)
0:8:16:alg:Debug:got -p <= 0
0:8:16:alg:Debug:l27: compute ub for '-q', start w/ min -1, maxV 10)
0:8:16:alg:Debug:got -q <= -1
0:8:16:alg:Debug:l27: compute ub for 'p - q', start w/ min 9, maxV 10)
0:8:16:alg:Debug:got p - q <= 9
0:8:16:alg:Debug:l27: compute ub for '-n - q', start w/ min -1, maxV 10)
0:8:17:alg:Debug:got -n - q <= -1
0:8:17:alg:Debug:l27: compute ub for '-h - n', start w/ min 0, maxV 10)
0:8:17:alg:Debug:got -h - n <= 0
0:8:17:alg:Debug:l27: compute ub for '-q + r', start w/ min 9, maxV 10)
0:8:18:alg:Debug:got -q + r <= 9
0:8:18:alg:Info:55 invs:
l14: p <= 0, -h - q <= -1, -n - p <= 0, -n <= 0, h <= 0, -p - q <= -1, -h + p <= 0, -h - n <= 0, p - r <= 0, -q <= -1, n - r <= 0, p - q <= -1, -n + r <= 0, -h - p <= 0, h - p <= 0, -h - r <= 0, -n + p <= 0, -p - r <= 0, -r <= 0, -n - q <= -1, h - r <= 0, h + p <= 0, -q - r <= -1, h - q <= -1, -n - r <= 0, -h <= 0, h == 0, p == 0, n - r == 0, -p <= 0, h - n <= 0
l27: -n - r <= 0, -h - q <= -1, -p - q <= -1, -p - r <= 0, -h + p <= 0, -n + p <= 0, -q - r <= -1, h - n <= 4, -n - p <= 0, -h - r <= 0, -n <= 0, -n + r <= 0, -r <= 0, -p <= 0, -q <= -1, p - q <= 9, -n - q <= -1, -h - n <= 0, -q + r <= 9, -h - p <= 0, -h <= 0, (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
0:8:18:alg:Info:test 55 invs on all 428 traces
0:8:18:ds:Warn:l27: h - n <= 4 disproved
0:8:18:ds:Warn:l27: p - q <= 9 disproved
0:8:18:ds:Warn:l27: -q + r <= 9 disproved
0:8:18:alg:Info:find uniq invs
0:8:18:alg:Info:52 invs:
l14: p <= 0, -h - q <= -1, -n - p <= 0, -n <= 0, h <= 0, -p - q <= -1, -h + p <= 0, -h - n <= 0, p - r <= 0, -q <= -1, n - r <= 0, p - q <= -1, -n + r <= 0, -h - p <= 0, h - p <= 0, -h - r <= 0, -n + p <= 0, -p - r <= 0, -r <= 0, -n - q <= -1, h - r <= 0, h + p <= 0, -q - r <= -1, h - q <= -1, -n - r <= 0, -h <= 0, h == 0, p == 0, n - r == 0, -p <= 0, h - n <= 0
l27: -n - r <= 0, -h - q <= -1, -p - q <= -1, -p - r <= 0, -h + p <= 0, -n + p <= 0, -q - r <= -1, -n - p <= 0, -h - r <= 0, -n <= 0, -n + r <= 0, -r <= 0, -p <= 0, -q <= -1, -n - q <= -1, -h - n <= 0, -h - p <= 0, -h <= 0, (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
0:8:18:miscs:Debug:workloads 'uniqify' 2: [1, 1]
0:8:19:alg:Info:removed 38 redundant invs
0:8:19:alg:Info:got 14 invs, 50 inps (test 60): 
l14: -h - q <= -1, -h - n <= 0, h == 0, n - r <= 0, h + p <= 0, -n + r <= 0, -h - p <= 0
l27: (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, -n + p <= 0, -r <= 0, (p*p) - n*q + q*r == 0, -p <= 0, -q <= -1, -h + p <= 0
0:8:19:alg:Info:*done* prog programs/nla/dijkstra.c, invs 14, time 29.7092618942 s
0:8:19:alg:Debug:rm -rf /var/tmp/DIG2_24p8uW
0:8:21:alg:Debug:src: /var/tmp/DIG2_SBZZsp/dijkstra.c
0:8:21:alg:Info:analyze programs/nla/dijkstra.c
0:8:21:alg:Info:set seed to: 2.0 (test 98)
0:8:21:miscs:Info:autodeg 4
0:8:21:alg:Info:check reachability
0:8:21:alg:Info:gen eqts at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:8:21:alg:Debug:l14: need more traces (10 eqts, need >= 189)
0:8:21:alg:Debug:obtain 1 new traces
0:8:21:alg:Debug:l14: need more traces (11 eqts, need >= 189)
0:8:21:alg:Debug:obtain 4 new traces
0:8:21:alg:Debug:l14: need more traces (15 eqts, need >= 189)
0:8:21:alg:Debug:obtain 4 new traces
0:8:21:alg:Debug:l14: need more traces (19 eqts, need >= 189)
0:8:21:alg:Debug:obtain 4 new traces
0:8:21:alg:Debug:l14: need more traces (23 eqts, need >= 189)
0:8:21:alg:Debug:obtain 5 new traces
0:8:21:alg:Debug:l14: need more traces (28 eqts, need >= 189)
0:8:21:alg:Debug:obtain 5 new traces
0:8:21:alg:Debug:l14: need more traces (33 eqts, need >= 189)
0:8:21:alg:Debug:obtain 5 new traces
0:8:21:alg:Debug:l14: need more traces (38 eqts, need >= 189)
0:8:21:alg:Debug:obtain 5 new traces
0:8:21:alg:Debug:l14: need more traces (43 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (48 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (53 eqts, need >= 189)
0:8:22:alg:Debug:obtain 4 new traces
0:8:22:alg:Debug:l14: need more traces (57 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (62 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (67 eqts, need >= 189)
0:8:22:alg:Debug:obtain 4 new traces
0:8:22:alg:Debug:l14: need more traces (71 eqts, need >= 189)
0:8:22:alg:Debug:obtain 4 new traces
0:8:22:alg:Debug:l14: need more traces (75 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (80 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (85 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (90 eqts, need >= 189)
0:8:22:alg:Debug:obtain 5 new traces
0:8:22:alg:Debug:l14: need more traces (95 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (100 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (105 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (110 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (115 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (120 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (125 eqts, need >= 189)
0:8:23:alg:Debug:obtain 4 new traces
0:8:23:alg:Debug:l14: need more traces (129 eqts, need >= 189)
0:8:23:alg:Debug:obtain 5 new traces
0:8:23:alg:Debug:l14: need more traces (134 eqts, need >= 189)
0:8:23:alg:Debug:obtain 4 new traces
0:8:23:alg:Debug:l14: need more traces (138 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (143 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (148 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (153 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (158 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (163 eqts, need >= 189)
0:8:24:alg:Debug:obtain 4 new traces
0:8:24:alg:Debug:l14: need more traces (167 eqts, need >= 189)
0:8:24:alg:Debug:obtain 4 new traces
0:8:24:alg:Debug:l14: need more traces (171 eqts, need >= 189)
0:8:24:alg:Debug:obtain 5 new traces
0:8:24:alg:Debug:l14: need more traces (176 eqts, need >= 189)
0:8:25:alg:Debug:obtain 5 new traces
0:8:25:alg:Debug:l14: need more traces (181 eqts, need >= 189)
0:8:25:alg:Debug:obtain 5 new traces
0:8:25:alg:Debug:l14: need more traces (186 eqts, need >= 189)
0:8:25:alg:Debug:obtain 4 new traces
0:8:25:miscs:Debug:workloads 'find eqts' 2: [1, 1]
0:8:25:alg:Debug:l14: infer using 189 exprs
0:8:25:miscs:Debug:solve 126 uks using 189 eqts
0:8:29:alg:Debug:l14: 3 candidates:
h == 0
n - r == 0
p == 0
0:8:29:alg:Debug:l14: check 3 unchecked (3 candidates)
0:8:29:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:8:30:alg:Debug:l14: no disproved candidates -- break
0:8:25:alg:Debug:l27: infer using 189 exprs
0:8:25:miscs:Debug:solve 126 uks using 189 eqts
0:8:42:alg:Debug:l27: 3 candidates:
h^3 - 12*h*n*q + 16*n*p*q - h*q^2 - 4*p*q^2 + 12*h*q*r - 16*p*q*r == 0
h^2*p - 4*h*n*q + 4*n*p*q - p*q^2 + 4*h*q*r - 4*p*q*r == 0
p^2 - n*q + q*r == 0
0:8:42:alg:Debug:l27: check 3 unchecked (3 candidates)
0:8:42:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:8:42:alg:Debug:l27: no disproved candidates -- break
0:8:42:alg:Debug:l14: got 3 eqts, 0 new inps
0:8:42:alg:Debug:h == 0
n - r == 0
p == 0
0:8:42:alg:Debug:l27: got 3 eqts, 0 new inps
0:8:42:alg:Debug:(h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0
(h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
(p*p) - n*q + q*r == 0
0:8:42:alg:Info:6 invs:
l14: n - r == 0, h == 0, p == 0
l27: (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
0:8:42:alg:Info:gen ieqs at 2 locs: l14 (int r, int p, int n, int q, int h); l27 (int r, int p, int n, int q, int h)
0:8:42:alg:Info:2 locs: check upperbounds for 100 terms
0:8:42:miscs:Debug:workloads 'prove' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
0:8:43:alg:Info:2 locs: compute upperbounds for 49 terms
0:8:43:miscs:Debug:workloads 'guesscheck' 20: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 11]
0:8:43:alg:Debug:l27: compute ub for '-h - n', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -h - n <= 0
0:8:44:alg:Debug:l27: compute ub for 'p - q', start w/ min 9, maxV 10)
0:8:44:alg:Debug:got p - q <= 9
0:8:43:alg:Debug:l27: compute ub for '-n - p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n - p <= 0
0:8:44:alg:Debug:l27: compute ub for '-q + r', start w/ min 9, maxV 10)
0:8:44:alg:Debug:got -q + r <= 9
0:8:43:alg:Debug:l14: compute ub for '-p', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -p <= 0
0:8:43:alg:Debug:l14: compute ub for 'n - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got n - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-p - q', start w/ min -1, maxV 10)
0:8:43:alg:Debug:got -p - q <= -1
0:8:43:alg:Debug:l14: compute ub for '-h - p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -h - p <= 0
0:8:43:alg:Debug:l14: compute ub for 'p - q', start w/ min -1, maxV 10)
0:8:43:alg:Debug:got p - q <= -1
0:8:43:alg:Debug:l14: compute ub for '-h - n', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -h - n <= 0
0:8:43:alg:Debug:l14: compute ub for '-n', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -n <= 0
0:8:43:alg:Debug:l14: compute ub for 'p - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got p - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-h - r', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -h - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-h - q', start w/ min -1, maxV 10)
0:8:44:alg:Debug:got -h - q <= -1
0:8:43:alg:Debug:l14: compute ub for 'h', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got h <= 0
0:8:43:alg:Debug:l14: compute ub for '-q', start w/ min -1, maxV 10)
0:8:44:alg:Debug:got -q <= -1
0:8:43:alg:Debug:l14: compute ub for 'h - q', start w/ min -1, maxV 10)
0:8:43:alg:Debug:got h - q <= -1
0:8:43:alg:Debug:l14: compute ub for 'h - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got h - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-h', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -h <= 0
0:8:43:alg:Debug:l14: compute ub for '-n + r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n + r <= 0
0:8:43:alg:Debug:l14: compute ub for 'h - p', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got h - p <= 0
0:8:43:alg:Debug:l14: compute ub for '-p - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -p - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-q - r', start w/ min -1, maxV 10)
0:8:43:alg:Debug:got -q - r <= -1
0:8:43:alg:Debug:l14: compute ub for 'p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got p <= 0
0:8:43:alg:Debug:l14: compute ub for 'h + p', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got h + p <= 0
0:8:43:alg:Debug:l14: compute ub for '-n + p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n + p <= 0
0:8:43:alg:Debug:l14: compute ub for '-n - r', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -n - r <= 0
0:8:43:alg:Debug:l14: compute ub for '-n - p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n - p <= 0
0:8:43:alg:Debug:l14: compute ub for '-h + p', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -h + p <= 0
0:8:43:alg:Debug:l14: compute ub for 'h - n', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got h - n <= 0
0:8:43:alg:Debug:l14: compute ub for '-r', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -r <= 0
0:8:43:alg:Debug:l14: compute ub for '-n - q', start w/ min -1, maxV 10)
0:8:44:alg:Debug:got -n - q <= -1
0:8:43:alg:Debug:l27: compute ub for '-n - q', start w/ min -1, maxV 10)
0:8:43:alg:Debug:got -n - q <= -1
0:8:44:alg:Debug:l27: compute ub for '-n + r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n + r <= 0
0:8:43:alg:Debug:l27: compute ub for '-p - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -p - r <= 0
0:8:44:alg:Debug:l27: compute ub for '-q', start w/ min -1, maxV 10)
0:8:44:alg:Debug:got -q <= -1
0:8:43:alg:Debug:l27: compute ub for '-n - r', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n - r <= 0
0:8:44:alg:Debug:l27: compute ub for '-h - p', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -h - p <= 0
0:8:43:alg:Debug:l27: compute ub for '-h - r', start w/ min 0, maxV 10)
0:8:43:alg:Debug:got -h - r <= 0
0:8:44:alg:Debug:l27: compute ub for '-n', start w/ min 0, maxV 10)
0:8:44:alg:Debug:got -n <= 0
0:8:44:alg:Debug:l27: compute ub for '-q - r', start w/ min -1, maxV 10)
0:8:44:alg:Debug:got -q - r <= -1
0:8:45:alg:Debug:l27: compute ub for '-n + p', start w/ min 0, maxV 10)
0:8:45:alg:Debug:got -n + p <= 0
0:8:45:alg:Debug:l27: compute ub for '-p - q', start w/ min -1, maxV 10)
0:8:46:alg:Debug:got -p - q <= -1
0:8:46:alg:Debug:l27: compute ub for '-h - q', start w/ min -1, maxV 10)
0:8:46:alg:Debug:got -h - q <= -1
0:8:46:alg:Debug:l27: compute ub for '-r', start w/ min 0, maxV 10)
0:8:47:alg:Debug:got -r <= 0
0:8:47:alg:Debug:l27: compute ub for '-p', start w/ min 0, maxV 10)
0:8:47:alg:Debug:got -p <= 0
0:8:48:alg:Debug:l27: compute ub for '-h + p', start w/ min 0, maxV 10)
0:8:48:alg:Debug:got -h + p <= 0
0:8:48:alg:Debug:l27: compute ub for 'h - n', start w/ min 4, maxV 10)
0:8:49:alg:Debug:got h - n <= 4
0:8:49:alg:Debug:l27: compute ub for '-h', start w/ min 0, maxV 10)
0:8:49:alg:Debug:got -h <= 0
0:8:49:alg:Info:55 invs:
l14: -n <= 0, -h - r <= 0, -q <= -1, -h <= 0, -p - r <= 0, -p - q <= -1, p - q <= -1, p - r <= 0, -h - p <= 0, h - q <= -1, -p <= 0, -n + r <= 0, -h - q <= -1, -h - n <= 0, h - p <= 0, h <= 0, h - r <= 0, n - r <= 0, -h + p <= 0, -r <= 0, -n - p <= 0, -n + p <= 0, h - n <= 0, -n - r <= 0, -n - q <= -1, n - r == 0, h == 0, p == 0, p <= 0, -q - r <= -1, h + p <= 0
l27: h - n <= 4, -h <= 0, -h - n <= 0, p - q <= 9, -q + r <= 9, -n - p <= 0, -n - q <= -1, -n + r <= 0, -p - r <= 0, -q <= -1, -n - r <= 0, -h - p <= 0, -h - r <= 0, -n <= 0, -q - r <= -1, -n + p <= 0, -p - q <= -1, -h - q <= -1, -r <= 0, -p <= 0, -h + p <= 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
0:8:49:alg:Info:test 55 invs on all 436 traces
0:8:49:ds:Warn:l27: -q + r <= 9 disproved
0:8:50:ds:Warn:l27: p - q <= 9 disproved
0:8:50:ds:Warn:l27: h - n <= 4 disproved
0:8:50:alg:Info:find uniq invs
0:8:50:alg:Info:52 invs:
l14: -n <= 0, -h - r <= 0, -q <= -1, -h <= 0, -p - r <= 0, -p - q <= -1, p - q <= -1, p - r <= 0, -h - p <= 0, h - q <= -1, -p <= 0, -n + r <= 0, -h - q <= -1, -h - n <= 0, h - p <= 0, h <= 0, h - r <= 0, n - r <= 0, -h + p <= 0, -r <= 0, -n - p <= 0, -n + p <= 0, h - n <= 0, -n - r <= 0, -n - q <= -1, n - r == 0, h == 0, p == 0, p <= 0, -q - r <= -1, h + p <= 0
l27: -h <= 0, -h - n <= 0, -n - p <= 0, -n - q <= -1, -n + r <= 0, -p - r <= 0, -q <= -1, -n - r <= 0, -h - p <= 0, -h - r <= 0, -n <= 0, -q - r <= -1, -n + p <= 0, -p - q <= -1, -h - q <= -1, -r <= 0, -p <= 0, -h + p <= 0, (h*h)*p - 4*h*n*q + 4*n*p*q - p*(q*q) + 4*h*q*r - 4*p*q*r == 0, (p*p) - n*q + q*r == 0, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0
0:8:50:miscs:Debug:workloads 'uniqify' 2: [1, 1]
0:8:51:alg:Info:removed 38 redundant invs
0:8:51:alg:Info:got 14 invs, 50 inps (test 45): 
l14: -n + r <= 0, h == 0, h + p <= 0, h - p <= 0, n - r <= 0, -h - q <= -1, -p - r <= 0
l27: -r <= 0, (p*p) - n*q + q*r == 0, -n + p <= 0, -p <= 0, -q <= -1, (h*h*h) - 12*h*n*q + 16*n*p*q - h*(q*q) - 4*p*(q*q) + 12*h*q*r - 16*p*q*r == 0, -h + p <= 0
0:8:51:alg:Info:*done* prog programs/nla/dijkstra.c, invs 14, time 30.041326046 s
0:8:51:alg:Debug:rm -rf /var/tmp/DIG2_SBZZsp
running egcd
0:8:52:alg:Debug:src: /var/tmp/DIG2_3tQL0c/egcd.c
0:8:52:alg:Info:analyze programs/nla/egcd.c
0:8:52:alg:Info:set seed to: 10.0 (test 97)
0:8:52:miscs:Info:autodeg 3
0:8:52:alg:Info:check reachability
0:8:52:alg:Info:gen eqts at 1 locs: l22 (int x, int y, int a, int b, int p, int r, int q, int s)
0:8:52:alg:Debug:l22: need more traces (73 eqts, need >= 247)
0:8:52:alg:Debug:obtain 70 new traces
0:8:53:alg:Debug:l22: need more traces (143 eqts, need >= 247)
0:8:53:alg:Debug:obtain 78 new traces
0:8:53:alg:Debug:l22: need more traces (221 eqts, need >= 247)
0:8:53:alg:Debug:obtain 103 new traces
0:8:53:alg:Debug:l22: infer using 247 exprs
0:8:53:miscs:Debug:solve 165 uks using 247 eqts
0:13:6:alg:Debug:l22: 4 candidates:
b*r - a*s + x == 0
q*r - p*s + 1 == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
0:13:6:alg:Debug:l22: check 4 unchecked (4 candidates)
0:13:6:miscs:Debug:workloads 'prove' 4: [1, 1, 1, 1]
0:13:10:alg:Debug:l22: no disproved candidates -- break
0:13:10:alg:Debug:l22: got 4 eqts, 0 new inps
0:13:10:alg:Debug:b*r - a*s + x == 0
q*x + s*y - b == 0
p*x + r*y - a == 0
q*r - p*s + 1 == 0
0:13:10:alg:Info:4 invs:
l22: q*x + s*y - b == 0, q*r - p*s + 1 == 0, b*r - a*s + x == 0, p*x + r*y - a == 0
0:13:10:alg:Info:gen ieqs at 1 locs: l22 (int x, int y, int a, int b, int p, int r, int q, int s)
0:13:10:alg:Info:1 locs: check upperbounds for 128 terms
0:13:10:miscs:Debug:workloads 'prove' 20: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14]
0:13:54:alg:Info:1 locs: compute upperbounds for 71 terms
0:13:54:miscs:Debug:workloads 'guesscheck' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3]
0:13:55:alg:Debug:l22: compute ub for 'r + s', start w/ min 9, maxV 10)
0:13:58:alg:Debug:got r + s <= 9
0:13:58:alg:Debug:l22: compute ub for '-a + p', start w/ min 9, maxV 10)
0:14:1:alg:Debug:got -a + p <= 9
0:14:2:alg:Debug:l22: compute ub for 'q - y', start w/ min -1, maxV 10)
0:14:17:alg:Debug:got q - y <= -1
0:14:18:alg:Debug:l22: compute ub for 'q - r', start w/ min 9, maxV 10)
0:14:21:alg:Debug:got q - r <= 9
0:13:55:alg:Debug:l22: compute ub for 'p - s', start w/ min 9, maxV 10)
0:13:58:alg:Debug:got p - s <= 9
0:13:58:alg:Debug:l22: compute ub for 'p + r', start w/ min 9, maxV 10)
0:14:1:alg:Debug:got p + r <= 9
0:14:2:alg:Debug:l22: compute ub for '-r - y', start w/ min 9, maxV 10)
0:14:5:alg:Debug:got -r - y <= 9
0:14:5:alg:Debug:l22: compute ub for '-a - s', start w/ min -2, maxV 10)
0:14:21:alg:Debug:got -a - s <= -2
0:13:55:alg:Debug:l22: compute ub for 'q + s', start w/ min 9, maxV 10)
0:13:58:alg:Debug:got q + s <= 9
0:13:58:alg:Debug:l22: compute ub for '-p - r', start w/ min 9, maxV 10)
0:14:1:alg:Debug:got -p - r <= 9
0:14:2:alg:Debug:l22: compute ub for '-b - p', start w/ min -2, maxV 10)
0:14:17:alg:Debug:got -b - p <= -2
0:14:17:alg:Debug:l22: compute ub for 's - x', start w/ min 0, maxV 10)
0:14:33:alg:Debug:got s - x <= 0
0:13:55:alg:Debug:l22: compute ub for 'p - y', start w/ min 0, maxV 10)
0:14:10:alg:Debug:got p - y <= 0
0:14:10:alg:Debug:l22: compute ub for '-p - q', start w/ min 9, maxV 10)
0:14:14:alg:Debug:got -p - q <= 9
0:14:14:alg:Debug:l22: compute ub for '-p + s', start w/ min 9, maxV 10)
0:14:17:alg:Debug:got -p + s <= 9
0:14:17:alg:Debug:l22: compute ub for '-b', start w/ min -1, maxV 10)
0:14:33:alg:Debug:got -b <= -1
0:13:55:alg:Debug:l22: compute ub for '-p + r', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -p + r <= -1
0:14:11:alg:Debug:l22: compute ub for '-q', start w/ min 9, maxV 10)
0:14:14:alg:Debug:got -q <= 9
0:14:14:alg:Debug:l22: compute ub for '-b - s', start w/ min -2, maxV 10)
0:14:30:alg:Debug:got -b - s <= -2
0:14:30:alg:Debug:l22: compute ub for 'p', start w/ min 9, maxV 10)
0:14:33:alg:Debug:got p <= 9
0:13:55:alg:Debug:l22: compute ub for '-a + r', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -a + r <= -1
0:14:11:alg:Debug:l22: compute ub for 'q - s', start w/ min -1, maxV 10)
0:14:26:alg:Debug:got q - s <= -1
0:14:27:alg:Debug:l22: compute ub for '-r', start w/ min 9, maxV 10)
0:14:30:alg:Debug:l22: compute ub for '-b - q', start w/ min 9, maxV 10)
0:14:33:alg:Debug:got -b - q <= 9
0:13:55:alg:Debug:l22: compute ub for 'p + s', start w/ min 9, maxV 10)
0:13:58:alg:Debug:l22: compute ub for 'r - x', start w/ min -1, maxV 10)
0:14:14:alg:Debug:got r - x <= -1
0:14:14:alg:Debug:l22: compute ub for '-p + q', start w/ min -1, maxV 10)
0:14:30:alg:Debug:got -p + q <= -1
0:14:30:alg:Debug:l22: compute ub for '-q + r', start w/ min 9, maxV 10)
0:14:33:alg:Debug:got -q + r <= 9
0:13:55:alg:Debug:l22: compute ub for 'b - y', start w/ min 0, maxV 10)
0:14:10:alg:Debug:got b - y <= 0
0:14:11:alg:Debug:l22: compute ub for '-s - x', start w/ min -2, maxV 10)
0:14:26:alg:Debug:got -s - x <= -2
0:14:27:alg:Debug:l22: compute ub for '-b + p', start w/ min 9, maxV 10)
0:14:30:alg:Debug:got -b + p <= 9
0:14:30:alg:Debug:l22: compute ub for '-a - r', start w/ min 9, maxV 10)
0:14:33:alg:Debug:got -a - r <= 9
0:13:55:alg:Debug:l22: compute ub for '-a', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -a <= -1
0:14:11:alg:Debug:l22: compute ub for '-b + s', start w/ min 9, maxV 10)
0:14:14:alg:Debug:got -b + s <= 9
0:14:14:alg:Debug:l22: compute ub for 'p - x', start w/ min 9, maxV 10)
0:14:17:alg:Debug:got p - x <= 9
0:14:18:alg:Debug:l22: compute ub for '-p - x', start w/ min -2, maxV 10)
0:14:33:alg:Debug:got -p - x <= -2
0:13:55:alg:Debug:l22: compute ub for 'q + r', start w/ min 0, maxV 10)
0:14:10:alg:Debug:got q + r <= 0
0:14:11:alg:Debug:l22: compute ub for 's', start w/ min 9, maxV 10)
0:14:14:alg:Debug:got s <= 9
0:14:14:alg:Debug:l22: compute ub for 'p + q', start w/ min 9, maxV 10)
0:14:17:alg:Debug:got p + q <= 9
0:14:18:alg:Debug:l22: compute ub for '-a - b', start w/ min -2, maxV 10)
0:14:33:alg:Debug:got -a - b <= -2
0:13:55:alg:Debug:l22: compute ub for 'a - x', start w/ min 0, maxV 10)
0:14:10:alg:Debug:got a - x <= 0
0:14:11:alg:Debug:l22: compute ub for '-q - x', start w/ min 7, maxV 10)
0:14:20:alg:Debug:got -q - x <= 7
0:14:20:alg:Debug:l22: compute ub for '-p', start w/ min -1, maxV 10)
0:14:36:alg:Debug:got -p <= -1
0:13:55:alg:Debug:l22: compute ub for '-p - s', start w/ min -2, maxV 10)
0:14:10:alg:Debug:got -p - s <= -2
0:14:11:alg:Debug:l22: compute ub for '-s - y', start w/ min -2, maxV 10)
0:14:26:alg:Debug:got -s - y <= -2
0:14:27:alg:Debug:l22: compute ub for '-a - q', start w/ min 9, maxV 10)
0:14:30:alg:Debug:got -a - q <= 9
0:14:30:alg:Debug:l22: compute ub for '-b - x', start w/ min -2, maxV 10)
0:14:45:alg:Debug:got -b - x <= -2
0:13:55:alg:Debug:l22: compute ub for 'q - x', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got q - x <= -1
0:14:11:alg:Debug:l22: compute ub for '-a - x', start w/ min -2, maxV 10)
0:14:26:alg:Debug:got -a - x <= -2
0:14:27:alg:Debug:l22: compute ub for '-b + q', start w/ min -1, maxV 10)
0:14:42:alg:Debug:got -b + q <= -1
0:14:42:alg:Debug:l22: compute ub for '-r - s', start w/ min 9, maxV 10)
0:14:45:alg:Debug:got -r - s <= 9
0:13:55:alg:Debug:l22: compute ub for '-a + s', start w/ min 9, maxV 10)
0:13:58:alg:Debug:got -a + s <= 9
0:13:58:alg:Debug:l22: compute ub for 'r - y', start w/ min -1, maxV 10)
0:14:14:alg:Debug:got r - y <= -1
0:14:14:alg:Debug:l22: compute ub for '-s', start w/ min -1, maxV 10)
0:14:30:alg:Debug:got -s <= -1
0:14:30:alg:Debug:l22: compute ub for '-q - y', start w/ min -1, maxV 10)
0:14:45:alg:Debug:got -q - y <= -1
0:13:55:alg:Debug:l22: compute ub for '-a - p', start w/ min -2, maxV 10)
0:14:10:alg:Debug:got -a - p <= -2
0:14:11:alg:Debug:l22: compute ub for '-y', start w/ min -1, maxV 10)
0:14:26:alg:Debug:got -y <= -1
0:14:26:alg:Debug:l22: compute ub for '-r - x', start w/ min -1, maxV 10)
0:14:42:alg:Debug:got -r - x <= -1
0:14:43:alg:Debug:l22: compute ub for '-q - s', start w/ min 9, maxV 10)
0:14:46:alg:Debug:got -q - s <= 9
0:13:55:alg:Debug:l22: compute ub for '-x', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -x <= -1
0:14:11:alg:Debug:l22: compute ub for '-b - r', start w/ min 9, maxV 10)
0:14:14:alg:Debug:got -b - r <= 9
0:14:14:alg:Debug:l22: compute ub for 'r', start w/ min 0, maxV 10)
0:14:30:alg:Debug:got r <= 0
0:14:30:alg:Debug:l22: compute ub for 'r - s', start w/ min -1, maxV 10)
0:14:46:alg:Debug:got r - s <= -1
0:13:55:alg:Debug:l22: compute ub for '-a + q', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -a + q <= -1
0:14:11:alg:Debug:l22: compute ub for 'q', start w/ min 0, maxV 10)
0:14:26:alg:Debug:got q <= 0
0:14:27:alg:Debug:l22: compute ub for 's - y', start w/ min 8, maxV 10)
0:14:33:alg:Debug:got s - y <= 8
0:14:33:alg:Debug:l22: compute ub for '-a - y', start w/ min -2, maxV 10)
0:14:49:alg:Debug:got -a - y <= -2
0:13:55:alg:Debug:l22: compute ub for '-b + r', start w/ min -1, maxV 10)
0:14:10:alg:Debug:got -b + r <= -1
0:14:11:alg:Debug:l22: compute ub for '-b - y', start w/ min -2, maxV 10)
0:14:26:alg:Debug:got -b - y <= -2
0:14:27:alg:Debug:l22: compute ub for '-x - y', start w/ min -7, maxV 10)
0:14:39:alg:Debug:got -x - y <= -2
0:14:39:alg:Debug:l22: compute ub for '-p - y', start w/ min -2, maxV 10)
0:14:55:alg:Debug:got -p - y <= -2
running lcm1
0:38:52:alg:Debug:src: /var/tmp/DIG2_5rsTPC/lcm1.c
0:38:52:alg:Info:analyze programs/nla/lcm1.c
0:38:52:alg:Info:set seed to: 110.0 (test 43)
0:38:52:miscs:Info:autodeg 3
0:38:52:alg:Info:check reachability
0:38:52:alg:Info:gen eqts at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:38:52:alg:Debug:l29: need more traces (48 eqts, need >= 126)
0:38:56:alg:Debug:obtain 703 new traces
0:38:57:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
0:38:57:alg:Debug:l29: infer using 126 exprs
0:38:57:miscs:Debug:solve 84 uks using 126 eqts
0:39:3:alg:Debug:l29: 1 candidates:
a*b - u*x - v*y == 0
0:39:3:alg:Debug:l29: check 1 unchecked (1 candidates)
0:39:6:alg:Debug:l29: no disproved candidates -- break
0:38:57:alg:Debug:l17: infer using 126 exprs
0:38:57:miscs:Debug:solve 84 uks using 126 eqts
0:39:7:alg:Debug:l17: 3 candidates:
a*x^2 - v*x^2 - x^3 - a*y^2 + v*y^2 + x*y^2 - 5*a*x + 5*v*x + 5*x^2 + 5*a*y - 5*v*y - 5*x*y == 0
a*x*y - v*x*y - x^2*y - a*y^2 + v*y^2 + x*y^2 - a*x + v*x + x^2 + a*y - v*y - x*y == 0
a*b - u*x - v*y == 0
0:39:7:alg:Debug:l17: check 3 unchecked (3 candidates)
0:39:7:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:39:10:alg:Debug:l17: no disproved candidates -- break
0:38:57:alg:Debug:l22: infer using 126 exprs
0:38:57:miscs:Debug:solve 84 uks using 126 eqts
0:39:17:alg:Debug:l22: 1 candidates:
a*b - u*x - v*y == 0
0:39:17:alg:Debug:l22: check 1 unchecked (1 candidates)
0:39:20:alg:Debug:l22: no disproved candidates -- break
0:39:20:alg:Debug:l29: got 1 eqts, 0 new inps
0:39:20:alg:Debug:a*b - u*x - v*y == 0
0:39:20:alg:Debug:l17: got 3 eqts, 0 new inps
0:39:20:alg:Debug:a*b - u*x - v*y == 0
a*x*y - v*x*y - (x*x)*y - a*(y*y) + v*(y*y) + x*(y*y) - a*x + v*x + (x*x) + a*y - v*y - x*y == 0
a*(x*x) - v*(x*x) - (x*x*x) - a*(y*y) + v*(y*y) + x*(y*y) - 5*a*x + 5*v*x + 5*(x*x) + 5*a*y - 5*v*y - 5*x*y == 0
0:39:20:alg:Debug:l22: got 1 eqts, 0 new inps
0:39:20:alg:Debug:a*b - u*x - v*y == 0
0:39:20:alg:Info:5 invs:
l29: a*b - u*x - v*y == 0
l17: a*b - u*x - v*y == 0, a*x*y - v*x*y - (x*x)*y - a*(y*y) + v*(y*y) + x*(y*y) - a*x + v*x + (x*x) + a*y - v*y - x*y == 0, a*(x*x) - v*(x*x) - (x*x*x) - a*(y*y) + v*(y*y) + x*(y*y) - 5*a*x + 5*v*x + 5*(x*x) + 5*a*y - 5*v*y - 5*x*y == 0
l22: a*b - u*x - v*y == 0
0:39:20:alg:Info:gen ieqs at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:39:20:alg:Info:3 locs: check upperbounds for 216 terms
0:39:20:miscs:Debug:workloads 'prove' 20: [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 7]
0:39:56:alg:Info:3 locs: compute upperbounds for 77 terms
0:39:56:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1]
0:39:56:alg:Debug:l17: compute ub for '-u', start w/ min -1, maxV 10)
0:40:11:alg:Debug:got -u <= -1
0:39:56:alg:Debug:l29: compute ub for '-a', start w/ min -2, maxV 10)
0:40:12:alg:Debug:got -a <= -1
0:40:12:alg:Debug:l29: compute ub for '-a - b', start w/ min -7, maxV 10)
0:40:25:alg:Debug:got -a - b <= -3
0:40:25:alg:Debug:l29: compute ub for '-b - v', start w/ min -4, maxV 10)
0:40:37:alg:Debug:got -b - v <= -2
0:40:38:alg:Debug:l29: compute ub for '-u - x', start w/ min -2, maxV 10)
0:40:53:alg:Debug:got -u - x <= -2
0:39:56:alg:Debug:l17: compute ub for '-a - u', start w/ min -7, maxV 10)
0:40:8:alg:Debug:got -a - u <= -2
0:40:9:alg:Debug:l17: compute ub for '-a - x', start w/ min -3, maxV 10)
0:40:24:alg:Debug:got -a - x <= -2
0:40:24:alg:Debug:l17: compute ub for '-b - x', start w/ min -2, maxV 10)
0:40:40:alg:Debug:got -b - x <= -2
0:40:40:alg:Debug:l17: compute ub for '-v - x', start w/ min -2, maxV 10)
0:40:56:alg:Debug:got -v - x <= -1
0:39:56:alg:Debug:l17: compute ub for '-a - b', start w/ min -7, maxV 10)
0:40:8:alg:Debug:got -a - b <= -2
0:40:9:alg:Debug:l17: compute ub for '-b - v', start w/ min -1, maxV 10)
0:40:24:alg:Debug:got -b - v <= -1
0:40:24:alg:Debug:l17: compute ub for '-u - x', start w/ min -2, maxV 10)
0:40:40:alg:Debug:got -u - x <= -2
0:40:40:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
0:40:56:alg:Debug:got -y <= -1
0:39:56:alg:Debug:l29: compute ub for '-b - u', start w/ min -2, maxV 10)
0:40:12:alg:Debug:got -b - u <= -2
0:40:12:alg:Debug:l29: compute ub for '-u - y', start w/ min -2, maxV 10)
0:40:27:alg:Debug:got -u - y <= -2
0:40:28:alg:Debug:l29: compute ub for '-x - y', start w/ min -2, maxV 10)
0:40:43:alg:Debug:got -x - y <= -2
0:40:44:alg:Debug:l29: compute ub for '-u - v', start w/ min -4, maxV 10)
0:40:56:alg:Debug:got -u - v <= -2
0:39:56:alg:Debug:l29: compute ub for '-a - u', start w/ min -7, maxV 10)
0:40:9:alg:Debug:got -a - u <= -3
0:40:9:alg:Debug:l29: compute ub for '-a - x', start w/ min -3, maxV 10)
0:40:25:alg:Debug:got -a - x <= -2
0:40:25:alg:Debug:l29: compute ub for '-b - x', start w/ min -2, maxV 10)
0:40:40:alg:Debug:got -b - x <= -2
0:40:41:alg:Debug:l29: compute ub for '-v - x', start w/ min -2, maxV 10)
0:40:56:alg:Debug:got -v - x <= -1
0:39:56:alg:Debug:l29: compute ub for '-v - y', start w/ min -1, maxV 10)
0:40:12:alg:Debug:got -v - y <= -1
0:40:12:alg:Debug:l29: compute ub for '-a - y', start w/ min -3, maxV 10)
0:40:28:alg:Debug:got -a - y <= -2
0:40:28:alg:Debug:l29: compute ub for '-u', start w/ min -1, maxV 10)
0:40:44:alg:Debug:got -u <= -1
0:40:44:alg:Debug:l22: compute ub for '-a - u', start w/ min -7, maxV 10)
0:40:57:alg:Debug:got -a - u <= -3
0:39:57:alg:Debug:l22: compute ub for '-b + y', start w/ min 0, maxV 10)
0:40:12:alg:Debug:got -b + y <= 0
0:40:13:alg:Debug:l22: compute ub for '-b', start w/ min -1, maxV 10)
0:40:28:alg:Debug:got -b <= -1
0:40:29:alg:Debug:l22: compute ub for '-a', start w/ min -2, maxV 10)
0:40:45:alg:Debug:got -a <= -1
0:40:45:alg:Debug:l22: compute ub for '-a - b', start w/ min -7, maxV 10)
0:40:58:alg:Debug:got -a - b <= -3
0:39:56:alg:Debug:l17: compute ub for '-b - y', start w/ min -2, maxV 10)
0:40:11:alg:Debug:got -b - y <= -2
0:40:12:alg:Debug:l17: compute ub for '-u + y', start w/ min 0, maxV 10)
0:40:27:alg:Debug:got -u + y <= 0
0:40:27:alg:Debug:l17: compute ub for 'b - u', start w/ min 0, maxV 10)
0:40:43:alg:Debug:got b - u <= 0
0:40:43:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
0:40:59:alg:Debug:got -x <= -1
0:39:56:alg:Debug:l17: compute ub for '-v', start w/ min 0, maxV 10)
0:40:11:alg:Debug:got -v <= 0
0:40:12:alg:Debug:l17: compute ub for '-b + y', start w/ min 0, maxV 10)
0:40:27:alg:Debug:got -b + y <= 0
0:40:27:alg:Debug:l17: compute ub for '-b', start w/ min -1, maxV 10)
0:40:43:alg:Debug:got -b <= -1
0:40:43:alg:Debug:l17: compute ub for '-a', start w/ min -2, maxV 10)
0:40:59:alg:Debug:got -a <= -1
0:39:56:alg:Debug:l17: compute ub for '-b - u', start w/ min -2, maxV 10)
0:40:11:alg:Debug:got -b - u <= -2
0:40:12:alg:Debug:l17: compute ub for '-u - y', start w/ min -2, maxV 10)
0:40:27:alg:Debug:got -u - y <= -2
0:40:27:alg:Debug:l17: compute ub for '-x - y', start w/ min -2, maxV 10)
0:40:43:alg:Debug:got -x - y <= -2
0:40:43:alg:Debug:l17: compute ub for '-u - v', start w/ min -1, maxV 10)
0:40:59:alg:Debug:got -u - v <= -1
0:39:56:alg:Debug:l17: compute ub for '-a - v', start w/ min -2, maxV 10)
0:40:12:alg:Debug:got -a - v <= -1
0:40:12:alg:Debug:l17: compute ub for '-a + x', start w/ min 0, maxV 10)
0:40:27:alg:Debug:got -a + x <= 0
0:40:28:alg:Debug:l17: compute ub for '-v - y', start w/ min -1, maxV 10)
0:40:43:alg:Debug:got -v - y <= -1
0:40:43:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
0:40:59:alg:Debug:got -a - y <= -2
0:39:56:alg:Debug:l29: compute ub for '-v', start w/ min 0, maxV 10)
0:40:12:alg:Debug:got -v <= 0
0:40:12:alg:Debug:l29: compute ub for '-b + y', start w/ min 0, maxV 10)
0:40:27:alg:Debug:got -b + y <= 0
0:40:28:alg:Debug:l29: compute ub for '-u + x', start w/ min 0, maxV 10)
0:40:43:alg:Debug:got -u + x <= 0
0:40:44:alg:Debug:l29: compute ub for '-b', start w/ min -1, maxV 10)
0:40:59:alg:Debug:got -b <= -1
0:39:56:alg:Debug:l29: compute ub for '-x', start w/ min -1, maxV 10)
0:40:12:alg:Debug:got -x <= -1
0:40:12:alg:Debug:l29: compute ub for '-a - v', start w/ min -2, maxV 10)
0:40:28:alg:Debug:got -a - v <= -1
0:40:28:alg:Debug:l29: compute ub for '-b + x', start w/ min 0, maxV 10)
0:40:44:alg:Debug:got -b + x <= 0
0:40:44:alg:Debug:l29: compute ub for '-a + x', start w/ min 0, maxV 10)
0:40:59:alg:Debug:got -a + x <= 0
0:39:56:alg:Debug:l29: compute ub for '-y', start w/ min -1, maxV 10)
0:40:12:alg:Debug:got -y <= -1
0:40:12:alg:Debug:l29: compute ub for '-b - y', start w/ min -2, maxV 10)
0:40:28:alg:Debug:got -b - y <= -2
0:40:28:alg:Debug:l29: compute ub for '-u + y', start w/ min 0, maxV 10)
0:40:44:alg:Debug:got -u + y <= 0
0:40:44:alg:Debug:l29: compute ub for 'b - u', start w/ min 0, maxV 10)
0:41:0:alg:Debug:got b - u <= 0
0:39:57:alg:Debug:l22: compute ub for '-u - y', start w/ min -2, maxV 10)
0:40:12:alg:Debug:got -u - y <= -2
0:40:13:alg:Debug:l22: compute ub for '-x - y', start w/ min -2, maxV 10)
0:40:28:alg:Debug:got -x - y <= -2
0:40:29:alg:Debug:l22: compute ub for '-u - v', start w/ min -1, maxV 10)
0:40:44:alg:Debug:got -u - v <= -1
0:40:45:alg:Debug:l22: compute ub for '-v', start w/ min 0, maxV 10)
0:41:0:alg:Debug:got -v <= 0
0:39:57:alg:Debug:l22: compute ub for '-b - v', start w/ min -1, maxV 10)
0:40:12:alg:Debug:got -b - v <= -1
0:40:13:alg:Debug:l22: compute ub for '-u - x', start w/ min -2, maxV 10)
0:40:28:alg:Debug:got -u - x <= -2
0:40:29:alg:Debug:l22: compute ub for '-y', start w/ min -1, maxV 10)
0:40:45:alg:Debug:got -y <= -1
0:40:45:alg:Debug:l22: compute ub for '-b - y', start w/ min -2, maxV 10)
0:41:1:alg:Debug:got -b - y <= -2
0:39:57:alg:Debug:l22: compute ub for '-u + y', start w/ min 0, maxV 10)
0:40:12:alg:Debug:got -u + y <= 0
0:40:13:alg:Debug:l22: compute ub for 'b - u', start w/ min 0, maxV 10)
0:40:28:alg:Debug:got b - u <= 0
0:40:29:alg:Debug:l22: compute ub for '-x', start w/ min -1, maxV 10)
0:40:45:alg:Debug:got -x <= -1
0:40:45:alg:Debug:l22: compute ub for '-a - v', start w/ min -2, maxV 10)
0:41:1:alg:Debug:got -a - v <= -1
0:39:57:alg:Debug:l22: compute ub for '-a - x', start w/ min -3, maxV 10)
0:40:12:alg:Debug:got -a - x <= -2
0:40:13:alg:Debug:l22: compute ub for '-b - x', start w/ min -2, maxV 10)
0:40:28:alg:Debug:got -b - x <= -2
0:40:29:alg:Debug:l22: compute ub for '-v - x', start w/ min -2, maxV 10)
0:40:45:alg:Debug:got -v - x <= -1
0:40:45:alg:Debug:l22: compute ub for '-b - u', start w/ min -2, maxV 10)
0:41:1:alg:Debug:got -b - u <= -2
0:39:57:alg:Debug:l22: compute ub for '-a + x', start w/ min 0, maxV 10)
0:40:12:alg:Debug:got -a + x <= 0
0:40:13:alg:Debug:l22: compute ub for '-v - y', start w/ min -1, maxV 10)
0:40:28:alg:Debug:got -v - y <= -1
0:40:29:alg:Debug:l22: compute ub for '-a - y', start w/ min -3, maxV 10)
0:40:45:alg:Debug:got -a - y <= -3
0:40:45:alg:Debug:l22: compute ub for '-u', start w/ min -1, maxV 10)
0:41:1:alg:Debug:got -u <= -1
0:41:1:alg:Info:82 invs:
l29: -a + x <= 0, b - u <= 0, -y <= -1, -b - y <= -2, -u + y <= 0, -a - b <= -3, -a <= -1, -b - v <= -2, -u - x <= -2, -b - u <= -2, -x - y <= -2, -u - y <= -2, -b - x <= -2, -a - x <= -2, -v - x <= -1, -u - v <= -2, -a - u <= -3, -v - y <= -1, -a - v <= -1, -x <= -1, -b <= -1, -b + x <= 0, -v <= 0, -u + x <= 0, -b + y <= 0, -u <= -1, -a - y <= -2, a*b - u*x - v*y == 0
l17: -u <= -1, -a - x <= -2, -a - u <= -2, -v - x <= -1, -b - x <= -2, -b - u <= -2, -b - y <= -2, -x - y <= -2, -y <= -1, -u - x <= -2, -a - b <= -2, -b - v <= -1, -a <= -1, -a - v <= -1, -b + y <= 0, -v <= 0, -x <= -1, -v - y <= -1, -b <= -1, -a + x <= 0, -u - y <= -2, -a - y <= -2, -u - v <= -1, b - u <= 0, -u + y <= 0, a*b - u*x - v*y == 0, a*x*y - v*x*y - (x*x)*y - a*(y*y) + v*(y*y) + x*(y*y) - a*x + v*x + (x*x) + a*y - v*y - x*y == 0, a*(x*x) - v*(x*x) - (x*x*x) - a*(y*y) + v*(y*y) + x*(y*y) - 5*a*x + 5*v*x + 5*(x*x) + 5*a*y - 5*v*y - 5*x*y == 0
l22: -b - u <= -2, -v - x <= -1, -b - x <= -2, -a - x <= -2, -a - v <= -1, -x <= -1, -a - y <= -3, -u <= -1, -a + x <= 0, -v <= 0, -x - y <= -2, -u - v <= -1, -u - y <= -2, -u - x <= -2, -u + y <= 0, -b - y <= -2, -y <= -1, b - u <= 0, -v - y <= -1, -b - v <= -1, -a <= -1, -a - b <= -3, -b <= -1, -b + y <= 0, -a - u <= -3, a*b - u*x - v*y == 0
0:41:1:alg:Info:test 82 invs on all 5996 traces
0:41:4:ds:Warn:l17: a*x*y - v*x*y - (x*x)*y - a*(y*y) + v*(y*y) + x*(y*y) - a*x + v*x + (x*x) + a*y - v*y - x*y == 0 disproved
0:41:4:ds:Warn:l17: a*(x*x) - v*(x*x) - (x*x*x) - a*(y*y) + v*(y*y) + x*(y*y) - 5*a*x + 5*v*x + 5*(x*x) + 5*a*y - 5*v*y - 5*x*y == 0 disproved
0:41:9:alg:Info:find uniq invs
0:41:9:alg:Info:80 invs:
l29: -a + x <= 0, b - u <= 0, -y <= -1, -b - y <= -2, -u + y <= 0, -a - b <= -3, -a <= -1, -b - v <= -2, -u - x <= -2, -b - u <= -2, -x - y <= -2, -u - y <= -2, -b - x <= -2, -a - x <= -2, -v - x <= -1, -u - v <= -2, -a - u <= -3, -v - y <= -1, -a - v <= -1, -x <= -1, -b <= -1, -b + x <= 0, -v <= 0, -u + x <= 0, -b + y <= 0, -u <= -1, -a - y <= -2, a*b - u*x - v*y == 0
l17: -u <= -1, -a - x <= -2, -a - u <= -2, -v - x <= -1, -b - x <= -2, -b - u <= -2, -b - y <= -2, -x - y <= -2, -y <= -1, -u - x <= -2, -a - b <= -2, -b - v <= -1, -a <= -1, -a - v <= -1, -b + y <= 0, -v <= 0, -x <= -1, -v - y <= -1, -b <= -1, -a + x <= 0, -u - y <= -2, -a - y <= -2, -u - v <= -1, b - u <= 0, -u + y <= 0, a*b - u*x - v*y == 0
l22: -b - u <= -2, -v - x <= -1, -b - x <= -2, -a - x <= -2, -a - v <= -1, -x <= -1, -a - y <= -3, -u <= -1, -a + x <= 0, -v <= 0, -x - y <= -2, -u - v <= -1, -u - y <= -2, -u - x <= -2, -u + y <= 0, -b - y <= -2, -y <= -1, b - u <= 0, -v - y <= -1, -b - v <= -1, -a <= -1, -a - b <= -3, -b <= -1, -b + y <= 0, -a - u <= -3, a*b - u*x - v*y == 0
0:41:9:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
0:41:10:alg:Info:removed 58 redundant invs
0:41:10:alg:Info:got 22 invs, 342 inps (test 98): 
l29: -b + x <= 0, -a - b <= -3, -v <= 0, b - u <= 0, a*b - u*x - v*y == 0, -b + y <= 0, -x <= -1, -y <= -1, -b - v <= -2
l17: b - u <= 0, a*b - u*x - v*y == 0, -v <= 0, -b + y <= 0, -x <= -1, -y <= -1
l22: -x <= -1, -y <= -1, b - u <= 0, -b + y <= 0, -a - y <= -3, a*b - u*x - v*y == 0, -v <= 0
0:41:10:alg:Info:*done* prog programs/nla/lcm1.c, invs 22, time 138.375403166 s
0:41:10:alg:Debug:rm -rf /var/tmp/DIG2_5rsTPC
0:41:12:alg:Debug:src: /var/tmp/DIG2_nIbmXz/lcm1.c
0:41:12:alg:Info:analyze programs/nla/lcm1.c
0:41:12:alg:Info:set seed to: 111.0 (test 42)
0:41:12:miscs:Info:autodeg 3
0:41:12:alg:Info:check reachability
0:41:12:alg:Info:gen eqts at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:41:12:alg:Debug:l29: need more traces (20 eqts, need >= 126)
0:41:16:alg:Debug:obtain 801 new traces
0:41:17:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
0:41:17:alg:Debug:l17: infer using 126 exprs
0:41:17:miscs:Debug:solve 84 uks using 126 eqts
0:41:24:alg:Debug:l17: 2 candidates:
a*x*y - v*x*y - x^2*y - a*y^2 + v*y^2 + x*y^2 - a*x + v*x + x^2 + a - v - x == 0
a*b - u*x - v*y == 0
0:41:24:alg:Debug:l17: check 2 unchecked (2 candidates)
0:41:24:miscs:Debug:workloads 'prove' 2: [1, 1]
0:41:17:alg:Debug:l22: infer using 126 exprs
0:41:17:miscs:Debug:solve 84 uks using 126 eqts
0:41:33:alg:Debug:l22: 1 candidates:
a*b - u*x - v*y == 0
0:41:33:alg:Debug:l22: check 1 unchecked (1 candidates)
0:41:36:alg:Debug:l22: no disproved candidates -- break
0:41:28:alg:Debug:l17: 1 new cex exprs
0:41:28:alg:Debug:l17: infer using 127 exprs
0:41:28:miscs:Debug:solve 84 uks using 127 eqts
0:41:36:alg:Debug:l17: no new results -- break
0:41:17:alg:Debug:l29: infer using 126 exprs
0:41:17:miscs:Debug:solve 84 uks using 126 eqts
0:43:21:alg:Debug:l29: 1 candidates:
a*b - u*x - v*y == 0
0:43:21:alg:Debug:l29: check 1 unchecked (1 candidates)
0:43:25:alg:Debug:l29: no disproved candidates -- break
0:43:25:alg:Debug:l22: got 1 eqts, 0 new inps
0:43:25:alg:Debug:a*b - u*x - v*y == 0
0:43:25:alg:Debug:l17: got 1 eqts, 2 new inps
0:43:25:alg:Debug:a*b - u*x - v*y == 0
0:43:25:alg:Debug:l29: got 1 eqts, 0 new inps
0:43:25:alg:Debug:a*b - u*x - v*y == 0
0:43:25:alg:Info:3 invs:
l29: a*b - u*x - v*y == 0
l17: a*b - u*x - v*y == 0
l22: a*b - u*x - v*y == 0
0:43:25:alg:Info:gen ieqs at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:43:25:alg:Info:3 locs: check upperbounds for 216 terms
0:43:25:miscs:Debug:workloads 'prove' 20: [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 7]
0:44:0:alg:Info:3 locs: compute upperbounds for 77 terms
0:44:0:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1]
0:44:1:alg:Debug:l17: compute ub for '-u', start w/ min -1, maxV 10)
0:44:16:alg:Debug:got -u <= -1
0:44:1:alg:Debug:l29: compute ub for '-v', start w/ min 0, maxV 10)
0:44:16:alg:Debug:got -v <= 0
0:44:17:alg:Debug:l29: compute ub for '-u - v', start w/ min -4, maxV 10)
0:44:29:alg:Debug:got -u - v <= -2
0:44:30:alg:Debug:l29: compute ub for '-v - x', start w/ min -2, maxV 10)
0:44:45:alg:Debug:got -v - x <= -1
0:44:46:alg:Debug:l29: compute ub for '-a - b', start w/ min -7, maxV 10)
0:44:58:alg:Debug:got -a - b <= -3
0:44:1:alg:Debug:l17: compute ub for '-a - u', start w/ min -7, maxV 10)
0:44:13:alg:Debug:got -a - u <= -2
0:44:13:alg:Debug:l17: compute ub for '-b - x', start w/ min -2, maxV 10)
0:44:29:alg:Debug:got -b - x <= -2
0:44:29:alg:Debug:l17: compute ub for '-b + y', start w/ min 0, maxV 10)
0:44:45:alg:Debug:got -b + y <= 0
0:44:45:alg:Debug:l17: compute ub for '-u - y', start w/ min -2, maxV 10)
0:45:0:alg:Debug:got -u - y <= -2
0:44:1:alg:Debug:l17: compute ub for '-v', start w/ min 0, maxV 10)
0:44:16:alg:Debug:got -v <= 0
0:44:16:alg:Debug:l17: compute ub for '-u - v', start w/ min -1, maxV 10)
0:44:32:alg:Debug:got -u - v <= -1
0:44:32:alg:Debug:l17: compute ub for '-v - x', start w/ min -2, maxV 10)
0:44:48:alg:Debug:got -v - x <= -1
0:44:48:alg:Debug:l17: compute ub for '-a - b', start w/ min -7, maxV 10)
0:45:0:alg:Debug:got -a - b <= -2
0:44:1:alg:Debug:l29: compute ub for '-b - v', start w/ min -4, maxV 10)
0:44:13:alg:Debug:got -b - v <= -2
0:44:14:alg:Debug:l29: compute ub for '-a - x', start w/ min -3, maxV 10)
0:44:29:alg:Debug:got -a - x <= -2
0:44:30:alg:Debug:l29: compute ub for 'b - u', start w/ min 0, maxV 10)
0:44:45:alg:Debug:got b - u <= 0
0:44:46:alg:Debug:l29: compute ub for '-u + x', start w/ min 0, maxV 10)
0:45:1:alg:Debug:got -u + x <= 0
0:44:1:alg:Debug:l29: compute ub for '-b + x', start w/ min 0, maxV 10)
0:44:16:alg:Debug:got -b + x <= 0
0:44:17:alg:Debug:l29: compute ub for '-a - y', start w/ min -3, maxV 10)
0:44:32:alg:Debug:got -a - y <= -2
0:44:33:alg:Debug:l29: compute ub for '-u', start w/ min -1, maxV 10)
0:44:48:alg:Debug:got -u <= -1
0:44:49:alg:Debug:l22: compute ub for '-a - u', start w/ min -7, maxV 10)
0:45:1:alg:Debug:got -a - u <= -3
0:44:1:alg:Debug:l29: compute ub for '-a - u', start w/ min -7, maxV 10)
0:44:13:alg:Debug:got -a - u <= -3
0:44:14:alg:Debug:l29: compute ub for '-b - x', start w/ min -2, maxV 10)
0:44:29:alg:Debug:got -b - x <= -2
0:44:30:alg:Debug:l29: compute ub for '-a', start w/ min -2, maxV 10)
0:44:45:alg:Debug:got -a <= -1
0:44:46:alg:Debug:l29: compute ub for '-u - y', start w/ min -2, maxV 10)
0:45:1:alg:Debug:got -u - y <= -2
0:44:1:alg:Debug:l22: compute ub for '-u - v', start w/ min -1, maxV 10)
0:44:17:alg:Debug:got -u - v <= -1
0:44:17:alg:Debug:l22: compute ub for '-v - x', start w/ min -2, maxV 10)
0:44:33:alg:Debug:got -v - x <= -1
0:44:34:alg:Debug:l22: compute ub for '-a - b', start w/ min -7, maxV 10)
0:44:46:alg:Debug:got -a - b <= -3
0:44:47:alg:Debug:l22: compute ub for '-b - v', start w/ min -1, maxV 10)
0:45:2:alg:Debug:got -b - v <= -1
0:44:1:alg:Debug:l17: compute ub for '-b - u', start w/ min -2, maxV 10)
0:44:16:alg:Debug:got -b - u <= -2
0:44:17:alg:Debug:l17: compute ub for '-b', start w/ min -1, maxV 10)
0:44:32:alg:Debug:got -b <= -1
0:44:32:alg:Debug:l17: compute ub for '-a + x', start w/ min 0, maxV 10)
0:44:48:alg:Debug:got -a + x <= 0
0:44:48:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
0:45:3:alg:Debug:got -y <= -1
0:44:1:alg:Debug:l17: compute ub for '-b - v', start w/ min -1, maxV 10)
0:44:16:alg:Debug:got -b - v <= -1
0:44:16:alg:Debug:l17: compute ub for '-a - x', start w/ min -3, maxV 10)
0:44:32:alg:Debug:got -a - x <= -2
0:44:32:alg:Debug:l17: compute ub for 'b - u', start w/ min 0, maxV 10)
0:44:48:alg:Debug:got b - u <= 0
0:44:48:alg:Debug:l17: compute ub for '-u - x', start w/ min -2, maxV 10)
0:45:3:alg:Debug:got -u - x <= -2
0:44:1:alg:Debug:l17: compute ub for '-a - v', start w/ min -2, maxV 10)
0:44:16:alg:Debug:got -a - v <= -1
0:44:17:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
0:44:32:alg:Debug:got -x <= -1
0:44:32:alg:Debug:l17: compute ub for '-v - y', start w/ min -1, maxV 10)
0:44:48:alg:Debug:got -v - y <= -1
0:44:48:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
0:45:3:alg:Debug:got -a - y <= -2
0:44:1:alg:Debug:l17: compute ub for '-a', start w/ min -2, maxV 10)
0:44:16:alg:Debug:got -a <= -1
0:44:16:alg:Debug:l17: compute ub for '-x - y', start w/ min -2, maxV 10)
0:44:32:alg:Debug:got -x - y <= -2
0:44:32:alg:Debug:l17: compute ub for '-u + y', start w/ min 0, maxV 10)
0:44:48:alg:Debug:got -u + y <= 0
0:44:48:alg:Debug:l17: compute ub for '-b - y', start w/ min -2, maxV 10)
0:45:3:alg:Debug:got -b - y <= -2
0:44:1:alg:Debug:l29: compute ub for '-y', start w/ min -1, maxV 10)
0:44:16:alg:Debug:got -y <= -1
0:44:17:alg:Debug:l29: compute ub for '-b + y', start w/ min 0, maxV 10)
0:44:32:alg:Debug:got -b + y <= 0
0:44:33:alg:Debug:l29: compute ub for '-x - y', start w/ min -2, maxV 10)
0:44:48:alg:Debug:got -x - y <= -2
0:44:49:alg:Debug:l29: compute ub for '-u + y', start w/ min 0, maxV 10)
0:45:4:alg:Debug:got -u + y <= 0
0:44:1:alg:Debug:l29: compute ub for '-u - x', start w/ min -2, maxV 10)
0:44:16:alg:Debug:got -u - x <= -2
0:44:17:alg:Debug:l29: compute ub for '-b - u', start w/ min -2, maxV 10)
0:44:32:alg:Debug:got -b - u <= -2
0:44:33:alg:Debug:l29: compute ub for '-b', start w/ min -1, maxV 10)
0:44:48:alg:Debug:got -b <= -1
0:44:49:alg:Debug:l29: compute ub for '-a + x', start w/ min 0, maxV 10)
0:45:4:alg:Debug:got -a + x <= 0
0:44:1:alg:Debug:l29: compute ub for '-b - y', start w/ min -2, maxV 10)
0:44:16:alg:Debug:got -b - y <= -2
0:44:17:alg:Debug:l29: compute ub for '-a - v', start w/ min -2, maxV 10)
0:44:32:alg:Debug:got -a - v <= -1
0:44:33:alg:Debug:l29: compute ub for '-x', start w/ min -1, maxV 10)
0:44:48:alg:Debug:got -x <= -1
0:44:49:alg:Debug:l29: compute ub for '-v - y', start w/ min -1, maxV 10)
0:45:4:alg:Debug:got -v - y <= -1
0:44:1:alg:Debug:l22: compute ub for '-b - x', start w/ min -2, maxV 10)
0:44:17:alg:Debug:got -b - x <= -2
0:44:17:alg:Debug:l22: compute ub for '-a', start w/ min -2, maxV 10)
0:44:33:alg:Debug:got -a <= -1
0:44:34:alg:Debug:l22: compute ub for '-u - y', start w/ min -2, maxV 10)
0:44:49:alg:Debug:got -u - y <= -2
0:44:50:alg:Debug:l22: compute ub for '-v', start w/ min 0, maxV 10)
0:45:5:alg:Debug:got -v <= 0
0:44:1:alg:Debug:l22: compute ub for 'b - u', start w/ min 0, maxV 10)
0:44:17:alg:Debug:got b - u <= 0
0:44:17:alg:Debug:l22: compute ub for '-a + x', start w/ min 0, maxV 10)
0:44:33:alg:Debug:got -a + x <= 0
0:44:34:alg:Debug:l22: compute ub for '-y', start w/ min -1, maxV 10)
0:44:49:alg:Debug:got -y <= -1
0:44:50:alg:Debug:l22: compute ub for '-b + y', start w/ min 0, maxV 10)
0:45:5:alg:Debug:got -b + y <= 0
0:44:1:alg:Debug:l22: compute ub for '-x - y', start w/ min -2, maxV 10)
0:44:17:alg:Debug:got -x - y <= -2
0:44:17:alg:Debug:l22: compute ub for '-u + y', start w/ min 0, maxV 10)
0:44:33:alg:Debug:got -u + y <= 0
0:44:34:alg:Debug:l22: compute ub for '-b - y', start w/ min -2, maxV 10)
0:44:49:alg:Debug:got -b - y <= -2
0:44:50:alg:Debug:l22: compute ub for '-a - v', start w/ min -2, maxV 10)
0:45:5:alg:Debug:got -a - v <= -1
0:44:1:alg:Debug:l22: compute ub for '-a - x', start w/ min -3, maxV 10)
0:44:17:alg:Debug:got -a - x <= -2
0:44:17:alg:Debug:l22: compute ub for '-b', start w/ min -1, maxV 10)
0:44:33:alg:Debug:got -b <= -1
0:44:34:alg:Debug:l22: compute ub for '-u - x', start w/ min -2, maxV 10)
0:44:49:alg:Debug:got -u - x <= -2
0:44:50:alg:Debug:l22: compute ub for '-b - u', start w/ min -2, maxV 10)
0:45:5:alg:Debug:got -b - u <= -2
0:44:1:alg:Debug:l22: compute ub for '-x', start w/ min -1, maxV 10)
0:44:17:alg:Debug:got -x <= -1
0:44:17:alg:Debug:l22: compute ub for '-v - y', start w/ min -1, maxV 10)
0:44:33:alg:Debug:got -v - y <= -1
0:44:34:alg:Debug:l22: compute ub for '-a - y', start w/ min -3, maxV 10)
0:44:49:alg:Debug:got -a - y <= -3
0:44:50:alg:Debug:l22: compute ub for '-u', start w/ min -1, maxV 10)
0:45:5:alg:Debug:got -u <= -1
0:45:5:alg:Info:80 invs:
l29: -y <= -1, -b - u <= -2, -b - y <= -2, -x <= -1, -u - x <= -2, -a + x <= 0, -u + y <= 0, -b - x <= -2, -a - u <= -3, -u <= -1, b - u <= 0, -a <= -1, -u - y <= -2, -a - v <= -1, -b + y <= 0, -a - y <= -2, -b + x <= 0, -u + x <= 0, -b <= -1, -x - y <= -2, -a - b <= -3, -u - v <= -2, -v - x <= -1, -b - v <= -2, -v <= 0, -a - x <= -2, -v - y <= -1, a*b - u*x - v*y == 0
l17: -u - x <= -2, -b - u <= -2, -x <= -1, -y <= -1, -b <= -1, b - u <= 0, -a + x <= 0, -a - x <= -2, -v - y <= -1, -b - v <= -1, -a - v <= -1, -x - y <= -2, -a <= -1, -a - y <= -2, -b - y <= -2, -u + y <= 0, -v - x <= -1, -b + y <= 0, -a - b <= -2, -a - u <= -2, -u <= -1, -v <= 0, -u - y <= -2, -b - x <= -2, -u - v <= -1, a*b - u*x - v*y == 0
l22: -v - x <= -1, -a - u <= -3, -u - v <= -1, -b - v <= -1, -a - b <= -3, -x <= -1, -v <= 0, -b - u <= -2, -u - y <= -2, -a <= -1, -b + y <= 0, -b - x <= -2, -a - x <= -2, -a - y <= -3, b - u <= 0, -u - x <= -2, -u + y <= 0, -b - y <= -2, -x - y <= -2, -v - y <= -1, -a - v <= -1, -b <= -1, -u <= -1, -y <= -1, -a + x <= 0, a*b - u*x - v*y == 0
0:45:5:alg:Info:test 80 invs on all 5817 traces
0:45:13:alg:Info:find uniq invs
0:45:13:alg:Info:80 invs:
l29: -y <= -1, -b - u <= -2, -b - y <= -2, -x <= -1, -u - x <= -2, -a + x <= 0, -u + y <= 0, -b - x <= -2, -a - u <= -3, -u <= -1, b - u <= 0, -a <= -1, -u - y <= -2, -a - v <= -1, -b + y <= 0, -a - y <= -2, -b + x <= 0, -u + x <= 0, -b <= -1, -x - y <= -2, -a - b <= -3, -u - v <= -2, -v - x <= -1, -b - v <= -2, -v <= 0, -a - x <= -2, -v - y <= -1, a*b - u*x - v*y == 0
l17: -u - x <= -2, -b - u <= -2, -x <= -1, -y <= -1, -b <= -1, b - u <= 0, -a + x <= 0, -a - x <= -2, -v - y <= -1, -b - v <= -1, -a - v <= -1, -x - y <= -2, -a <= -1, -a - y <= -2, -b - y <= -2, -u + y <= 0, -v - x <= -1, -b + y <= 0, -a - b <= -2, -a - u <= -2, -u <= -1, -v <= 0, -u - y <= -2, -b - x <= -2, -u - v <= -1, a*b - u*x - v*y == 0
l22: -v - x <= -1, -a - u <= -3, -u - v <= -1, -b - v <= -1, -a - b <= -3, -x <= -1, -v <= 0, -b - u <= -2, -u - y <= -2, -a <= -1, -b + y <= 0, -b - x <= -2, -a - x <= -2, -a - y <= -3, b - u <= 0, -u - x <= -2, -u + y <= 0, -b - y <= -2, -x - y <= -2, -v - y <= -1, -a - v <= -1, -b <= -1, -u <= -1, -y <= -1, -a + x <= 0, a*b - u*x - v*y == 0
0:45:13:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
0:45:14:alg:Info:removed 58 redundant invs
0:45:14:alg:Info:got 22 invs, 350 inps (test 4): 
l29: -b + x <= 0, -b + y <= 0, -y <= -1, -b - v <= -2, -x <= -1, a*b - u*x - v*y == 0, -v <= 0, b - u <= 0, -a - b <= -3
l17: -x <= -1, -v <= 0, b - u <= 0, a*b - u*x - v*y == 0, -b + y <= 0, -y <= -1
l22: -a - y <= -3, a*b - u*x - v*y == 0, -y <= -1, -x <= -1, b - u <= 0, -b + y <= 0, -v <= 0
0:45:14:alg:Info:*done* prog programs/nla/lcm1.c, invs 22, time 242.414340973 s
0:45:14:alg:Debug:rm -rf /var/tmp/DIG2_nIbmXz
0:45:15:alg:Debug:src: /var/tmp/DIG2_PIjx8a/lcm1.c
0:45:15:alg:Info:analyze programs/nla/lcm1.c
0:45:15:alg:Info:set seed to: 112.0 (test 17)
0:45:15:miscs:Info:autodeg 3
0:45:15:alg:Info:check reachability
0:45:15:alg:Info:gen eqts at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:45:16:alg:Debug:l29: need more traces (28 eqts, need >= 126)
0:45:19:alg:Debug:obtain 886 new traces
0:45:20:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
0:45:20:alg:Debug:l17: infer using 126 exprs
0:45:20:miscs:Debug:solve 84 uks using 126 eqts
0:45:30:alg:Debug:l17: 1 candidates:
a*b - u*x - v*y == 0
0:45:30:alg:Debug:l17: check 1 unchecked (1 candidates)
0:45:33:alg:Debug:l17: no disproved candidates -- break
0:45:20:alg:Debug:l29: infer using 126 exprs
0:45:20:miscs:Debug:solve 84 uks using 126 eqts
0:45:20:alg:Debug:l22: infer using 126 exprs
0:45:20:miscs:Debug:solve 84 uks using 126 eqts
0:45:49:alg:Debug:l29: 1 candidates:
a*b - u*x - v*y == 0
0:45:49:alg:Debug:l29: check 1 unchecked (1 candidates)
0:45:52:alg:Debug:l29: no disproved candidates -- break
0:45:51:alg:Debug:l22: 1 candidates:
a*b - u*x - v*y == 0
0:45:51:alg:Debug:l22: check 1 unchecked (1 candidates)
0:45:54:alg:Debug:l22: no disproved candidates -- break
0:45:54:alg:Debug:l17: got 1 eqts, 0 new inps
0:45:54:alg:Debug:a*b - u*x - v*y == 0
0:45:54:alg:Debug:l29: got 1 eqts, 0 new inps
0:45:54:alg:Debug:a*b - u*x - v*y == 0
0:45:54:alg:Debug:l22: got 1 eqts, 0 new inps
0:45:54:alg:Debug:a*b - u*x - v*y == 0
0:45:54:alg:Info:3 invs:
l29: a*b - u*x - v*y == 0
l17: a*b - u*x - v*y == 0
l22: a*b - u*x - v*y == 0
0:45:54:alg:Info:gen ieqs at 3 locs: l29 (int a, int b, int x, int y, int u, int v); l17 (int a, int b, int x, int y, int u, int v); l22 (int a, int b, int x, int y, int u, int v)
0:45:54:alg:Info:3 locs: check upperbounds for 216 terms
0:45:54:miscs:Debug:workloads 'prove' 20: [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 7]
0:46:30:alg:Info:3 locs: compute upperbounds for 77 terms
0:46:30:miscs:Debug:workloads 'guesscheck' 20: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1]
0:46:30:alg:Debug:l17: compute ub for '-u - y', start w/ min -2, maxV 10)
0:46:45:alg:Debug:got -u - y <= -2
0:46:30:alg:Debug:l29: compute ub for '-b - v', start w/ min -4, maxV 10)
0:46:43:alg:Debug:got -b - v <= -2
0:46:43:alg:Debug:l29: compute ub for '-a - x', start w/ min -3, maxV 10)
0:46:59:alg:Debug:got -a - x <= -2
0:46:59:alg:Debug:l29: compute ub for '-a - u', start w/ min -7, maxV 10)
0:47:12:alg:Debug:got -a - u <= -3
0:47:12:alg:Debug:l29: compute ub for '-u - v', start w/ min -4, maxV 10)
0:47:24:alg:Debug:got -u - v <= -2
0:46:30:alg:Debug:l17: compute ub for '-v', start w/ min 0, maxV 10)
0:46:45:alg:Debug:got -v <= 0
0:46:46:alg:Debug:l17: compute ub for '-v - x', start w/ min -2, maxV 10)
0:47:1:alg:Debug:got -v - x <= -1
0:47:1:alg:Debug:l17: compute ub for '-a - b', start w/ min -7, maxV 10)
0:47:14:alg:Debug:got -a - b <= -2
0:47:14:alg:Debug:l17: compute ub for '-b - v', start w/ min -1, maxV 10)
0:47:29:alg:Debug:got -b - v <= -1
0:46:30:alg:Debug:l17: compute ub for '-a - x', start w/ min -3, maxV 10)
0:46:46:alg:Debug:got -a - x <= -2
0:46:46:alg:Debug:l17: compute ub for '-b', start w/ min -1, maxV 10)
0:47:1:alg:Debug:got -b <= -1
0:47:2:alg:Debug:l17: compute ub for '-u - v', start w/ min -1, maxV 10)
0:47:17:alg:Debug:got -u - v <= -1
0:47:17:alg:Debug:l17: compute ub for '-a - u', start w/ min -7, maxV 10)
0:47:30:alg:Debug:got -a - u <= -2
0:46:30:alg:Debug:l29: compute ub for '-v', start w/ min 0, maxV 10)
0:46:46:alg:Debug:got -v <= 0
0:46:46:alg:Debug:l29: compute ub for '-v - x', start w/ min -2, maxV 10)
0:47:2:alg:Debug:got -v - x <= -1
0:47:2:alg:Debug:l29: compute ub for '-a - b', start w/ min -7, maxV 10)
0:47:14:alg:Debug:got -a - b <= -3
0:47:15:alg:Debug:l29: compute ub for '-u + x', start w/ min 0, maxV 10)
0:47:30:alg:Debug:got -u + x <= 0
0:46:30:alg:Debug:l22: compute ub for '-v - x', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -v - x <= -1
0:46:47:alg:Debug:l22: compute ub for '-a - b', start w/ min -7, maxV 10)
0:46:59:alg:Debug:got -a - b <= -3
0:47:0:alg:Debug:l22: compute ub for '-b - v', start w/ min -1, maxV 10)
0:47:15:alg:Debug:got -b - v <= -1
0:47:16:alg:Debug:l22: compute ub for '-a - x', start w/ min -3, maxV 10)
0:47:31:alg:Debug:got -a - x <= -2
0:46:30:alg:Debug:l22: compute ub for '-a - u', start w/ min -7, maxV 10)
0:46:43:alg:Debug:got -a - u <= -3
0:46:44:alg:Debug:l22: compute ub for '-u - v', start w/ min -1, maxV 10)
0:46:59:alg:Debug:got -u - v <= -1
0:47:0:alg:Debug:l22: compute ub for '-b', start w/ min -1, maxV 10)
0:47:15:alg:Debug:got -b <= -1
0:47:16:alg:Debug:l22: compute ub for '-a + x', start w/ min 0, maxV 10)
0:47:31:alg:Debug:got -a + x <= 0
0:46:30:alg:Debug:l17: compute ub for 'b - u', start w/ min 0, maxV 10)
0:46:45:alg:Debug:got b - u <= 0
0:46:46:alg:Debug:l17: compute ub for '-b - y', start w/ min -2, maxV 10)
0:47:1:alg:Debug:got -b - y <= -2
0:47:1:alg:Debug:l17: compute ub for '-x', start w/ min -1, maxV 10)
0:47:17:alg:Debug:got -x <= -1
0:47:17:alg:Debug:l17: compute ub for '-a - v', start w/ min -2, maxV 10)
0:47:33:alg:Debug:got -a - v <= -1
0:46:30:alg:Debug:l17: compute ub for '-u + y', start w/ min 0, maxV 10)
0:46:45:alg:Debug:got -u + y <= 0
0:46:46:alg:Debug:l17: compute ub for '-b - x', start w/ min -2, maxV 10)
0:47:1:alg:Debug:got -b - x <= -2
0:47:1:alg:Debug:l17: compute ub for '-b + y', start w/ min 0, maxV 10)
0:47:17:alg:Debug:got -b + y <= 0
0:47:17:alg:Debug:l17: compute ub for '-a', start w/ min -2, maxV 10)
0:47:33:alg:Debug:got -a <= -1
0:46:30:alg:Debug:l17: compute ub for '-a + x', start w/ min 0, maxV 10)
0:46:45:alg:Debug:got -a + x <= 0
0:46:46:alg:Debug:l17: compute ub for '-u - x', start w/ min -2, maxV 10)
0:47:1:alg:Debug:got -u - x <= -2
0:47:1:alg:Debug:l17: compute ub for '-y', start w/ min -1, maxV 10)
0:47:17:alg:Debug:got -y <= -1
0:47:17:alg:Debug:l17: compute ub for '-x - y', start w/ min -2, maxV 10)
0:47:33:alg:Debug:got -x - y <= -2
0:46:30:alg:Debug:l17: compute ub for '-b - u', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -b - u <= -2
0:46:46:alg:Debug:l17: compute ub for '-v - y', start w/ min -1, maxV 10)
0:47:1:alg:Debug:got -v - y <= -1
0:47:2:alg:Debug:l17: compute ub for '-a - y', start w/ min -3, maxV 10)
0:47:17:alg:Debug:got -a - y <= -2
0:47:17:alg:Debug:l17: compute ub for '-u', start w/ min -1, maxV 10)
0:47:33:alg:Debug:got -u <= -1
0:46:30:alg:Debug:l29: compute ub for '-b', start w/ min -1, maxV 10)
0:46:46:alg:Debug:got -b <= -1
0:46:46:alg:Debug:l29: compute ub for '-a + x', start w/ min 0, maxV 10)
0:47:2:alg:Debug:got -a + x <= 0
0:47:2:alg:Debug:l29: compute ub for '-u - x', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -u - x <= -2
0:47:18:alg:Debug:l29: compute ub for '-y', start w/ min -1, maxV 10)
0:47:34:alg:Debug:got -y <= -1
0:46:30:alg:Debug:l29: compute ub for '-a - y', start w/ min -3, maxV 10)
0:46:46:alg:Debug:got -a - y <= -2
0:46:46:alg:Debug:l29: compute ub for '-u', start w/ min -1, maxV 10)
0:47:2:alg:Debug:got -u <= -1
0:47:2:alg:Debug:l29: compute ub for '-u - y', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -u - y <= -2
0:47:18:alg:Debug:l22: compute ub for '-u + y', start w/ min 0, maxV 10)
0:47:34:alg:Debug:got -u + y <= 0
0:46:30:alg:Debug:l29: compute ub for '-u + y', start w/ min 0, maxV 10)
0:46:46:alg:Debug:got -u + y <= 0
0:46:46:alg:Debug:l29: compute ub for '-b - x', start w/ min -2, maxV 10)
0:47:2:alg:Debug:got -b - x <= -2
0:47:2:alg:Debug:l29: compute ub for '-b + y', start w/ min 0, maxV 10)
0:47:18:alg:Debug:got -b + y <= 0
0:47:18:alg:Debug:l29: compute ub for '-a', start w/ min -2, maxV 10)
0:47:34:alg:Debug:got -a <= -1
0:46:30:alg:Debug:l29: compute ub for '-x - y', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -x - y <= -2
0:46:46:alg:Debug:l29: compute ub for 'b - u', start w/ min 0, maxV 10)
0:47:2:alg:Debug:got b - u <= 0
0:47:2:alg:Debug:l29: compute ub for '-b - y', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -b - y <= -2
0:47:18:alg:Debug:l29: compute ub for '-x', start w/ min -1, maxV 10)
0:47:34:alg:Debug:got -x <= -1
0:46:30:alg:Debug:l29: compute ub for '-a - v', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -a - v <= -1
0:46:46:alg:Debug:l29: compute ub for '-b - u', start w/ min -2, maxV 10)
0:47:2:alg:Debug:got -b - u <= -2
0:47:2:alg:Debug:l29: compute ub for '-b + x', start w/ min 0, maxV 10)
0:47:18:alg:Debug:got -b + x <= 0
0:47:18:alg:Debug:l29: compute ub for '-v - y', start w/ min -1, maxV 10)
0:47:34:alg:Debug:got -v - y <= -1
0:46:30:alg:Debug:l22: compute ub for '-b - y', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -b - y <= -2
0:46:47:alg:Debug:l22: compute ub for '-x', start w/ min -1, maxV 10)
0:47:2:alg:Debug:got -x <= -1
0:47:3:alg:Debug:l22: compute ub for '-a - v', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -a - v <= -1
0:47:19:alg:Debug:l22: compute ub for '-a', start w/ min -2, maxV 10)
0:47:34:alg:Debug:got -a <= -1
0:46:30:alg:Debug:l22: compute ub for '-b - x', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -b - x <= -2
0:46:47:alg:Debug:l22: compute ub for '-b + y', start w/ min 0, maxV 10)
0:47:2:alg:Debug:got -b + y <= 0
0:47:3:alg:Debug:l22: compute ub for '-b - u', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -b - u <= -2
0:47:19:alg:Debug:l22: compute ub for '-v', start w/ min 0, maxV 10)
0:47:34:alg:Debug:got -v <= 0
0:46:30:alg:Debug:l22: compute ub for '-u - x', start w/ min -2, maxV 10)
0:46:46:alg:Debug:got -u - x <= -2
0:46:47:alg:Debug:l22: compute ub for '-y', start w/ min -1, maxV 10)
0:47:2:alg:Debug:got -y <= -1
0:47:3:alg:Debug:l22: compute ub for '-x - y', start w/ min -2, maxV 10)
0:47:18:alg:Debug:got -x - y <= -2
0:47:19:alg:Debug:l22: compute ub for 'b - u', start w/ min 0, maxV 10)
0:47:35:alg:Debug:got b - u <= 0
0:46:31:alg:Debug:l22: compute ub for '-v - y', start w/ min -1, maxV 10)
0:46:46:alg:Debug:got -v - y <= -1
0:46:47:alg:Debug:l22: compute ub for '-a - y', start w/ min -3, maxV 10)
0:47:2:alg:Debug:got -a - y <= -3
0:47:3:alg:Debug:l22: compute ub for '-u', start w/ min -1, maxV 10)
0:47:18:alg:Debug:got -u <= -1
0:47:19:alg:Debug:l22: compute ub for '-u - y', start w/ min -2, maxV 10)
0:47:35:alg:Debug:got -u - y <= -2
0:47:35:alg:Info:80 invs:
l29: -b - y <= -2, -x <= -1, b - u <= 0, -b + y <= 0, -a - v <= -1, -x - y <= -2, -b - u <= -2, -b + x <= 0, -v - y <= -1, -a <= -1, -b - x <= -2, -a - b <= -3, -u + x <= 0, -v - x <= -1, -v <= 0, -a - y <= -2, -u <= -1, -y <= -1, -u - x <= -2, -u - y <= -2, -a + x <= 0, -u + y <= 0, -b <= -1, -u - v <= -2, -b - v <= -2, -a - u <= -3, -a - x <= -2, a*b - u*x - v*y == 0
l17: -a - v <= -1, -u + y <= 0, -x <= -1, -b - y <= -2, -u - x <= -2, -b - x <= -2, b - u <= 0, -x - y <= -2, -b - u <= -2, -v - y <= -1, -a - u <= -2, -y <= -1, -u <= -1, -a - y <= -2, -a + x <= 0, -b + y <= 0, -a <= -1, -v - x <= -1, -v <= 0, -a - b <= -2, -u - y <= -2, -u - v <= -1, -a - x <= -2, -b <= -1, -b - v <= -1, a*b - u*x - v*y == 0
l22: -v <= 0, -b + y <= 0, -b - u <= -2, -u - y <= -2, -u - x <= -2, -a - y <= -3, -v - y <= -1, b - u <= 0, -a - v <= -1, -a <= -1, -x <= -1, -b - y <= -2, -b - x <= -2, -x - y <= -2, -y <= -1, -u <= -1, -b <= -1, -a - u <= -3, -u - v <= -1, -v - x <= -1, -a - x <= -2, -b - v <= -1, -a - b <= -3, -a + x <= 0, -u + y <= 0, a*b - u*x - v*y == 0
0:47:35:alg:Info:test 80 invs on all 5806 traces
0:47:43:alg:Info:find uniq invs
0:47:43:alg:Info:80 invs:
l29: -b - y <= -2, -x <= -1, b - u <= 0, -b + y <= 0, -a - v <= -1, -x - y <= -2, -b - u <= -2, -b + x <= 0, -v - y <= -1, -a <= -1, -b - x <= -2, -a - b <= -3, -u + x <= 0, -v - x <= -1, -v <= 0, -a - y <= -2, -u <= -1, -y <= -1, -u - x <= -2, -u - y <= -2, -a + x <= 0, -u + y <= 0, -b <= -1, -u - v <= -2, -b - v <= -2, -a - u <= -3, -a - x <= -2, a*b - u*x - v*y == 0
l17: -a - v <= -1, -u + y <= 0, -x <= -1, -b - y <= -2, -u - x <= -2, -b - x <= -2, b - u <= 0, -x - y <= -2, -b - u <= -2, -v - y <= -1, -a - u <= -2, -y <= -1, -u <= -1, -a - y <= -2, -a + x <= 0, -b + y <= 0, -a <= -1, -v - x <= -1, -v <= 0, -a - b <= -2, -u - y <= -2, -u - v <= -1, -a - x <= -2, -b <= -1, -b - v <= -1, a*b - u*x - v*y == 0
l22: -v <= 0, -b + y <= 0, -b - u <= -2, -u - y <= -2, -u - x <= -2, -a - y <= -3, -v - y <= -1, b - u <= 0, -a - v <= -1, -a <= -1, -x <= -1, -b - y <= -2, -b - x <= -2, -x - y <= -2, -y <= -1, -u <= -1, -b <= -1, -a - u <= -3, -u - v <= -1, -v - x <= -1, -a - x <= -2, -b - v <= -1, -a - b <= -3, -a + x <= 0, -u + y <= 0, a*b - u*x - v*y == 0
0:47:43:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
0:47:44:alg:Info:removed 58 redundant invs
0:47:44:alg:Info:got 22 invs, 337 inps (test 85): 
l29: -b + x <= 0, -a - b <= -3, b - u <= 0, -y <= -1, a*b - u*x - v*y == 0, -b - v <= -2, -v <= 0, -b + y <= 0, -x <= -1
l17: b - u <= 0, -x <= -1, -v <= 0, a*b - u*x - v*y == 0, -y <= -1, -b + y <= 0
l22: a*b - u*x - v*y == 0, -a - y <= -3, -v <= 0, -x <= -1, -b + y <= 0, b - u <= 0, -y <= -1
0:47:44:alg:Info:*done* prog programs/nla/lcm1.c, invs 22, time 148.50543499 s
0:47:44:alg:Debug:rm -rf /var/tmp/DIG2_PIjx8a
running knuth
0:47:45:alg:Debug:src: /var/tmp/DIG2_Bl5M4g/knuth.c
0:47:45:alg:Info:analyze programs/nla/knuth.c
0:47:45:alg:Info:set seed to: 0.0 (test 11)
0:47:45:miscs:Info:autodeg 3
0:47:45:alg:Info:check reachability
0:47:45:alg:Info:gen eqts at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:47:45:alg:Debug:l24: need more traces (7 eqts, need >= 247)
0:47:46:alg:Debug:obtain 5 new traces
0:47:46:alg:Debug:l24: need more traces (12 eqts, need >= 247)
0:47:46:alg:Debug:obtain 6 new traces
0:47:46:alg:Debug:l24: need more traces (18 eqts, need >= 247)
0:47:46:alg:Debug:obtain 7 new traces
0:47:46:alg:Debug:l24: need more traces (25 eqts, need >= 247)
0:47:46:alg:Debug:obtain 8 new traces
0:47:46:alg:Debug:l24: need more traces (33 eqts, need >= 247)
0:47:47:alg:Debug:obtain 9 new traces
0:47:47:alg:Debug:l24: need more traces (42 eqts, need >= 247)
0:47:47:alg:Debug:obtain 10 new traces
0:47:47:alg:Debug:l24: need more traces (52 eqts, need >= 247)
0:47:47:alg:Debug:obtain 11 new traces
0:47:47:alg:Debug:l24: need more traces (63 eqts, need >= 247)
0:47:47:alg:Debug:obtain 12 new traces
0:47:47:alg:Debug:l24: need more traces (75 eqts, need >= 247)
0:47:48:alg:Debug:obtain 13 new traces
0:47:48:alg:Debug:l24: need more traces (88 eqts, need >= 247)
0:47:48:alg:Debug:obtain 14 new traces
0:47:48:alg:Debug:l24: need more traces (102 eqts, need >= 247)
0:47:48:alg:Debug:obtain 15 new traces
0:47:48:alg:Debug:l24: need more traces (117 eqts, need >= 247)
0:47:49:alg:Debug:obtain 24 new traces
0:47:49:alg:Debug:l24: need more traces (141 eqts, need >= 247)
0:47:49:alg:Debug:obtain 17 new traces
0:47:49:alg:Debug:l24: need more traces (158 eqts, need >= 247)
0:47:50:alg:Debug:obtain 18 new traces
0:47:50:alg:Debug:l24: need more traces (176 eqts, need >= 247)
0:47:50:alg:Debug:obtain 19 new traces
0:47:50:alg:Debug:l24: need more traces (195 eqts, need >= 247)
0:47:51:alg:Debug:obtain 24 new traces
0:47:51:alg:Debug:l24: need more traces (219 eqts, need >= 247)
0:47:51:alg:Debug:obtain 23 new traces
0:47:51:alg:Debug:l24: need more traces (242 eqts, need >= 247)
0:47:51:alg:Debug:obtain 25 new traces
0:47:52:alg:Debug:l24: infer using 247 exprs
0:47:52:miscs:Debug:solve 165 uks using 247 eqts
0:52:56:alg:Debug:l24: 3 candidates:
d^2*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
a*k - d*k - a*t + d*t == 0
k*t - t^2 == 0
0:52:56:alg:Debug:l24: check 3 unchecked (3 candidates)
0:52:56:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:52:56:alg:Debug:l24: no disproved candidates -- break
0:52:56:alg:Debug:l24: got 3 eqts, 0 new inps
0:52:56:alg:Debug:k*t - (t*t) == 0
a*k - d*k - a*t + d*t == 0
(d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:52:56:alg:Info:3 invs:
l24: k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:52:56:alg:Info:gen ieqs at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:52:56:alg:Info:1 locs: check upperbounds for 128 terms
0:52:56:miscs:Debug:workloads 'prove' 20: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14]
0:52:59:alg:Info:1 locs: compute upperbounds for 101 terms
0:52:59:miscs:Debug:workloads 'guesscheck' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6]
0:52:59:alg:Debug:l24: compute ub for 'k + r', start w/ min 8, maxV 10)
0:52:59:alg:Debug:got k + r <= 8
0:52:59:alg:Debug:l24: compute ub for '-k', start w/ min 7, maxV 10)
0:53:0:alg:Debug:got -k <= 7
0:53:0:alg:Debug:l24: compute ub for '-d + n', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got -d + n <= 9
0:53:1:alg:Debug:l24: compute ub for 's + t', start w/ min 8, maxV 10)
0:53:1:alg:Debug:got s + t <= 8
0:53:1:alg:Debug:l24: compute ub for '-q + s', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got -q + s <= 9
0:52:59:alg:Debug:l24: compute ub for '-n + q', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got -n + q <= 0
0:53:0:alg:Debug:l24: compute ub for '-a + n', start w/ min 9, maxV 10)
0:53:0:alg:Debug:got -a + n <= 9
0:53:0:alg:Debug:l24: compute ub for 's - t', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got s - t <= 9
0:53:1:alg:Debug:l24: compute ub for '-d - n', start w/ min -3, maxV 10)
0:53:1:alg:Debug:got -d - n <= -3
0:53:1:alg:Debug:l24: compute ub for 'r', start w/ min 9, maxV 10)
0:53:2:alg:Debug:got r <= 9
0:52:59:alg:Debug:l24: compute ub for '-k + t', start w/ min 7, maxV 10)
0:53:0:alg:Debug:got -k + t <= 7
0:53:0:alg:Debug:l24: compute ub for 'n - t', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got n - t <= 0
0:53:1:alg:Debug:l24: compute ub for 'r - s', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got r - s <= 9
0:53:1:alg:Debug:l24: compute ub for 'k - t', start w/ min 9, maxV 10)
0:53:2:alg:Debug:got k - t <= 9
0:53:2:alg:Debug:l24: compute ub for 'k + q', start w/ min 9, maxV 10)
0:53:2:alg:Debug:got k + q <= 9
0:52:59:alg:Debug:l24: compute ub for '-a + s', start w/ min 7, maxV 10)
0:52:59:alg:Debug:got -a + s <= 7
0:53:0:alg:Debug:l24: compute ub for '-a - d', start w/ min -6, maxV 10)
0:53:0:alg:Debug:got -a - d <= -6
0:53:0:alg:Debug:l24: compute ub for 'k + s', start w/ min 8, maxV 10)
0:53:1:alg:Debug:got k + s <= 8
0:53:1:alg:Debug:l24: compute ub for '-d + t', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -d + t <= -3
0:53:2:alg:Debug:l24: compute ub for '-q + r', start w/ min 9, maxV 10)
0:53:2:alg:Debug:got -q + r <= 9
0:52:59:alg:Debug:l24: compute ub for '-q + t', start w/ min 8, maxV 10)
0:52:59:alg:Debug:got -q + t <= 8
0:53:0:alg:Debug:l24: compute ub for '-d + r', start w/ min -1, maxV 10)
0:53:0:alg:Debug:got -d + r <= -1
0:53:1:alg:Debug:l24: compute ub for '-r + t', start w/ min 4, maxV 10)
0:53:1:alg:Debug:got -r + t <= 4
0:53:1:alg:Debug:l24: compute ub for 'n - s', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got n - s <= 9
0:53:1:alg:Debug:l24: compute ub for '-q', start w/ min 4, maxV 10)
0:53:3:alg:Debug:got -q <= 4
0:52:59:alg:Debug:l24: compute ub for '-k + r', start w/ min 8, maxV 10)
0:53:0:alg:Debug:got -k + r <= 8
0:53:0:alg:Debug:l24: compute ub for 'n', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got n <= 0
0:53:0:alg:Debug:l24: compute ub for '-s', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got -s <= 0
0:53:1:alg:Debug:l24: compute ub for '-n - t', start w/ min 0, maxV 10)
0:53:2:alg:Debug:got -n - t <= 0
0:53:2:alg:Debug:l24: compute ub for 'r + s', start w/ min 9, maxV 10)
0:53:2:alg:Debug:got r + s <= 9
0:53:2:alg:Debug:l24: compute ub for 'k + t', start w/ min 9, maxV 10)
0:53:3:alg:Debug:got k + t <= 9
0:52:59:alg:Debug:l24: compute ub for '-n + s', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got -n + s <= 0
0:53:0:alg:Debug:l24: compute ub for 'n + r', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got n + r <= 0
0:53:1:alg:Debug:l24: compute ub for 'k - s', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got k - s <= 9
0:53:1:alg:Debug:l24: compute ub for '-a - s', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -a - s <= -3
0:53:2:alg:Debug:l24: compute ub for '-a + q', start w/ min 8, maxV 10)
0:53:3:alg:Debug:got -a + q <= 8
0:52:59:alg:Debug:l24: compute ub for '-d + s', start w/ min 8, maxV 10)
0:52:59:alg:Debug:got -d + s <= 8
0:52:59:alg:Debug:l24: compute ub for 'n + t', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got n + t <= 0
0:53:0:alg:Debug:l24: compute ub for '-n + t', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got -n + t <= 0
0:53:1:alg:Debug:l24: compute ub for '-d - s', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -d - s <= -3
0:53:2:alg:Debug:l24: compute ub for 'n - q', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got n - q <= 0
0:52:59:alg:Debug:l24: compute ub for 'q + r', start w/ min 9, maxV 10)
0:52:59:alg:Debug:got q + r <= 9
0:52:59:alg:Debug:l24: compute ub for '-d - t', start w/ min -3, maxV 10)
0:53:0:alg:Debug:got -d - t <= -3
0:53:0:alg:Debug:l24: compute ub for 'a - d', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got a - d <= 0
0:53:1:alg:Debug:l24: compute ub for '-r - t', start w/ min 2, maxV 10)
0:53:2:alg:Debug:got -r - t <= 2
0:53:2:alg:Debug:l24: compute ub for '-q - s', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got -q - s <= 0
0:52:59:alg:Debug:l24: compute ub for '-n', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got -n <= 0
0:53:0:alg:Debug:l24: compute ub for '-n - r', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got -n - r <= 0
0:53:1:alg:Debug:l24: compute ub for 't', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got t <= 9
0:53:1:alg:Debug:l24: compute ub for 'q', start w/ min 8, maxV 10)
0:53:2:alg:Debug:got q <= 8
0:53:2:alg:Debug:l24: compute ub for '-k + q', start w/ min 7, maxV 10)
0:53:3:alg:Debug:got -k + q <= 7
0:52:59:alg:Debug:l24: compute ub for '-n - s', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got -n - s <= 0
0:53:0:alg:Debug:l24: compute ub for '-d - r', start w/ min -2, maxV 10)
0:53:1:alg:Debug:got -d - r <= -2
0:53:1:alg:Debug:l24: compute ub for '-d', start w/ min -3, maxV 10)
0:53:1:alg:Debug:got -d <= -3
0:53:1:alg:Debug:l24: compute ub for 'q + t', start w/ min 8, maxV 10)
0:53:2:alg:Debug:got q + t <= 8
0:53:2:alg:Debug:l24: compute ub for '-s + t', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got -s + t <= 0
0:52:59:alg:Debug:l24: compute ub for '-a + t', start w/ min 1, maxV 10)
0:53:0:alg:Debug:got -a + t <= 1
0:53:0:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
0:53:1:alg:Debug:got -a - r <= -2
0:53:1:alg:Debug:l24: compute ub for '-a', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -a <= -3
0:53:2:alg:Debug:l24: compute ub for '-d + q', start w/ min 8, maxV 10)
0:53:2:alg:Debug:got -d + q <= 8
0:53:2:alg:Debug:l24: compute ub for 'q - t', start w/ min 8, maxV 10)
0:53:3:alg:Debug:got q - t <= 8
0:52:59:alg:Debug:l24: compute ub for '-a - n', start w/ min -3, maxV 10)
0:53:0:alg:Debug:got -a - n <= -3
0:53:0:alg:Debug:l24: compute ub for 'n + q', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got n + q <= 0
0:53:1:alg:Debug:l24: compute ub for '-r + s', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got -r + s <= 9
0:53:1:alg:Debug:l24: compute ub for '-q - r', start w/ min 6, maxV 10)
0:53:2:alg:Debug:got -q - r <= 6
0:53:2:alg:Debug:l24: compute ub for '-q - t', start w/ min 4, maxV 10)
0:53:3:alg:Debug:got -q - t <= 4
0:52:59:alg:Debug:l24: compute ub for '-k + n', start w/ min 0, maxV 10)
0:53:0:alg:Debug:got -k + n <= 0
0:53:0:alg:Debug:l24: compute ub for 'r - t', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got r - t <= 9
0:53:1:alg:Debug:l24: compute ub for '-k - n', start w/ min 0, maxV 10)
0:53:2:alg:Debug:got -k - n <= 0
0:53:2:alg:Debug:l24: compute ub for 'k', start w/ min 9, maxV 10)
0:53:3:alg:Debug:got k <= 9
0:53:3:alg:Debug:l24: compute ub for 's', start w/ min 7, maxV 10)
0:53:3:alg:Debug:got s <= 7
0:52:59:alg:Debug:l24: compute ub for '-d - k', start w/ min -3, maxV 10)
0:53:0:alg:Debug:got -d - k <= -3
0:53:0:alg:Debug:l24: compute ub for '-r', start w/ min 2, maxV 10)
0:53:1:alg:Debug:got -r <= 2
0:53:1:alg:Debug:l24: compute ub for 'k - q', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got k - q <= 9
0:53:1:alg:Debug:l24: compute ub for 'q - s', start w/ min 4, maxV 10)
0:53:2:alg:Debug:got q - s <= 4
0:53:2:alg:Debug:l24: compute ub for '-k - t', start w/ min 7, maxV 10)
0:53:3:alg:Debug:got -k - t <= 7
0:52:59:alg:Debug:l24: compute ub for '-a - k', start w/ min -3, maxV 10)
0:53:0:alg:Debug:got -a - k <= -3
0:53:0:alg:Debug:l24: compute ub for 'q - r', start w/ min 7, maxV 10)
0:53:1:alg:Debug:got q - r <= 7
0:53:1:alg:Debug:l24: compute ub for '-r - s', start w/ min 0, maxV 10)
0:53:2:alg:Debug:got -r - s <= 0
0:53:2:alg:Debug:l24: compute ub for '-k + s', start w/ min 9, maxV 10)
0:53:3:alg:Debug:got -k + s <= 9
0:53:3:alg:Debug:l24: compute ub for 'q + s', start w/ min 7, maxV 10)
0:53:3:alg:Debug:got q + s <= 7
0:52:59:alg:Debug:l24: compute ub for '-a + d', start w/ min 8, maxV 10)
0:52:59:alg:Debug:got -a + d <= 8
0:52:59:alg:Debug:l24: compute ub for 'k - n', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got k - n <= 0
0:53:1:alg:Debug:l24: compute ub for 'r + t', start w/ min 9, maxV 10)
0:53:1:alg:Debug:got r + t <= 9
0:53:1:alg:Debug:l24: compute ub for 'k + n', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got k + n <= 0
0:53:3:alg:Debug:l24: compute ub for '-s - t', start w/ min 0, maxV 10)
0:53:4:alg:Debug:got -s - t <= 0
0:52:59:alg:Debug:l24: compute ub for '-a + k', start w/ min 1, maxV 10)
0:53:1:alg:Debug:got -a + k <= 1
0:53:1:alg:Debug:l24: compute ub for '-d - q', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -d - q <= -3
0:53:2:alg:Debug:l24: compute ub for '-a + r', start w/ min 3, maxV 10)
0:53:3:alg:Debug:got -a + r <= 3
0:53:3:alg:Debug:l24: compute ub for '-a - t', start w/ min -3, maxV 10)
0:53:3:alg:Debug:got -a - t <= -3
0:53:3:alg:Debug:l24: compute ub for '-k - r', start w/ min 9, maxV 10)
0:53:4:alg:Debug:got -k - r <= 9
0:52:59:alg:Debug:l24: compute ub for '-a - q', start w/ min -3, maxV 10)
0:53:0:alg:Debug:got -a - q <= -3
0:53:1:alg:Debug:l24: compute ub for 'n - r', start w/ min 0, maxV 10)
0:53:2:alg:Debug:got n - r <= 0
0:53:2:alg:Debug:l24: compute ub for '-k - s', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got -k - s <= 0
0:53:3:alg:Debug:l24: compute ub for 'n + s', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got n + s <= 0
0:53:3:alg:Debug:l24: compute ub for 'k - r', start w/ min 8, maxV 10)
0:53:4:alg:Debug:got k - r <= 8
0:52:59:alg:Debug:l24: compute ub for '-k - q', start w/ min 0, maxV 10)
0:53:1:alg:Debug:got -k - q <= 0
0:53:1:alg:Debug:l24: compute ub for '-d + k', start w/ min -3, maxV 10)
0:53:2:alg:Debug:got -d + k <= -3
0:53:2:alg:Debug:l24: compute ub for '-t', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got -t <= 0
0:53:3:alg:Debug:l24: compute ub for '-n + r', start w/ min 0, maxV 10)
0:53:3:alg:Debug:got -n + r <= 0
0:53:3:alg:Debug:l24: compute ub for '-n - q', start w/ min 0, maxV 10)
0:53:4:alg:Debug:got -n - q <= 0
0:53:4:alg:Info:104 invs:
l24: n <= 0, -k + r <= 8, -n - t <= 0, -s <= 0, r + s <= 9, k + t <= 9, -n + s <= 0, n + r <= 0, k - s <= 9, -a - s <= -3, -a + q <= 8, -d + s <= 8, n + t <= 0, -n + t <= 0, -d - s <= -3, n - q <= 0, q + r <= 9, -d - t <= -3, a - d <= 0, -r - t <= 2, -q - s <= 0, -n <= 0, -n - r <= 0, t <= 9, q <= 8, -k + q <= 7, -n - s <= 0, -d - r <= -2, -d <= -3, q + t <= 8, -s + t <= 0, -a + t <= 1, -a - r <= -2, -a <= -3, -d + q <= 8, q - t <= 8, -a - n <= -3, n + q <= 0, -r + s <= 9, -q - r <= 6, -q - t <= 4, -k + n <= 0, r - t <= 9, -k - n <= 0, k <= 9, s <= 7, -d - k <= -3, -r <= 2, k - q <= 9, q - s <= 4, -k - t <= 7, -a - k <= -3, q - r <= 7, -r - s <= 0, -k + s <= 9, q + s <= 7, -a + d <= 8, k - n <= 0, r + t <= 9, k + n <= 0, -s - t <= 0, -a + k <= 1, -d - q <= -3, -a + r <= 3, -a - t <= -3, -k - r <= 9, -a - q <= -3, n - r <= 0, -k - s <= 0, n + s <= 0, k - r <= 8, -k - q <= 0, -d + k <= -3, -t <= 0, -n + r <= 0, -n - q <= 0, s + t <= 8, -d + n <= 9, -k <= 7, k + r <= 8, k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, -d - n <= -3, -a + s <= 7, -q + t <= 8, -r + t <= 4, -d + r <= -1, n - t <= 0, -d + t <= -3, r <= 9, n - s <= 9, k - t <= 9, -a - d <= -6, r - s <= 9, -q + r <= 9, -k + t <= 7, -q <= 4, k + q <= 9, k + s <= 8, s - t <= 9, -n + q <= 0, -q + s <= 9, -a + n <= 9
0:53:4:alg:Info:test 104 invs on all 272 traces
0:53:4:ds:Warn:l24: k - t <= 9 disproved
0:53:4:ds:Warn:l24: -d - n <= -3 disproved
0:53:4:ds:Warn:l24: -k <= 7 disproved
0:53:4:ds:Warn:l24: s + t <= 8 disproved
0:53:4:ds:Warn:l24: -r + s <= 9 disproved
0:53:4:ds:Warn:l24: k + r <= 8 disproved
0:53:4:ds:Warn:l24: -k - r <= 9 disproved
0:53:4:ds:Warn:l24: -k + t <= 7 disproved
0:53:4:ds:Warn:l24: -d + n <= 9 disproved
0:53:4:ds:Warn:l24: -a + k <= 1 disproved
0:53:4:ds:Warn:l24: -s - t <= 0 disproved
0:53:4:ds:Warn:l24: n + r <= 0 disproved
0:53:4:ds:Warn:l24: n + q <= 0 disproved
0:53:4:ds:Warn:l24: r - s <= 9 disproved
0:53:5:ds:Warn:l24: -a + r <= 3 disproved
0:53:5:ds:Warn:l24: -a - q <= -3 disproved
0:53:5:ds:Warn:l24: k - s <= 9 disproved
0:53:5:ds:Warn:l24: n - s <= 9 disproved
0:53:5:ds:Warn:l24: -a + q <= 8 disproved
0:53:5:ds:Warn:l24: n - t <= 0 disproved
0:53:5:ds:Warn:l24: k - n <= 0 disproved
0:53:5:ds:Warn:l24: n - q <= 0 disproved
0:53:5:ds:Warn:l24: -q + t <= 8 disproved
0:53:5:ds:Warn:l24: -d + t <= -3 disproved
0:53:5:ds:Warn:l24: -q - r <= 6 disproved
0:53:5:ds:Warn:l24: -q <= 4 disproved
0:53:5:ds:Warn:l24: -k + s <= 9 disproved
0:53:5:ds:Warn:l24: q + r <= 9 disproved
0:53:5:ds:Warn:l24: -a + d <= 8 disproved
0:53:5:ds:Warn:l24: r + t <= 9 disproved
0:53:5:ds:Warn:l24: k + q <= 9 disproved
0:53:5:ds:Warn:l24: -r - t <= 2 disproved
0:53:5:ds:Warn:l24: q + s <= 7 disproved
0:53:5:ds:Warn:l24: -q - s <= 0 disproved
0:53:5:ds:Warn:l24: -k - q <= 0 disproved
0:53:5:ds:Warn:l24: n - r <= 0 disproved
0:53:5:ds:Warn:l24: k + n <= 0 disproved
0:53:5:ds:Warn:l24: n + t <= 0 disproved
0:53:5:ds:Warn:l24: -d - s <= -3 disproved
0:53:5:ds:Warn:l24: -d + s <= 8 disproved
0:53:5:ds:Warn:l24: -n <= 0 disproved
0:53:5:ds:Warn:l24: -n - r <= 0 disproved
0:53:5:ds:Warn:l24: t <= 9 disproved
0:53:5:ds:Warn:l24: -n + t <= 0 disproved
0:53:5:ds:Warn:l24: -k + n <= 0 disproved
0:53:5:ds:Warn:l24: -r + t <= 4 disproved
0:53:5:ds:Warn:l24: q <= 8 disproved
0:53:5:ds:Warn:l24: -a + s <= 7 disproved
0:53:5:ds:Warn:l24: -k + q <= 7 disproved
0:53:5:ds:Warn:l24: -a - s <= -3 disproved
0:53:5:ds:Warn:l24: q - s <= 4 disproved
0:53:5:ds:Warn:l24: -q + s <= 9 disproved
0:53:5:ds:Warn:l24: k - q <= 9 disproved
0:53:5:ds:Warn:l24: -d + k <= -3 disproved
0:53:5:ds:Warn:l24: r - t <= 9 disproved
0:53:5:ds:Warn:l24: -r <= 2 disproved
0:53:5:ds:Warn:l24: -d + r <= -1 disproved
0:53:5:ds:Warn:l24: -q + r <= 9 disproved
0:53:5:ds:Warn:l24: -r - s <= 0 disproved
0:53:5:ds:Warn:l24: q - r <= 7 disproved
0:53:5:ds:Warn:l24: q + t <= 8 disproved
0:53:5:ds:Warn:l24: -n - q <= 0 disproved
0:53:5:ds:Warn:l24: k <= 9 disproved
0:53:5:ds:Warn:l24: -k - n <= 0 disproved
0:53:5:ds:Warn:l24: -n - t <= 0 disproved
0:53:5:ds:Warn:l24: -k + r <= 8 disproved
0:53:5:ds:Warn:l24: -q - t <= 4 disproved
0:53:5:ds:Warn:l24: k + s <= 8 disproved
0:53:5:ds:Warn:l24: n + s <= 0 disproved
0:53:5:ds:Warn:l24: s <= 7 disproved
0:53:5:ds:Warn:l24: -n - s <= 0 disproved
0:53:5:ds:Warn:l24: -k - s <= 0 disproved
0:53:5:ds:Warn:l24: -s + t <= 0 disproved
0:53:5:ds:Warn:l24: -d - q <= -3 disproved
0:53:5:ds:Warn:l24: -a + t <= 1 disproved
0:53:5:ds:Warn:l24: -d + q <= 8 disproved
0:53:5:ds:Warn:l24: -n + q <= 0 disproved
0:53:5:ds:Warn:l24: -a - n <= -3 disproved
0:53:5:ds:Warn:l24: -n + r <= 0 disproved
0:53:5:ds:Warn:l24: -a + n <= 9 disproved
0:53:5:ds:Warn:l24: q - t <= 8 disproved
0:53:5:ds:Warn:l24: -s <= 0 disproved
0:53:5:ds:Warn:l24: s - t <= 9 disproved
0:53:5:ds:Warn:l24: n <= 0 disproved
0:53:5:ds:Warn:l24: -k - t <= 7 disproved
0:53:5:ds:Warn:l24: r <= 9 disproved
0:53:5:ds:Warn:l24: k - r <= 8 disproved
0:53:5:ds:Warn:l24: r + s <= 9 disproved
0:53:5:ds:Warn:l24: k + t <= 9 disproved
0:53:5:alg:Info:find uniq invs
0:53:5:alg:Info:15 invs:
l24: -n + s <= 0, -d - t <= -3, a - d <= 0, -d - r <= -2, -d <= -3, -a - r <= -2, -a <= -3, -d - k <= -3, -a - k <= -3, -a - t <= -3, -t <= 0, k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, -a - d <= -6
0:53:7:alg:Info:removed 6 redundant invs
0:53:7:alg:Info:got 9 invs, 252 inps (test 51): 
l24: -t <= 0, k*t - (t*t) == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, -a <= -3, -a - r <= -2, a*k - d*k - a*t + d*t == 0, a - d <= 0, -n + s <= 0, -d - k <= -3
0:53:7:alg:Info:*done* prog programs/nla/knuth.c, invs 9, time 321.251457214 s
0:53:7:alg:Debug:rm -rf /var/tmp/DIG2_Bl5M4g
0:53:8:alg:Debug:src: /var/tmp/DIG2_BJhFLQ/knuth.c
0:53:8:alg:Info:analyze programs/nla/knuth.c
0:53:8:alg:Info:set seed to: 1.0 (test 83)
0:53:8:miscs:Info:autodeg 3
0:53:8:alg:Info:check reachability
0:53:8:alg:Info:gen eqts at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:53:8:alg:Debug:l24: need more traces (6 eqts, need >= 247)
0:53:8:alg:Debug:obtain 5 new traces
0:53:8:alg:Debug:l24: need more traces (11 eqts, need >= 247)
0:53:8:alg:Debug:obtain 6 new traces
0:53:8:alg:Debug:l24: need more traces (17 eqts, need >= 247)
0:53:8:alg:Debug:obtain 7 new traces
0:53:8:alg:Debug:l24: need more traces (24 eqts, need >= 247)
0:53:9:alg:Debug:obtain 8 new traces
0:53:9:alg:Debug:l24: need more traces (32 eqts, need >= 247)
0:53:9:alg:Debug:obtain 9 new traces
0:53:9:alg:Debug:l24: need more traces (41 eqts, need >= 247)
0:53:9:alg:Debug:obtain 10 new traces
0:53:9:alg:Debug:l24: need more traces (51 eqts, need >= 247)
0:53:9:alg:Debug:obtain 11 new traces
0:53:9:alg:Debug:l24: need more traces (62 eqts, need >= 247)
0:53:10:alg:Debug:obtain 12 new traces
0:53:10:alg:Debug:l24: need more traces (74 eqts, need >= 247)
0:53:10:alg:Debug:obtain 13 new traces
0:53:10:alg:Debug:l24: need more traces (87 eqts, need >= 247)
0:53:10:alg:Debug:obtain 14 new traces
0:53:10:alg:Debug:l24: need more traces (101 eqts, need >= 247)
0:53:11:alg:Debug:obtain 15 new traces
0:53:11:alg:Debug:l24: need more traces (116 eqts, need >= 247)
0:53:11:alg:Debug:obtain 16 new traces
0:53:11:alg:Debug:l24: need more traces (132 eqts, need >= 247)
0:53:11:alg:Debug:obtain 26 new traces
0:53:11:alg:Debug:l24: need more traces (158 eqts, need >= 247)
0:53:12:alg:Debug:obtain 18 new traces
0:53:12:alg:Debug:l24: need more traces (176 eqts, need >= 247)
0:53:12:alg:Debug:obtain 19 new traces
0:53:12:alg:Debug:l24: need more traces (195 eqts, need >= 247)
0:53:13:alg:Debug:obtain 24 new traces
0:53:13:alg:Debug:l24: need more traces (219 eqts, need >= 247)
0:53:13:alg:Debug:obtain 23 new traces
0:53:13:alg:Debug:l24: need more traces (242 eqts, need >= 247)
0:53:13:alg:Debug:obtain 22 new traces
0:53:13:alg:Debug:l24: infer using 247 exprs
0:53:13:miscs:Debug:solve 165 uks using 247 eqts
0:54:13:alg:Debug:l24: 3 candidates:
d^2*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
a*k - d*k - a*t + d*t == 0
k*t - t^2 == 0
0:54:13:alg:Debug:l24: check 3 unchecked (3 candidates)
0:54:13:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:54:14:alg:Debug:l24: no disproved candidates -- break
0:54:14:alg:Debug:l24: got 3 eqts, 0 new inps
0:54:14:alg:Debug:a*k - d*k - a*t + d*t == 0
(d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
k*t - (t*t) == 0
0:54:14:alg:Info:3 invs:
l24: k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:54:14:alg:Info:gen ieqs at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:54:14:alg:Info:1 locs: check upperbounds for 128 terms
0:54:14:miscs:Debug:workloads 'prove' 20: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14]
0:54:16:alg:Info:1 locs: compute upperbounds for 101 terms
0:54:16:miscs:Debug:workloads 'guesscheck' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6]
0:54:17:alg:Debug:l24: compute ub for '-a + s', start w/ min 7, maxV 10)
0:54:17:alg:Debug:got -a + s <= 7
0:54:17:alg:Debug:l24: compute ub for '-a - d', start w/ min -6, maxV 10)
0:54:18:alg:Debug:got -a - d <= -6
0:54:18:alg:Debug:l24: compute ub for 'k + s', start w/ min 9, maxV 10)
0:54:18:alg:Debug:got k + s <= 9
0:54:18:alg:Debug:l24: compute ub for 'n + s', start w/ min 6, maxV 10)
0:54:19:alg:Debug:got n + s <= 6
0:54:19:alg:Debug:l24: compute ub for '-q + r', start w/ min 9, maxV 10)
0:54:19:alg:Debug:got -q + r <= 9
0:54:17:alg:Debug:l24: compute ub for '-a + r', start w/ min 1, maxV 10)
0:54:17:alg:Debug:got -a + r <= 1
0:54:18:alg:Debug:l24: compute ub for '-k - r', start w/ min 9, maxV 10)
0:54:18:alg:Debug:got -k - r <= 9
0:54:18:alg:Debug:l24: compute ub for '-n + s', start w/ min 0, maxV 10)
0:54:19:alg:Debug:got -n + s <= 0
0:54:19:alg:Debug:l24: compute ub for '-k + s', start w/ min 9, maxV 10)
0:54:19:alg:Debug:got -k + s <= 9
0:54:19:alg:Debug:l24: compute ub for 'a - d', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got a - d <= 0
0:54:17:alg:Debug:l24: compute ub for '-q', start w/ min 4, maxV 10)
0:54:18:alg:Debug:got -q <= 4
0:54:18:alg:Debug:l24: compute ub for 'q + r', start w/ min 9, maxV 10)
0:54:18:alg:Debug:got q + r <= 9
0:54:18:alg:Debug:l24: compute ub for 'k - s', start w/ min 9, maxV 10)
0:54:19:alg:Debug:got k - s <= 9
0:54:19:alg:Debug:l24: compute ub for '-a + d', start w/ min 8, maxV 10)
0:54:19:alg:Debug:got -a + d <= 8
0:54:19:alg:Debug:l24: compute ub for '-a - s', start w/ min -3, maxV 10)
0:54:20:alg:Debug:got -a - s <= -3
0:54:17:alg:Debug:l24: compute ub for '-a - t', start w/ min -3, maxV 10)
0:54:17:alg:Debug:got -a - t <= -3
0:54:17:alg:Debug:l24: compute ub for 'r', start w/ min 9, maxV 10)
0:54:18:alg:Debug:got r <= 9
0:54:18:alg:Debug:l24: compute ub for 'k - r', start w/ min 8, maxV 10)
0:54:18:alg:Debug:got k - r <= 8
0:54:18:alg:Debug:l24: compute ub for 'n', start w/ min 4, maxV 10)
0:54:19:alg:Debug:got n <= 4
0:54:19:alg:Debug:l24: compute ub for '-s', start w/ min 0, maxV 10)
0:54:19:alg:Debug:got -s <= 0
0:54:20:alg:Debug:l24: compute ub for 'r + s', start w/ min 9, maxV 10)
0:54:20:alg:Debug:got r + s <= 9
0:54:17:alg:Debug:l24: compute ub for '-r + s', start w/ min 9, maxV 10)
0:54:17:alg:Debug:got -r + s <= 9
0:54:17:alg:Debug:l24: compute ub for 'k + r', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got k + r <= 8
0:54:17:alg:Debug:l24: compute ub for '-k', start w/ min 7, maxV 10)
0:54:18:alg:Debug:got -k <= 7
0:54:18:alg:Debug:l24: compute ub for '-d + n', start w/ min 6, maxV 10)
0:54:19:alg:Debug:got -d + n <= 6
0:54:19:alg:Debug:l24: compute ub for 'q - s', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got q - s <= 0
0:54:17:alg:Debug:l24: compute ub for 'r - t', start w/ min 9, maxV 10)
0:54:17:alg:Debug:got r - t <= 9
0:54:17:alg:Debug:l24: compute ub for '-d - k', start w/ min -3, maxV 10)
0:54:18:alg:Debug:got -d - k <= -3
0:54:18:alg:Debug:l24: compute ub for '-r', start w/ min 2, maxV 10)
0:54:19:alg:Debug:got -r <= 2
0:54:19:alg:Debug:l24: compute ub for 'k - q', start w/ min 8, maxV 10)
0:54:20:alg:Debug:got k - q <= 8
0:54:20:alg:Debug:l24: compute ub for '-q + s', start w/ min 9, maxV 10)
0:54:20:alg:Debug:got -q + s <= 9
0:54:17:alg:Debug:l24: compute ub for '-n - r', start w/ min 0, maxV 10)
0:54:18:alg:Debug:got -n - r <= 0
0:54:18:alg:Debug:l24: compute ub for 't', start w/ min 1, maxV 10)
0:54:18:alg:Debug:got t <= 1
0:54:18:alg:Debug:l24: compute ub for 'r + t', start w/ min 9, maxV 10)
0:54:19:alg:Debug:got r + t <= 9
0:54:19:alg:Debug:l24: compute ub for 'q', start w/ min 8, maxV 10)
0:54:19:alg:Debug:got q <= 8
0:54:19:alg:Debug:l24: compute ub for '-k + q', start w/ min 8, maxV 10)
0:54:20:alg:Debug:got -k + q <= 8
0:54:17:alg:Debug:l24: compute ub for '-d + s', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got -d + s <= 8
0:54:17:alg:Debug:l24: compute ub for '-a + t', start w/ min 1, maxV 10)
0:54:18:alg:Debug:got -a + t <= 1
0:54:18:alg:Debug:l24: compute ub for '-d - s', start w/ min -3, maxV 10)
0:54:18:alg:Debug:got -d - s <= -3
0:54:18:alg:Debug:l24: compute ub for 'n - q', start w/ min 4, maxV 10)
0:54:20:alg:Debug:got n - q <= 4
0:54:20:alg:Debug:l24: compute ub for '-n', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got -n <= 0
0:54:17:alg:Debug:l24: compute ub for '-q + t', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got -q + t <= 8
0:54:17:alg:Debug:l24: compute ub for 'k - t', start w/ min 9, maxV 10)
0:54:18:alg:Debug:got k - t <= 9
0:54:18:alg:Debug:l24: compute ub for '-a - n', start w/ min -3, maxV 10)
0:54:19:alg:Debug:got -a - n <= -3
0:54:19:alg:Debug:l24: compute ub for 'n + q', start w/ min 4, maxV 10)
0:54:20:alg:Debug:got n + q <= 4
0:54:20:alg:Debug:l24: compute ub for '-d - t', start w/ min -3, maxV 10)
0:54:20:alg:Debug:got -d - t <= -3
0:54:17:alg:Debug:l24: compute ub for '-n + q', start w/ min 0, maxV 10)
0:54:18:alg:Debug:got -n + q <= 0
0:54:18:alg:Debug:l24: compute ub for '-a + n', start w/ min 6, maxV 10)
0:54:18:alg:Debug:got -a + n <= 6
0:54:18:alg:Debug:l24: compute ub for 'k + t', start w/ min 9, maxV 10)
0:54:19:alg:Debug:got k + t <= 9
0:54:19:alg:Debug:l24: compute ub for 'q + t', start w/ min 8, maxV 10)
0:54:20:alg:Debug:got q + t <= 8
0:54:20:alg:Debug:l24: compute ub for '-d - n', start w/ min -3, maxV 10)
0:54:20:alg:Debug:got -d - n <= -3
0:54:17:alg:Debug:l24: compute ub for 'n + r', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got n + r <= 8
0:54:17:alg:Debug:l24: compute ub for '-a + q', start w/ min 3, maxV 10)
0:54:18:alg:Debug:got -a + q <= 3
0:54:18:alg:Debug:l24: compute ub for '-s - t', start w/ min 0, maxV 10)
0:54:19:alg:Debug:got -s - t <= 0
0:54:19:alg:Debug:l24: compute ub for 'k - n', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got k - n <= 0
0:54:20:alg:Debug:l24: compute ub for 's - t', start w/ min 9, maxV 10)
0:54:21:alg:Debug:got s - t <= 9
0:54:17:alg:Debug:l24: compute ub for 'k + n', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got k + n <= 8
0:54:18:alg:Debug:l24: compute ub for '-n - t', start w/ min 0, maxV 10)
0:54:18:alg:Debug:got -n - t <= 0
0:54:18:alg:Debug:l24: compute ub for '-k - t', start w/ min 7, maxV 10)
0:54:19:alg:Debug:got -k - t <= 7
0:54:19:alg:Debug:l24: compute ub for 'q - t', start w/ min 8, maxV 10)
0:54:20:alg:Debug:got q - t <= 8
0:54:20:alg:Debug:l24: compute ub for '-d + r', start w/ min -1, maxV 10)
0:54:21:alg:Debug:got -d + r <= -1
0:54:17:alg:Debug:l24: compute ub for '-q - t', start w/ min 4, maxV 10)
0:54:18:alg:Debug:got -q - t <= 4
0:54:18:alg:Debug:l24: compute ub for '-d - r', start w/ min -2, maxV 10)
0:54:19:alg:Debug:got -d - r <= -2
0:54:19:alg:Debug:l24: compute ub for '-d', start w/ min -3, maxV 10)
0:54:19:alg:Debug:got -d <= -3
0:54:20:alg:Debug:l24: compute ub for '-k + t', start w/ min 7, maxV 10)
0:54:20:alg:Debug:got -k + t <= 7
0:54:20:alg:Debug:l24: compute ub for 'n - t', start w/ min 4, maxV 10)
0:54:21:alg:Debug:got n - t <= 4
0:54:17:alg:Debug:l24: compute ub for 'n - s', start w/ min 2, maxV 10)
0:54:17:alg:Debug:got n - s <= 2
0:54:17:alg:Debug:l24: compute ub for '-q - s', start w/ min 0, maxV 10)
0:54:18:alg:Debug:got -q - s <= 0
0:54:18:alg:Debug:l24: compute ub for 'k + q', start w/ min 8, maxV 10)
0:54:19:alg:Debug:got k + q <= 8
0:54:19:alg:Debug:l24: compute ub for '-d + k', start w/ min -3, maxV 10)
0:54:20:alg:Debug:got -d + k <= -3
0:54:20:alg:Debug:l24: compute ub for '-r - t', start w/ min 2, maxV 10)
0:54:21:alg:Debug:got -r - t <= 2
0:54:17:alg:Debug:l24: compute ub for 'q - r', start w/ min 5, maxV 10)
0:54:18:alg:Debug:got q - r <= 5
0:54:18:alg:Debug:l24: compute ub for '-r - s', start w/ min 0, maxV 10)
0:54:19:alg:Debug:got -r - s <= 0
0:54:19:alg:Debug:l24: compute ub for 'n + t', start w/ min 4, maxV 10)
0:54:20:alg:Debug:got n + t <= 4
0:54:20:alg:Debug:l24: compute ub for 'q + s', start w/ min 7, maxV 10)
0:54:20:alg:Debug:got q + s <= 7
0:54:20:alg:Debug:l24: compute ub for '-d + t', start w/ min -3, maxV 10)
0:54:21:alg:Debug:got -d + t <= -3
0:54:17:alg:Debug:l24: compute ub for '-k + r', start w/ min 8, maxV 10)
0:54:17:alg:Debug:got -k + r <= 8
0:54:17:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
0:54:18:alg:Debug:got -a - r <= -2
0:54:18:alg:Debug:l24: compute ub for '-a', start w/ min -3, maxV 10)
0:54:19:alg:Debug:got -a <= -3
0:54:19:alg:Debug:l24: compute ub for '-d + q', start w/ min 3, maxV 10)
0:54:20:alg:Debug:got -d + q <= 3
0:54:20:alg:Debug:l24: compute ub for '-a - k', start w/ min -3, maxV 10)
0:54:21:alg:Debug:got -a - k <= -3
0:54:17:alg:Debug:l24: compute ub for '-k + n', start w/ min 0, maxV 10)
0:54:18:alg:Debug:got -k + n <= 0
0:54:18:alg:Debug:l24: compute ub for 's + t', start w/ min 7, maxV 10)
0:54:19:alg:Debug:got s + t <= 7
0:54:19:alg:Debug:l24: compute ub for '-k - n', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got -k - n <= 0
0:54:20:alg:Debug:l24: compute ub for 'k', start w/ min 9, maxV 10)
0:54:20:alg:Debug:got k <= 9
0:54:20:alg:Debug:l24: compute ub for '-s + t', start w/ min 0, maxV 10)
0:54:21:alg:Debug:got -s + t <= 0
0:54:17:alg:Debug:l24: compute ub for '-n + t', start w/ min 0, maxV 10)
0:54:17:alg:Debug:got -n + t <= 0
0:54:17:alg:Debug:l24: compute ub for 'r - s', start w/ min 9, maxV 10)
0:54:17:alg:Debug:got r - s <= 9
0:54:18:alg:Debug:l24: compute ub for '-q - r', start w/ min 6, maxV 10)
0:54:19:alg:Debug:got -q - r <= 6
0:54:19:alg:Debug:l24: compute ub for '-a + k', start w/ min 1, maxV 10)
0:54:20:alg:Debug:got -a + k <= 1
0:54:20:alg:Debug:l24: compute ub for '-d - q', start w/ min -3, maxV 10)
0:54:21:alg:Debug:got -d - q <= -3
0:54:17:alg:Debug:l24: compute ub for 's', start w/ min 7, maxV 10)
0:54:17:alg:Debug:got s <= 7
0:54:17:alg:Debug:l24: compute ub for '-a - q', start w/ min -3, maxV 10)
0:54:19:alg:Debug:got -a - q <= -3
0:54:19:alg:Debug:l24: compute ub for 'n - r', start w/ min 0, maxV 10)
0:54:20:alg:Debug:got n - r <= 0
0:54:20:alg:Debug:l24: compute ub for '-k - s', start w/ min 0, maxV 10)
0:54:21:alg:Debug:got -k - s <= 0
0:54:21:alg:Debug:l24: compute ub for '-n - s', start w/ min 0, maxV 10)
0:54:21:alg:Debug:got -n - s <= 0
0:54:17:alg:Debug:l24: compute ub for '-t', start w/ min 0, maxV 10)
0:54:17:alg:Debug:got -t <= 0
0:54:17:alg:Debug:l24: compute ub for '-k - q', start w/ min 0, maxV 10)
0:54:19:alg:Debug:got -k - q <= 0
0:54:19:alg:Debug:l24: compute ub for '-r + t', start w/ min 2, maxV 10)
0:54:20:alg:Debug:got -r + t <= 2
0:54:20:alg:Debug:l24: compute ub for '-n + r', start w/ min 0, maxV 10)
0:54:21:alg:Debug:got -n + r <= 0
0:54:21:alg:Debug:l24: compute ub for '-n - q', start w/ min 0, maxV 10)
0:54:22:alg:Debug:got -n - q <= 0
0:54:22:alg:Info:104 invs:
l24: r - t <= 9, q - s <= 0, -r <= 2, -d - k <= -3, k - q <= 8, -q + s <= 9, -n - r <= 0, t <= 1, r + t <= 9, q <= 8, -k + q <= 8, -d + s <= 8, -a + t <= 1, -d - s <= -3, n - q <= 4, -n <= 0, -q + t <= 8, k - t <= 9, -a - n <= -3, n + q <= 4, -d - t <= -3, -n + q <= 0, -a + n <= 6, k + t <= 9, q + t <= 8, -d - n <= -3, n + r <= 8, -a + q <= 3, -s - t <= 0, k - n <= 0, s - t <= 9, k + n <= 8, -n - t <= 0, -k - t <= 7, q - t <= 8, -d + r <= -1, -q - t <= 4, -d - r <= -2, -d <= -3, -k + t <= 7, n - t <= 4, n - s <= 2, -q - s <= 0, k + q <= 8, -d + k <= -3, -r - t <= 2, q - r <= 5, -r - s <= 0, n + t <= 4, q + s <= 7, -d + t <= -3, -k + r <= 8, -a - r <= -2, -a <= -3, -d + q <= 3, -a - k <= -3, -k + n <= 0, s + t <= 7, -k - n <= 0, k <= 9, -s + t <= 0, -n + t <= 0, r - s <= 9, -q - r <= 6, -a + k <= 1, -d - q <= -3, s <= 7, -a - q <= -3, n - r <= 0, -k - s <= 0, -n - s <= 0, -t <= 0, -k - q <= 0, -r + t <= 2, -n + r <= 0, -n - q <= 0, -d + n <= 6, -k <= 7, k + r <= 8, k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, a - d <= 0, -k + s <= 9, n <= 4, -q + r <= 9, -q <= 4, q + r <= 9, -r + s <= 9, -a + r <= 1, r <= 9, k - r <= 8, -k - r <= 9, -a + s <= 7, k - s <= 9, k + s <= 9, -a - s <= -3, -s <= 0, -n + s <= 0, -a - d <= -6, -a + d <= 8, n + s <= 6, -a - t <= -3, r + s <= 9
0:54:22:alg:Info:test 104 invs on all 269 traces
0:54:22:ds:Warn:l24: -d + n <= 6 disproved
0:54:22:ds:Warn:l24: -a + t <= 1 disproved
0:54:22:ds:Warn:l24: -k <= 7 disproved
0:54:22:ds:Warn:l24: r - s <= 9 disproved
0:54:22:ds:Warn:l24: k + r <= 8 disproved
0:54:22:ds:Warn:l24: -k - r <= 9 disproved
0:54:22:ds:Warn:l24: -q + t <= 8 disproved
0:54:22:ds:Warn:l24: -a + k <= 1 disproved
0:54:22:ds:Warn:l24: n + q <= 4 disproved
0:54:22:ds:Warn:l24: -d - n <= -3 disproved
0:54:22:ds:Warn:l24: -d + t <= -3 disproved
0:54:22:ds:Warn:l24: -n - q <= 0 disproved
0:54:22:ds:Warn:l24: -r + s <= 9 disproved
0:54:22:ds:Warn:l24: -q + s <= 9 disproved
0:54:22:ds:Warn:l24: -a + r <= 1 disproved
0:54:22:ds:Warn:l24: n - s <= 2 disproved
0:54:22:ds:Warn:l24: -a - q <= -3 disproved
0:54:22:ds:Warn:l24: -a + q <= 3 disproved
0:54:22:ds:Warn:l24: -k + s <= 9 disproved
0:54:22:ds:Warn:l24: -s + t <= 0 disproved
0:54:22:ds:Warn:l24: -k + n <= 0 disproved
0:54:22:ds:Warn:l24: q - t <= 8 disproved
0:54:22:ds:Warn:l24: s - t <= 9 disproved
0:54:22:ds:Warn:l24: k + t <= 9 disproved
0:54:22:ds:Warn:l24: -q - r <= 6 disproved
0:54:22:ds:Warn:l24: -q <= 4 disproved
0:54:22:ds:Warn:l24: k - s <= 9 disproved
0:54:22:ds:Warn:l24: q + r <= 9 disproved
0:54:22:ds:Warn:l24: -n - t <= 0 disproved
0:54:22:ds:Warn:l24: -a + d <= 8 disproved
0:54:22:ds:Warn:l24: n + t <= 4 disproved
0:54:22:ds:Warn:l24: -k - t <= 7 disproved
0:54:22:ds:Warn:l24: -r - t <= 2 disproved
0:54:22:ds:Warn:l24: k + q <= 8 disproved
0:54:22:ds:Warn:l24: q + s <= 7 disproved
0:54:22:ds:Warn:l24: -q - s <= 0 disproved
0:54:22:ds:Warn:l24: -k - q <= 0 disproved
0:54:22:ds:Warn:l24: r + t <= 9 disproved
0:54:22:ds:Warn:l24: -d - s <= -3 disproved
0:54:22:ds:Warn:l24: n - r <= 0 disproved
0:54:22:ds:Warn:l24: -d + s <= 8 disproved
0:54:22:ds:Warn:l24: t <= 1 disproved
0:54:22:ds:Warn:l24: -n <= 0 disproved
0:54:22:ds:Warn:l24: -n - r <= 0 disproved
0:54:22:ds:Warn:l24: n + r <= 8 disproved
0:54:22:ds:Warn:l24: k - n <= 0 disproved
0:54:22:ds:Warn:l24: r - t <= 9 disproved
0:54:22:ds:Warn:l24: q <= 8 disproved
0:54:22:ds:Warn:l24: q - s <= 0 disproved
0:54:22:ds:Warn:l24: -a + s <= 7 disproved
0:54:22:ds:Warn:l24: -a - s <= -3 disproved
0:54:22:ds:Warn:l24: -k + q <= 8 disproved
0:54:22:ds:Warn:l24: -r + t <= 2 disproved
0:54:22:ds:Warn:l24: -d + k <= -3 disproved
0:54:22:ds:Warn:l24: k - q <= 8 disproved
0:54:22:ds:Warn:l24: -r <= 2 disproved
0:54:22:ds:Warn:l24: -k + t <= 7 disproved
0:54:22:ds:Warn:l24: n - t <= 4 disproved
0:54:22:ds:Warn:l24: -d + r <= -1 disproved
0:54:22:ds:Warn:l24: -n + t <= 0 disproved
0:54:22:ds:Warn:l24: -q + r <= 9 disproved
0:54:22:ds:Warn:l24: q - r <= 5 disproved
0:54:22:ds:Warn:l24: k - t <= 9 disproved
0:54:22:ds:Warn:l24: k + n <= 8 disproved
0:54:22:ds:Warn:l24: s + t <= 7 disproved
0:54:22:ds:Warn:l24: k <= 9 disproved
0:54:22:ds:Warn:l24: -k - n <= 0 disproved
0:54:22:ds:Warn:l24: -s - t <= 0 disproved
0:54:22:ds:Warn:l24: k - r <= 8 disproved
0:54:22:ds:Warn:l24: k + s <= 9 disproved
0:54:22:ds:Warn:l24: s <= 7 disproved
0:54:22:ds:Warn:l24: n + s <= 6 disproved
0:54:22:ds:Warn:l24: -n - s <= 0 disproved
0:54:22:ds:Warn:l24: -k - s <= 0 disproved
0:54:22:ds:Warn:l24: -d - q <= -3 disproved
0:54:22:ds:Warn:l24: -d + q <= 3 disproved
0:54:22:ds:Warn:l24: -a + n <= 6 disproved
0:54:22:ds:Warn:l24: -n + q <= 0 disproved
0:54:22:ds:Warn:l24: -a - n <= -3 disproved
0:54:22:ds:Warn:l24: n - q <= 4 disproved
0:54:22:ds:Warn:l24: -n + r <= 0 disproved
0:54:22:ds:Warn:l24: -s <= 0 disproved
0:54:22:ds:Warn:l24: -r - s <= 0 disproved
0:54:22:ds:Warn:l24: q + t <= 8 disproved
0:54:22:ds:Warn:l24: r <= 9 disproved
0:54:22:ds:Warn:l24: -k + r <= 8 disproved
0:54:22:ds:Warn:l24: n <= 4 disproved
0:54:22:ds:Warn:l24: r + s <= 9 disproved
0:54:22:ds:Warn:l24: -q - t <= 4 disproved
0:54:22:alg:Info:find uniq invs
0:54:22:alg:Info:15 invs:
l24: -d - k <= -3, -d - t <= -3, -d - r <= -2, -d <= -3, -a - r <= -2, -a <= -3, -a - k <= -3, -t <= 0, k*t - (t*t) == 0, a*k - d*k - a*t + d*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, a - d <= 0, -n + s <= 0, -a - d <= -6, -a - t <= -3
0:54:23:alg:Info:removed 6 redundant invs
0:54:23:alg:Info:got 9 invs, 252 inps (test 60): 
l24: a - d <= 0, k*t - (t*t) == 0, -a <= -3, a*k - d*k - a*t + d*t == 0, -a - r <= -2, -d - k <= -3, -t <= 0, -n + s <= 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:54:23:alg:Info:*done* prog programs/nla/knuth.c, invs 9, time 74.8270220757 s
0:54:23:alg:Debug:rm -rf /var/tmp/DIG2_BJhFLQ
0:54:24:alg:Debug:src: /var/tmp/DIG2_MiafKP/knuth.c
0:54:24:alg:Info:analyze programs/nla/knuth.c
0:54:24:alg:Info:set seed to: 2.0 (test 98)
0:54:24:miscs:Info:autodeg 3
0:54:24:alg:Info:check reachability
0:54:24:alg:Info:gen eqts at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:54:24:alg:Debug:l24: need more traces (4 eqts, need >= 247)
0:54:24:alg:Debug:obtain 5 new traces
0:54:24:alg:Debug:l24: need more traces (9 eqts, need >= 247)
0:54:24:alg:Debug:obtain 6 new traces
0:54:24:alg:Debug:l24: need more traces (15 eqts, need >= 247)
0:54:25:alg:Debug:obtain 7 new traces
0:54:25:alg:Debug:l24: need more traces (22 eqts, need >= 247)
0:54:25:alg:Debug:obtain 8 new traces
0:54:25:alg:Debug:l24: need more traces (30 eqts, need >= 247)
0:54:25:alg:Debug:obtain 9 new traces
0:54:25:alg:Debug:l24: need more traces (39 eqts, need >= 247)
0:54:25:alg:Debug:obtain 10 new traces
0:54:25:alg:Debug:l24: need more traces (49 eqts, need >= 247)
0:54:26:alg:Debug:obtain 11 new traces
0:54:26:alg:Debug:l24: need more traces (60 eqts, need >= 247)
0:54:26:alg:Debug:obtain 12 new traces
0:54:26:alg:Debug:l24: need more traces (72 eqts, need >= 247)
0:54:26:alg:Debug:obtain 13 new traces
0:54:26:alg:Debug:l24: need more traces (85 eqts, need >= 247)
0:54:26:alg:Debug:obtain 14 new traces
0:54:26:alg:Debug:l24: need more traces (99 eqts, need >= 247)
0:54:27:alg:Debug:obtain 15 new traces
0:54:27:alg:Debug:l24: need more traces (114 eqts, need >= 247)
0:54:27:alg:Debug:obtain 24 new traces
0:54:27:alg:Debug:l24: need more traces (138 eqts, need >= 247)
0:54:28:alg:Debug:obtain 17 new traces
0:54:28:alg:Debug:l24: need more traces (155 eqts, need >= 247)
0:54:28:alg:Debug:obtain 18 new traces
0:54:28:alg:Debug:l24: need more traces (173 eqts, need >= 247)
0:54:28:alg:Debug:obtain 19 new traces
0:54:28:alg:Debug:l24: need more traces (192 eqts, need >= 247)
0:54:29:alg:Debug:obtain 22 new traces
0:54:29:alg:Debug:l24: need more traces (214 eqts, need >= 247)
0:54:29:alg:Debug:obtain 25 new traces
0:54:29:alg:Debug:l24: need more traces (239 eqts, need >= 247)
0:54:29:alg:Debug:obtain 25 new traces
0:54:30:alg:Debug:l24: infer using 247 exprs
0:54:30:miscs:Debug:solve 165 uks using 247 eqts
0:55:26:alg:Debug:l24: 3 candidates:
d^2*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
a*t - 3*t == 0
k*t - t^2 == 0
0:55:26:alg:Debug:l24: check 3 unchecked (3 candidates)
0:55:26:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:55:27:alg:Debug:l24: no disproved candidates -- break
0:55:27:alg:Debug:l24: got 3 eqts, 0 new inps
0:55:27:alg:Debug:k*t - (t*t) == 0
a*t - 3*t == 0
(d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:55:27:alg:Info:3 invs:
l24: k*t - (t*t) == 0, a*t - 3*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0
0:55:27:alg:Info:gen ieqs at 1 locs: l24 (int n, int a, int r, int k, int q, int d, int s, int t)
0:55:27:alg:Info:1 locs: check upperbounds for 128 terms
0:55:27:miscs:Debug:workloads 'prove' 20: [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 14]
0:55:29:alg:Info:1 locs: compute upperbounds for 101 terms
0:55:29:miscs:Debug:workloads 'guesscheck' 20: [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6]
0:55:29:alg:Debug:l24: compute ub for '-d - t', start w/ min -3, maxV 10)
0:55:30:alg:Debug:got -d - t <= -3
0:55:30:alg:Debug:l24: compute ub for '-a + d', start w/ min 8, maxV 10)
0:55:31:alg:Debug:got -a + d <= 8
0:55:31:alg:Debug:l24: compute ub for 'r + t', start w/ min 9, maxV 10)
0:55:31:alg:Debug:got r + t <= 9
0:55:31:alg:Debug:l24: compute ub for 'q + s', start w/ min 7, maxV 10)
0:55:32:alg:Debug:got q + s <= 7
0:55:32:alg:Debug:l24: compute ub for '-d + n', start w/ min 7, maxV 10)
0:55:32:alg:Debug:got -d + n <= 7
0:55:29:alg:Debug:l24: compute ub for 'k - s', start w/ min 9, maxV 10)
0:55:30:alg:Debug:got k - s <= 9
0:55:30:alg:Debug:l24: compute ub for '-r - s', start w/ min 0, maxV 10)
0:55:31:alg:Debug:got -r - s <= 0
0:55:31:alg:Debug:l24: compute ub for '-r + s', start w/ min 9, maxV 10)
0:55:31:alg:Debug:got -r + s <= 9
0:55:31:alg:Debug:l24: compute ub for '-a + r', start w/ min -1, maxV 10)
0:55:32:alg:Debug:got -a + r <= -1
0:55:32:alg:Debug:l24: compute ub for '-k - r', start w/ min 9, maxV 10)
0:55:33:alg:Debug:got -k - r <= 9
0:55:30:alg:Debug:l24: compute ub for '-d - r', start w/ min -2, maxV 10)
0:55:30:alg:Debug:got -d - r <= -2
0:55:30:alg:Debug:l24: compute ub for '-n - s', start w/ min 0, maxV 10)
0:55:31:alg:Debug:got -n - s <= 0
0:55:31:alg:Debug:l24: compute ub for '-n + t', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -n + t <= 0
0:55:32:alg:Debug:l24: compute ub for 'r - s', start w/ min 7, maxV 10)
0:55:32:alg:Debug:got r - s <= 7
0:55:33:alg:Debug:l24: compute ub for 's + t', start w/ min 8, maxV 10)
0:55:33:alg:Debug:got s + t <= 8
0:55:30:alg:Debug:l24: compute ub for 'r - t', start w/ min 9, maxV 10)
0:55:30:alg:Debug:got r - t <= 9
0:55:30:alg:Debug:l24: compute ub for '-a - d', start w/ min -6, maxV 10)
0:55:30:alg:Debug:got -a - d <= -6
0:55:31:alg:Debug:l24: compute ub for '-d + t', start w/ min -3, maxV 10)
0:55:31:alg:Debug:got -d + t <= -3
0:55:31:alg:Debug:l24: compute ub for '-d', start w/ min -3, maxV 10)
0:55:32:alg:Debug:got -d <= -3
0:55:32:alg:Debug:l24: compute ub for 'n + r', start w/ min 2, maxV 10)
0:55:33:alg:Debug:got n + r <= 2
0:55:30:alg:Debug:l24: compute ub for '-k + r', start w/ min 8, maxV 10)
0:55:30:alg:Debug:got -k + r <= 8
0:55:30:alg:Debug:l24: compute ub for 'k + s', start w/ min 8, maxV 10)
0:55:31:alg:Debug:got k + s <= 8
0:55:31:alg:Debug:l24: compute ub for '-a + t', start w/ min -1, maxV 10)
0:55:32:alg:Debug:got -a + t <= -1
0:55:32:alg:Debug:l24: compute ub for 'n - t', start w/ min 1, maxV 10)
0:55:33:alg:Debug:got n - t <= 1
0:55:33:alg:Debug:l24: compute ub for '-a', start w/ min -3, maxV 10)
0:55:33:alg:Debug:got -a <= -3
0:55:30:alg:Debug:l24: compute ub for 't', start w/ min 2, maxV 10)
0:55:30:alg:Debug:got t <= 2
0:55:30:alg:Debug:l24: compute ub for '-d + s', start w/ min 8, maxV 10)
0:55:30:alg:Debug:got -d + s <= 8
0:55:31:alg:Debug:l24: compute ub for '-k - t', start w/ min 7, maxV 10)
0:55:32:alg:Debug:got -k - t <= 7
0:55:32:alg:Debug:l24: compute ub for 'q - s', start w/ min 3, maxV 10)
0:55:33:alg:Debug:got q - s <= 3
0:55:33:alg:Debug:l24: compute ub for 'q', start w/ min 8, maxV 10)
0:55:33:alg:Debug:got q <= 8
0:55:30:alg:Debug:l24: compute ub for 'k - r', start w/ min 8, maxV 10)
0:55:30:alg:Debug:got k - r <= 8
0:55:30:alg:Debug:l24: compute ub for 'n', start w/ min 1, maxV 10)
0:55:31:alg:Debug:got n <= 1
0:55:31:alg:Debug:l24: compute ub for '-s', start w/ min 0, maxV 10)
0:55:31:alg:Debug:got -s <= 0
0:55:32:alg:Debug:l24: compute ub for 'n - r', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got n - r <= 0
0:55:32:alg:Debug:l24: compute ub for '-a + s', start w/ min 7, maxV 10)
0:55:33:alg:Debug:got -a + s <= 7
0:55:33:alg:Debug:l24: compute ub for 'k + t', start w/ min 9, maxV 10)
0:55:33:alg:Debug:got k + t <= 9
0:55:29:alg:Debug:l24: compute ub for '-a - q', start w/ min -3, maxV 10)
0:55:31:alg:Debug:got -a - q <= -3
0:55:31:alg:Debug:l24: compute ub for '-r - t', start w/ min 2, maxV 10)
0:55:32:alg:Debug:got -r - t <= 2
0:55:32:alg:Debug:l24: compute ub for '-s + t', start w/ min 0, maxV 10)
0:55:33:alg:Debug:got -s + t <= 0
0:55:33:alg:Debug:l24: compute ub for 'r + s', start w/ min 9, maxV 10)
0:55:33:alg:Debug:got r + s <= 9
0:55:33:alg:Debug:l24: compute ub for '-n - t', start w/ min 0, maxV 10)
0:55:33:alg:Debug:got -n - t <= 0
0:55:29:alg:Debug:l24: compute ub for 'q + r', start w/ min 8, maxV 10)
0:55:30:alg:Debug:got q + r <= 8
0:55:30:alg:Debug:l24: compute ub for '-q + t', start w/ min 8, maxV 10)
0:55:31:alg:Debug:got -q + t <= 8
0:55:31:alg:Debug:l24: compute ub for 'n + q', start w/ min 5, maxV 10)
0:55:32:alg:Debug:got n + q <= 5
0:55:32:alg:Debug:l24: compute ub for '-a + n', start w/ min 7, maxV 10)
0:55:32:alg:Debug:got -a + n <= 7
0:55:32:alg:Debug:l24: compute ub for '-a + k', start w/ min -1, maxV 10)
0:55:33:alg:Debug:got -a + k <= -1
0:55:30:alg:Debug:l24: compute ub for '-d + k', start w/ min -3, maxV 10)
0:55:31:alg:Debug:got -d + k <= -3
0:55:31:alg:Debug:l24: compute ub for 'k - q', start w/ min 9, maxV 10)
0:55:31:alg:Debug:got k - q <= 9
0:55:31:alg:Debug:l24: compute ub for '-t', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -t <= 0
0:55:32:alg:Debug:l24: compute ub for '-q - s', start w/ min 0, maxV 10)
0:55:33:alg:Debug:got -q - s <= 0
0:55:33:alg:Debug:l24: compute ub for '-d - s', start w/ min -3, maxV 10)
0:55:34:alg:Debug:got -d - s <= -3
0:55:30:alg:Debug:l24: compute ub for '-r + t', start w/ min 2, maxV 10)
0:55:30:alg:Debug:got -r + t <= 2
0:55:30:alg:Debug:l24: compute ub for '-a + q', start w/ min 1, maxV 10)
0:55:32:alg:Debug:got -a + q <= 1
0:55:32:alg:Debug:l24: compute ub for 'q - r', start w/ min 3, maxV 10)
0:55:33:alg:Debug:got q - r <= 3
0:55:33:alg:Debug:l24: compute ub for 's', start w/ min 7, maxV 10)
0:55:33:alg:Debug:got s <= 7
0:55:34:alg:Debug:l24: compute ub for 's - t', start w/ min 9, maxV 10)
0:55:34:alg:Debug:got s - t <= 9
0:55:29:alg:Debug:l24: compute ub for 'k + q', start w/ min 9, maxV 10)
0:55:30:alg:Debug:got k + q <= 9
0:55:30:alg:Debug:l24: compute ub for '-n + q', start w/ min 3, maxV 10)
0:55:31:alg:Debug:got -n + q <= 3
0:55:31:alg:Debug:l24: compute ub for '-n - q', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -n - q <= 0
0:55:32:alg:Debug:l24: compute ub for '-k + q', start w/ min 7, maxV 10)
0:55:33:alg:Debug:got -k + q <= 7
0:55:33:alg:Debug:l24: compute ub for '-n', start w/ min 0, maxV 10)
0:55:34:alg:Debug:got -n <= 0
0:55:29:alg:Debug:l24: compute ub for '-k + t', start w/ min 7, maxV 10)
0:55:31:alg:Debug:got -k + t <= 7
0:55:31:alg:Debug:l24: compute ub for '-a - s', start w/ min -3, maxV 10)
0:55:31:alg:Debug:got -a - s <= -3
0:55:31:alg:Debug:l24: compute ub for '-n - r', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -n - r <= 0
0:55:32:alg:Debug:l24: compute ub for '-k', start w/ min 7, maxV 10)
0:55:33:alg:Debug:got -k <= 7
0:55:33:alg:Debug:l24: compute ub for 'k - t', start w/ min 9, maxV 10)
0:55:34:alg:Debug:got k - t <= 9
0:55:30:alg:Debug:l24: compute ub for '-d + r', start w/ min -1, maxV 10)
0:55:30:alg:Debug:got -d + r <= -1
0:55:30:alg:Debug:l24: compute ub for '-n + r', start w/ min 0, maxV 10)
0:55:31:alg:Debug:got -n + r <= 0
0:55:32:alg:Debug:l24: compute ub for '-q', start w/ min 4, maxV 10)
0:55:33:alg:Debug:got -q <= 4
0:55:33:alg:Debug:l24: compute ub for 'k', start w/ min 9, maxV 10)
0:55:33:alg:Debug:got k <= 9
0:55:33:alg:Debug:l24: compute ub for 'q - t', start w/ min 8, maxV 10)
0:55:34:alg:Debug:got q - t <= 8
0:55:29:alg:Debug:l24: compute ub for 'n - s', start w/ min 0, maxV 10)
0:55:30:alg:Debug:got n - s <= 0
0:55:30:alg:Debug:l24: compute ub for '-k - n', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -k - n <= 0
0:55:32:alg:Debug:l24: compute ub for 'k + r', start w/ min 8, maxV 10)
0:55:32:alg:Debug:got k + r <= 8
0:55:32:alg:Debug:l24: compute ub for '-s - t', start w/ min 0, maxV 10)
0:55:33:alg:Debug:got -s - t <= 0
0:55:33:alg:Debug:l24: compute ub for '-q - r', start w/ min 6, maxV 10)
0:55:34:alg:Debug:got -q - r <= 6
0:55:30:alg:Debug:l24: compute ub for '-n + s', start w/ min 0, maxV 10)
0:55:30:alg:Debug:got -n + s <= 0
0:55:30:alg:Debug:l24: compute ub for '-q - t', start w/ min 4, maxV 10)
0:55:31:alg:Debug:got -q - t <= 4
0:55:32:alg:Debug:l24: compute ub for 'n - q', start w/ min 1, maxV 10)
0:55:33:alg:Debug:got n - q <= 1
0:55:33:alg:Debug:l24: compute ub for 'q + t', start w/ min 8, maxV 10)
0:55:33:alg:Debug:got q + t <= 8
0:55:33:alg:Debug:l24: compute ub for '-q + r', start w/ min 8, maxV 10)
0:55:34:alg:Debug:got -q + r <= 8
0:55:30:alg:Debug:l24: compute ub for '-k - q', start w/ min 0, maxV 10)
0:55:31:alg:Debug:got -k - q <= 0
0:55:31:alg:Debug:l24: compute ub for '-d - k', start w/ min -3, maxV 10)
0:55:33:alg:Debug:got -d - k <= -3
0:55:33:alg:Debug:l24: compute ub for '-d - n', start w/ min -3, maxV 10)
0:55:33:alg:Debug:got -d - n <= -3
0:55:33:alg:Debug:l24: compute ub for '-r', start w/ min 2, maxV 10)
0:55:34:alg:Debug:got -r <= 2
0:55:34:alg:Debug:l24: compute ub for '-q + s', start w/ min 9, maxV 10)
0:55:34:alg:Debug:got -q + s <= 9
0:55:29:alg:Debug:l24: compute ub for '-a - t', start w/ min -3, maxV 10)
0:55:30:alg:Debug:got -a - t <= -3
0:55:30:alg:Debug:l24: compute ub for '-k + s', start w/ min 9, maxV 10)
0:55:31:alg:Debug:got -k + s <= 9
0:55:31:alg:Debug:l24: compute ub for 'k + n', start w/ min 2, maxV 10)
0:55:32:alg:Debug:got k + n <= 2
0:55:32:alg:Debug:l24: compute ub for '-d - q', start w/ min -3, maxV 10)
0:55:33:alg:Debug:got -d - q <= -3
0:55:34:alg:Debug:l24: compute ub for 'a - d', start w/ min 0, maxV 10)
0:55:34:alg:Debug:got a - d <= 0
0:55:30:alg:Debug:l24: compute ub for '-a - r', start w/ min -2, maxV 10)
0:55:31:alg:Debug:got -a - r <= -2
0:55:31:alg:Debug:l24: compute ub for '-k - s', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got -k - s <= 0
0:55:32:alg:Debug:l24: compute ub for 'n + t', start w/ min 1, maxV 10)
0:55:33:alg:Debug:got n + t <= 1
0:55:33:alg:Debug:l24: compute ub for '-a - k', start w/ min -3, maxV 10)
0:55:34:alg:Debug:got -a - k <= -3
0:55:34:alg:Debug:l24: compute ub for '-a - n', start w/ min -3, maxV 10)
0:55:34:alg:Debug:got -a - n <= -3
0:55:30:alg:Debug:l24: compute ub for 'r', start w/ min 9, maxV 10)
0:55:30:alg:Debug:got r <= 9
0:55:30:alg:Debug:l24: compute ub for 'k - n', start w/ min 0, maxV 10)
0:55:32:alg:Debug:got k - n <= 0
0:55:32:alg:Debug:l24: compute ub for 'n + s', start w/ min 2, maxV 10)
0:55:32:alg:Debug:got n + s <= 2
0:55:32:alg:Debug:l24: compute ub for '-d + q', start w/ min 1, maxV 10)
0:55:34:alg:Debug:got -d + q <= 1
0:55:34:alg:Debug:l24: compute ub for '-k + n', start w/ min 1, maxV 10)
0:55:35:alg:Debug:got -k + n <= 1
0:55:35:alg:Info:104 invs:
l24: -d + s <= 8, t <= 2, q - s <= 3, -k - t <= 7, q <= 8, k - r <= 8, n <= 1, -s <= 0, n - r <= 0, -a + s <= 7, k + t <= 9, -a - q <= -3, -r - t <= 2, -s + t <= 0, r + s <= 9, -n - t <= 0, q + r <= 8, -q + t <= 8, n + q <= 5, -a + n <= 7, -a + k <= -1, -d + k <= -3, k - q <= 9, -t <= 0, -q - s <= 0, -d - s <= -3, -r + t <= 2, -a + q <= 1, q - r <= 3, s <= 7, s - t <= 9, k + q <= 9, -n + q <= 3, -n - q <= 0, -k + q <= 7, -n <= 0, -k + t <= 7, -a - s <= -3, -n - r <= 0, -k <= 7, k - t <= 9, -d + r <= -1, -n + r <= 0, -q <= 4, k <= 9, q - t <= 8, n - s <= 0, -k - n <= 0, k + r <= 8, -s - t <= 0, -q - r <= 6, -n + s <= 0, -q - t <= 4, n - q <= 1, q + t <= 8, -q + r <= 8, -k - q <= 0, -d - k <= -3, -d - n <= -3, -r <= 2, -q + s <= 9, -a - t <= -3, -k + s <= 9, k + n <= 2, -d - q <= -3, a - d <= 0, -a - r <= -2, -k - s <= 0, n + t <= 1, -a - k <= -3, -a - n <= -3, r <= 9, k - n <= 0, n + s <= 2, -d + q <= 1, -k + n <= 1, -d <= -3, -d - r <= -2, n + r <= 2, q + s <= 7, r - s <= 7, -k + r <= 8, s + t <= 8, -d + t <= -3, k + s <= 8, -a + r <= -1, -d + n <= 7, r - t <= 9, -a + d <= 8, -n - s <= 0, -r - s <= 0, -k - r <= 9, k - s <= 9, -a - d <= -6, r + t <= 9, -n + t <= 0, -r + s <= 9, -d - t <= -3, k*t - (t*t) == 0, a*t - 3*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, n - t <= 1, -a <= -3, -a + t <= -1
0:55:35:alg:Info:test 104 invs on all 269 traces
0:55:35:ds:Warn:l24: k - t <= 9 disproved
0:55:35:ds:Warn:l24: -k <= 7 disproved
0:55:35:ds:Warn:l24: -q - r <= 6 disproved
0:55:35:ds:Warn:l24: q + r <= 8 disproved
0:55:35:ds:Warn:l24: -k - r <= 9 disproved
0:55:35:ds:Warn:l24: k - s <= 9 disproved
0:55:35:ds:Warn:l24: -k + t <= 7 disproved
0:55:35:ds:Warn:l24: -q + t <= 8 disproved
0:55:35:ds:Warn:l24: -a + n <= 7 disproved
0:55:35:ds:Warn:l24: n + q <= 5 disproved
0:55:35:ds:Warn:l24: -n - q <= 0 disproved
0:55:35:ds:Warn:l24: -a + t <= -1 disproved
0:55:35:ds:Warn:l24: -k + s <= 9 disproved
0:55:35:ds:Warn:l24: n - s <= 0 disproved
0:55:35:ds:Warn:l24: -n + r <= 0 disproved
0:55:35:ds:Warn:l24: k + n <= 2 disproved
0:55:35:ds:Warn:l24: -k - n <= 0 disproved
0:55:35:ds:Warn:l24: -s + t <= 0 disproved
0:55:35:ds:Warn:l24: -r - s <= 0 disproved
0:55:35:ds:Warn:l24: k + r <= 8 disproved
0:55:35:ds:Warn:l24: s - t <= 9 disproved
0:55:35:ds:Warn:l24: r + s <= 9 disproved
0:55:35:ds:Warn:l24: q - t <= 8 disproved
0:55:35:ds:Warn:l24: -d + t <= -3 disproved
0:55:35:ds:Warn:l24: -n - t <= 0 disproved
0:55:35:ds:Warn:l24: n + t <= 1 disproved
0:55:35:ds:Warn:l24: -a + d <= 8 disproved
0:55:35:ds:Warn:l24: n - r <= 0 disproved
0:55:35:ds:Warn:l24: -d - n <= -3 disproved
0:55:35:ds:Warn:l24: r + t <= 9 disproved
0:55:35:ds:Warn:l24: -d + n <= 7 disproved
0:55:35:ds:Warn:l24: -k + q <= 7 disproved
0:55:35:ds:Warn:l24: k - q <= 9 disproved
0:55:35:ds:Warn:l24: -r - t <= 2 disproved
0:55:35:ds:Warn:l24: -a - n <= -3 disproved
0:55:35:ds:Warn:l24: q + s <= 7 disproved
0:55:35:ds:Warn:l24: -q - s <= 0 disproved
0:55:35:ds:Warn:l24: -n <= 0 disproved
0:55:35:ds:Warn:l24: t <= 2 disproved
0:55:35:ds:Warn:l24: -d - s <= -3 disproved
0:55:35:ds:Warn:l24: -d - q <= -3 disproved
0:55:35:ds:Warn:l24: -d + s <= 8 disproved
0:55:35:ds:Warn:l24: q - s <= 3 disproved
0:55:35:ds:Warn:l24: q <= 8 disproved
0:55:35:ds:Warn:l24: -r + t <= 2 disproved
0:55:35:ds:Warn:l24: k + q <= 9 disproved
0:55:35:ds:Warn:l24: -q + s <= 9 disproved
0:55:35:ds:Warn:l24: -d + k <= -3 disproved
0:55:35:ds:Warn:l24: r - t <= 9 disproved
0:55:35:ds:Warn:l24: -k - q <= 0 disproved
0:55:35:ds:Warn:l24: -r <= 2 disproved
0:55:35:ds:Warn:l24: -d + r <= -1 disproved
0:55:35:ds:Warn:l24: -n - r <= 0 disproved
0:55:35:ds:Warn:l24: n + r <= 2 disproved
0:55:35:ds:Warn:l24: n - t <= 1 disproved
0:55:35:ds:Warn:l24: -n + t <= 0 disproved
0:55:35:ds:Warn:l24: -a - q <= -3 disproved
0:55:35:ds:Warn:l24: -a + q <= 1 disproved
0:55:35:ds:Warn:l24: -r + s <= 9 disproved
0:55:35:ds:Warn:l24: s + t <= 8 disproved
0:55:35:ds:Warn:l24: -q <= 4 disproved
0:55:35:ds:Warn:l24: -k + r <= 8 disproved
0:55:35:ds:Warn:l24: k <= 9 disproved
0:55:35:ds:Warn:l24: r - s <= 7 disproved
0:55:35:ds:Warn:l24: -s - t <= 0 disproved
0:55:35:ds:Warn:l24: -k + n <= 1 disproved
0:55:35:ds:Warn:l24: k - n <= 0 disproved
0:55:35:ds:Warn:l24: -d + q <= 1 disproved
0:55:35:ds:Warn:l24: s <= 7 disproved
0:55:35:ds:Warn:l24: -n - s <= 0 disproved
0:55:35:ds:Warn:l24: n + s <= 2 disproved
0:55:35:ds:Warn:l24: -a + r <= -1 disproved
0:55:35:ds:Warn:l24: k + s <= 8 disproved
0:55:35:ds:Warn:l24: -k - s <= 0 disproved
0:55:35:ds:Warn:l24: n - q <= 1 disproved
0:55:35:ds:Warn:l24: -n + q <= 3 disproved
0:55:35:ds:Warn:l24: -a + k <= -1 disproved
0:55:35:ds:Warn:l24: -a + s <= 7 disproved
0:55:35:ds:Warn:l24: -s <= 0 disproved
0:55:35:ds:Warn:l24: n <= 1 disproved
0:55:35:ds:Warn:l24: q + t <= 8 disproved
0:55:35:ds:Warn:l24: -k - t <= 7 disproved
0:55:35:ds:Warn:l24: k - r <= 8 disproved
0:55:35:ds:Warn:l24: r <= 9 disproved
0:55:35:ds:Warn:l24: -a - s <= -3 disproved
0:55:35:ds:Warn:l24: -q + r <= 8 disproved
0:55:35:ds:Warn:l24: k + t <= 9 disproved
0:55:35:ds:Warn:l24: q - r <= 3 disproved
0:55:35:ds:Warn:l24: -q - t <= 4 disproved
0:55:35:alg:Info:find uniq invs
0:55:35:alg:Info:15 invs:
l24: -t <= 0, -n + s <= 0, -d - k <= -3, -a - t <= -3, a - d <= 0, -a - r <= -2, -a - k <= -3, -d <= -3, -d - r <= -2, -a - d <= -6, -d - t <= -3, k*t - (t*t) == 0, a*t - 3*t == 0, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, -a <= -3
0:55:36:alg:Info:removed 7 redundant invs
0:55:36:alg:Info:got 8 invs, 252 inps (test 45): 
l24: -a - r <= -2, -a <= -3, (d*d)*q + 4*d*k - 2*d*q - 4*d*r - 8*n + 8*r == 0, a*t - 3*t == 0, a - d <= 0, k*t - (t*t) == 0, -a - k <= -3, -n + s <= 0
0:55:36:alg:Info:*done* prog programs/nla/knuth.c, invs 8, time 71.6865200996 s
0:55:36:alg:Debug:rm -rf /var/tmp/DIG2_MiafKP
running egcd2
0:55:37:alg:Debug:src: /var/tmp/DIG2_rKpnRt/egcd2.c
0:55:37:alg:Info:analyze programs/nla/egcd2.c
0:55:37:alg:Info:set seed to: 0.0 (test 11)
0:55:37:miscs:Info:autodeg 2
0:55:37:alg:Info:check reachability
0:55:37:alg:Info:gen eqts at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
0:55:37:alg:Debug:l18: need more traces (17 eqts, need >= 67)
0:55:37:alg:Debug:obtain 25 new traces
0:55:37:alg:Debug:l18: need more traces (42 eqts, need >= 67)
0:55:37:alg:Debug:obtain 24 new traces
0:55:37:alg:Debug:l18: need more traces (66 eqts, need >= 67)
0:55:38:alg:Debug:obtain 25 new traces
0:55:38:miscs:Debug:workloads 'find eqts' 2: [1, 1]
0:55:38:alg:Debug:l18: infer using 67 exprs
0:55:38:miscs:Debug:solve 45 uks using 67 eqts
0:55:39:alg:Debug:l18: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
0:55:39:alg:Debug:l18: check 2 unchecked (2 candidates)
0:55:39:miscs:Debug:workloads 'prove' 2: [1, 1]
0:55:42:alg:Debug:l18: no disproved candidates -- break
0:55:38:alg:Debug:l28: infer using 99 exprs
0:55:38:miscs:Debug:solve 66 uks using 99 eqts
0:56:6:alg:Debug:l28: 1 candidates:
b*k - a + c == 0
0:56:6:alg:Debug:l28: check 1 unchecked (1 candidates)
0:56:10:alg:Debug:l28: no disproved candidates -- break
0:56:10:alg:Debug:l18: got 2 eqts, 0 new inps
0:56:10:alg:Debug:q*x + s*y - b == 0
p*x + r*y - a == 0
0:56:10:alg:Debug:l28: got 1 eqts, 0 new inps
0:56:10:alg:Debug:b*k - a + c == 0
0:56:10:alg:Info:3 invs:
l28: b*k - a + c == 0
l18: q*x + s*y - b == 0, p*x + r*y - a == 0
0:56:10:alg:Info:gen ieqs at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
0:56:10:alg:Info:2 locs: check upperbounds for 328 terms
0:56:10:miscs:Debug:workloads 'prove' 20: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24]
0:57:22:alg:Info:2 locs: compute upperbounds for 191 terms
0:57:22:miscs:Debug:workloads 'guesscheck' 20: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1]
0:57:23:alg:Debug:l18: compute ub for '-b - x', start w/ min -1, maxV 10)
0:57:38:alg:Debug:got -b - x <= -1
0:57:23:alg:Debug:l18: compute ub for '-r - s', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got -r - s <= 9
0:57:26:alg:Debug:l18: compute ub for '-s', start w/ min 9, maxV 10)
0:57:29:alg:Debug:got -s <= 9
0:57:29:alg:Debug:l18: compute ub for 's - y', start w/ min 9, maxV 10)
0:57:32:alg:Debug:got s - y <= 9
0:57:33:alg:Debug:l18: compute ub for 'r', start w/ min 9, maxV 10)
0:57:36:alg:Debug:got r <= 9
0:57:36:alg:Debug:l18: compute ub for '-x - y', start w/ min -7, maxV 10)
0:57:48:alg:Debug:got -x - y <= -2
0:57:49:alg:Debug:l18: compute ub for '-b + s', start w/ min 9, maxV 10)
0:57:52:alg:Debug:got -b + s <= 9
0:57:52:alg:Debug:l18: compute ub for '-b + p', start w/ min 9, maxV 10)
0:57:55:alg:Debug:got -b + p <= 9
0:57:55:alg:Debug:l18: compute ub for '-a - s', start w/ min 9, maxV 10)
0:57:58:alg:Debug:got -a - s <= 9
0:57:58:alg:Debug:l18: compute ub for '-p + r', start w/ min 9, maxV 10)
0:58:2:alg:Debug:got -p + r <= 9
0:58:2:alg:Debug:l18: compute ub for '-b - q', start w/ min 9, maxV 10)
0:58:5:alg:Debug:got -b - q <= 9
0:57:23:alg:Debug:l18: compute ub for '-p - x', start w/ min 6, maxV 10)
0:57:32:alg:Debug:got -p - x <= 6
0:57:32:alg:Debug:l18: compute ub for 'b - y', start w/ min 0, maxV 10)
0:57:48:alg:Debug:got b - y <= 0
0:57:48:alg:Debug:l18: compute ub for 'q + s', start w/ min 9, maxV 10)
0:57:51:alg:Debug:got q + s <= 9
0:57:51:alg:Debug:l18: compute ub for '-a + q', start w/ min 9, maxV 10)
0:57:54:alg:Debug:got -a + q <= 9
0:57:55:alg:Debug:l18: compute ub for '-q + s', start w/ min 9, maxV 10)
0:57:58:alg:Debug:l18: compute ub for '-p + s', start w/ min 9, maxV 10)
0:58:1:alg:Debug:got -p + s <= 9
0:58:1:alg:Debug:l18: compute ub for 'q - r', start w/ min 9, maxV 10)
0:58:4:alg:Debug:got q - r <= 9
0:58:5:alg:Debug:l18: compute ub for 'p - y', start w/ min 0, maxV 10)
0:58:20:alg:Debug:got p - y <= 0
0:58:20:alg:Debug:l18: compute ub for '-p', start w/ min 8, maxV 10)
0:58:26:alg:Debug:got -p <= 8
0:58:27:alg:Debug:l18: compute ub for 'p + r', start w/ min 8, maxV 10)
0:58:33:alg:Debug:got p + r <= 8
0:57:23:alg:Debug:l18: compute ub for '-q + r', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got -q + r <= 9
0:57:26:alg:Debug:l18: compute ub for 's - x', start w/ min 0, maxV 10)
0:57:41:alg:Debug:got s - x <= 0
0:57:42:alg:Debug:l18: compute ub for 'p', start w/ min 9, maxV 10)
0:57:45:alg:Debug:got p <= 9
0:57:45:alg:Debug:l18: compute ub for '-p + q', start w/ min 9, maxV 10)
0:57:48:alg:Debug:got -p + q <= 9
0:57:48:alg:Debug:l18: compute ub for '-b + r', start w/ min 9, maxV 10)
0:57:51:alg:Debug:got -b + r <= 9
0:57:52:alg:Debug:l18: compute ub for 'q - y', start w/ min 0, maxV 10)
0:58:7:alg:Debug:got q - y <= 0
0:58:7:alg:Debug:l18: compute ub for '-a + r', start w/ min 8, maxV 10)
0:58:13:alg:Debug:got -a + r <= 8
0:58:13:alg:Debug:l18: compute ub for 'p - s', start w/ min 9, maxV 10)
0:58:17:alg:Debug:got p - s <= 9
0:58:17:alg:Debug:l18: compute ub for '-r - x', start w/ min -1, maxV 10)
0:58:32:alg:Debug:got -r - x <= -1
0:58:32:alg:Debug:l18: compute ub for '-q - r', start w/ min 9, maxV 10)
0:58:36:alg:Debug:got -q - r <= 9
0:57:23:alg:Debug:l28: compute ub for 'q - y', start w/ min -1, maxV 10)
0:57:39:alg:Debug:got q - y <= -1
0:57:39:alg:Debug:l28: compute ub for 's - y', start w/ min 3, maxV 10)
0:57:52:alg:Debug:got s - y <= 3
0:57:52:alg:Debug:l28: compute ub for 'k', start w/ min 9, maxV 10)
0:57:55:alg:Debug:got k <= 9
0:57:56:alg:Debug:l28: compute ub for '-q + s', start w/ min 9, maxV 10)
0:58:0:alg:Debug:l28: compute ub for 'p - s', start w/ min 9, maxV 10)
0:58:3:alg:Debug:got p - s <= 9
0:58:3:alg:Debug:l28: compute ub for 'r - s', start w/ min 9, maxV 10)
0:58:6:alg:Debug:got r - s <= 9
0:58:7:alg:Debug:l28: compute ub for '-p - r', start w/ min 8, maxV 10)
0:58:13:alg:Debug:got -p - r <= 8
0:58:14:alg:Debug:l28: compute ub for '-r', start w/ min 9, maxV 10)
0:58:17:alg:Debug:got -r <= 9
0:58:18:alg:Debug:l28: compute ub for '-a - k', start w/ min -1, maxV 10)
0:58:33:alg:Debug:got -a - k <= -1
0:58:33:alg:Debug:l28: compute ub for '-k + q', start w/ min 9, maxV 10)
0:58:37:alg:Debug:got -k + q <= 9
0:57:23:alg:Debug:l18: compute ub for '-a + s', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got -a + s <= 9
0:57:26:alg:Debug:l18: compute ub for '-b - s', start w/ min 9, maxV 10)
0:57:29:alg:Debug:got -b - s <= 9
0:57:29:alg:Debug:l18: compute ub for '-a - q', start w/ min 9, maxV 10)
0:57:33:alg:Debug:got -a - q <= 9
0:57:33:alg:Debug:l18: compute ub for '-x', start w/ min -1, maxV 10)
0:57:48:alg:Debug:got -x <= -1
0:57:48:alg:Debug:l18: compute ub for 'r - y', start w/ min 3, maxV 10)
0:58:1:alg:Debug:got r - y <= 3
0:58:1:alg:Debug:l18: compute ub for '-p - r', start w/ min 8, maxV 10)
0:58:7:alg:Debug:got -p - r <= 8
0:58:7:alg:Debug:l18: compute ub for 'r - s', start w/ min 9, maxV 10)
0:58:10:alg:Debug:got r - s <= 9
0:58:11:alg:Debug:l18: compute ub for '-a - p', start w/ min 7, maxV 10)
0:58:20:alg:Debug:got -a - p <= 7
0:58:20:alg:Debug:l18: compute ub for 'q', start w/ min 9, maxV 10)
0:58:23:alg:Debug:got q <= 9
0:58:23:alg:Debug:l18: compute ub for '-y', start w/ min -1, maxV 10)
0:58:39:alg:Debug:got -y <= -1
0:57:23:alg:Debug:l18: compute ub for '-a - b', start w/ min -1, maxV 10)
0:57:38:alg:Debug:got -a - b <= -1
0:57:38:alg:Debug:l18: compute ub for '-s - x', start w/ min 0, maxV 10)
0:57:54:alg:Debug:got -s - x <= 0
0:57:54:alg:Debug:l18: compute ub for 'q + r', start w/ min 9, maxV 10)
0:57:57:alg:Debug:got q + r <= 9
0:57:57:alg:Debug:l18: compute ub for '-q - x', start w/ min 8, maxV 10)
0:58:4:alg:Debug:got -q - x <= 8
0:58:4:alg:Debug:l18: compute ub for '-b - p', start w/ min 8, maxV 10)
0:58:10:alg:Debug:got -b - p <= 8
0:58:10:alg:Debug:l18: compute ub for 's', start w/ min 9, maxV 10)
0:58:13:alg:Debug:got s <= 9
0:58:14:alg:Debug:l18: compute ub for '-b', start w/ min 0, maxV 10)
0:58:29:alg:Debug:got -b <= 0
0:58:29:alg:Debug:l18: compute ub for 'p - r', start w/ min 9, maxV 10)
0:58:32:alg:Debug:got p - r <= 9
0:58:33:alg:Debug:l18: compute ub for 'p - q', start w/ min 9, maxV 10)
0:58:36:alg:Debug:got p - q <= 9
0:58:36:alg:Debug:l18: compute ub for 'q - x', start w/ min 9, maxV 10)
0:58:39:alg:Debug:got q - x <= 9
0:57:23:alg:Debug:l18: compute ub for '-s - y', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got -s - y <= 9
0:57:26:alg:Debug:l18: compute ub for 'p + s', start w/ min 9, maxV 10)
0:57:29:alg:Debug:got p + s <= 9
0:57:29:alg:Debug:l18: compute ub for 'r - x', start w/ min 0, maxV 10)
0:57:45:alg:Debug:got r - x <= 0
0:57:45:alg:Debug:l18: compute ub for 'r + s', start w/ min 9, maxV 10)
0:57:48:alg:Debug:got r + s <= 9
0:57:48:alg:Debug:l18: compute ub for '-a - r', start w/ min 6, maxV 10)
0:57:58:alg:Debug:got -a - r <= 6
0:57:58:alg:Debug:l18: compute ub for '-q - y', start w/ min 0, maxV 10)
0:58:13:alg:Debug:got -q - y <= 0
0:58:13:alg:Debug:l18: compute ub for 'p + q', start w/ min 9, maxV 10)
0:58:17:alg:Debug:got p + q <= 9
0:58:17:alg:Debug:l18: compute ub for '-b - r', start w/ min 7, maxV 10)
0:58:26:alg:Debug:got -b - r <= 7
0:58:26:alg:Debug:l18: compute ub for '-r - y', start w/ min 3, maxV 10)
0:58:39:alg:Debug:got -r - y <= 3
0:58:39:alg:Debug:l18: compute ub for '-p - q', start w/ min 9, maxV 10)
0:58:42:alg:Debug:got -p - q <= 9
0:57:23:alg:Debug:l28: compute ub for 'q - r', start w/ min 8, maxV 10)
0:57:29:alg:Debug:got q - r <= 8
0:57:30:alg:Debug:l28: compute ub for '-p + s', start w/ min 9, maxV 10)
0:57:33:alg:Debug:got -p + s <= 9
0:57:34:alg:Debug:l28: compute ub for '-k - r', start w/ min 9, maxV 10)
0:57:37:alg:Debug:got -k - r <= 9
0:57:37:alg:Debug:l28: compute ub for 'b - y', start w/ min 0, maxV 10)
0:57:53:alg:Debug:got b - y <= 0
0:57:53:alg:Debug:l28: compute ub for 'k + s', start w/ min 9, maxV 10)
0:57:56:alg:Debug:got k + s <= 9
0:57:57:alg:Debug:l28: compute ub for 'k - x', start w/ min 9, maxV 10)
0:58:0:alg:Debug:got k - x <= 9
0:58:1:alg:Debug:l28: compute ub for '-s - y', start w/ min 3, maxV 10)
0:58:13:alg:Debug:got -s - y <= 3
0:58:14:alg:Debug:l28: compute ub for 'p - y', start w/ min 0, maxV 10)
0:58:29:alg:Debug:got p - y <= 0
0:58:30:alg:Debug:l28: compute ub for '-p', start w/ min 6, maxV 10)
0:58:39:alg:Debug:got -p <= 6
0:58:39:alg:Debug:l28: compute ub for '-c + p', start w/ min 9, maxV 10)
0:58:42:alg:Debug:got -c + p <= 9
0:57:23:alg:Debug:l28: compute ub for '-a', start w/ min -1, maxV 10)
0:57:38:alg:Debug:got -a <= -1
0:57:39:alg:Debug:l28: compute ub for 'q - s', start w/ min 9, maxV 10)
0:57:42:alg:Debug:got q - s <= 9
0:57:43:alg:Debug:l28: compute ub for 'p - x', start w/ min 0, maxV 10)
0:57:58:alg:Debug:got p - x <= 0
0:57:59:alg:Debug:l28: compute ub for '-r - s', start w/ min 8, maxV 10)
0:58:5:alg:Debug:got -r - s <= 8
0:58:6:alg:Debug:l28: compute ub for 'k + r', start w/ min 9, maxV 10)
0:58:9:alg:Debug:got k + r <= 9
0:58:9:alg:Debug:l28: compute ub for '-k + p', start w/ min 9, maxV 10)
0:58:12:alg:Debug:got -k + p <= 9
0:58:13:alg:Debug:l28: compute ub for '-c - q', start w/ min 9, maxV 10)
0:58:16:alg:Debug:got -c - q <= 9
0:58:17:alg:Debug:l28: compute ub for 'k - y', start w/ min 9, maxV 10)
0:58:20:alg:Debug:got k - y <= 9
0:58:20:alg:Debug:l28: compute ub for '-a + r', start w/ min 7, maxV 10)
0:58:30:alg:Debug:got -a + r <= 7
0:58:30:alg:Debug:l28: compute ub for '-r - x', start w/ min -1, maxV 10)
0:58:46:alg:Debug:got -r - x <= -1
0:57:23:alg:Debug:l28: compute ub for 'k - s', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got k - s <= 9
0:57:27:alg:Debug:l28: compute ub for '-r - y', start w/ min 2, maxV 10)
0:57:39:alg:Debug:got -r - y <= 2
0:57:40:alg:Debug:l28: compute ub for '-k - q', start w/ min 9, maxV 10)
0:57:43:alg:Debug:got -k - q <= 9
0:57:44:alg:Debug:l28: compute ub for 'r - y', start w/ min 2, maxV 10)
0:57:56:alg:Debug:got r - y <= 2
0:57:56:alg:Debug:l28: compute ub for '-a + k', start w/ min 0, maxV 10)
0:58:12:alg:Debug:got -a + k <= 0
0:58:13:alg:Debug:l28: compute ub for '-p - x', start w/ min 0, maxV 10)
0:58:28:alg:Debug:got -p - x <= 0
0:58:29:alg:Debug:l28: compute ub for '-p + r', start w/ min 9, maxV 10)
0:58:32:alg:Debug:got -p + r <= 9
0:58:32:alg:Debug:l28: compute ub for '-p - s', start w/ min 9, maxV 10)
0:58:36:alg:Debug:got -p - s <= 9
0:58:36:alg:Debug:l28: compute ub for 'q + s', start w/ min 8, maxV 10)
0:58:42:alg:Debug:got q + s <= 8
0:58:43:alg:Debug:l28: compute ub for 'k - q', start w/ min 9, maxV 10)
0:58:46:alg:Debug:got k - q <= 9
0:57:23:alg:Debug:l28: compute ub for 'p + r', start w/ min 8, maxV 10)
0:57:29:alg:Debug:got p + r <= 8
0:57:30:alg:Debug:l28: compute ub for '-a - p', start w/ min 6, maxV 10)
0:57:39:alg:Debug:got -a - p <= 6
0:57:40:alg:Debug:l28: compute ub for 'q', start w/ min 9, maxV 10)
0:57:43:alg:Debug:got q <= 9
0:57:43:alg:Debug:l28: compute ub for '-y', start w/ min -1, maxV 10)
0:57:59:alg:Debug:got -y <= -1
0:57:59:alg:Debug:l28: compute ub for '-s', start w/ min 9, maxV 10)
0:58:2:alg:Debug:got -s <= 9
0:58:3:alg:Debug:l28: compute ub for '-a + q', start w/ min 7, maxV 10)
0:58:12:alg:Debug:got -a + q <= 7
0:58:13:alg:Debug:l28: compute ub for '-c - r', start w/ min 8, maxV 10)
0:58:19:alg:Debug:got -c - r <= 8
0:58:20:alg:Debug:l28: compute ub for '-a - s', start w/ min 8, maxV 10)
0:58:26:alg:Debug:got -a - s <= 8
0:58:26:alg:Debug:l28: compute ub for '-q + r', start w/ min 8, maxV 10)
0:58:32:alg:Debug:got -q + r <= 8
0:58:33:alg:Debug:l28: compute ub for 'r - x', start w/ min 0, maxV 10)
0:58:48:alg:Debug:got r - x <= 0
0:57:23:alg:Debug:l28: compute ub for '-b + s', start w/ min 8, maxV 10)
0:57:29:alg:Debug:got -b + s <= 8
0:57:30:alg:Debug:l28: compute ub for '-k - y', start w/ min -1, maxV 10)
0:57:45:alg:Debug:got -k - y <= -1
0:57:46:alg:Debug:l28: compute ub for '-c + q', start w/ min 9, maxV 10)
0:57:49:alg:Debug:got -c + q <= 9
0:57:50:alg:Debug:l28: compute ub for 'k + p', start w/ min 9, maxV 10)
0:57:53:alg:Debug:got k + p <= 9
0:57:53:alg:Debug:l28: compute ub for '-x - y', start w/ min -7, maxV 10)
0:58:6:alg:Debug:got -x - y <= -2
0:58:6:alg:Debug:l28: compute ub for 'k - p', start w/ min 9, maxV 10)
0:58:9:alg:Debug:got k - p <= 9
0:58:10:alg:Debug:l28: compute ub for '-b - c', start w/ min -1, maxV 10)
0:58:25:alg:Debug:got -b - c <= -1
0:58:26:alg:Debug:l28: compute ub for '-p - y', start w/ min -2, maxV 10)
0:58:41:alg:Debug:got -p - y <= -2
0:58:42:alg:Debug:l28: compute ub for 'k + q', start w/ min 9, maxV 10)
0:58:45:alg:Debug:got k + q <= 9
0:58:46:alg:Debug:l28: compute ub for '-r + s', start w/ min 9, maxV 10)
0:58:49:alg:Debug:got -r + s <= 9
0:57:23:alg:Debug:l28: compute ub for 'k - r', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got k - r <= 9
0:57:27:alg:Debug:l28: compute ub for '-q - s', start w/ min 8, maxV 10)
0:57:33:alg:Debug:got -q - s <= 8
0:57:33:alg:Debug:l28: compute ub for '-b - q', start w/ min 7, maxV 10)
0:57:43:alg:Debug:got -b - q <= 7
0:57:43:alg:Debug:l28: compute ub for '-b + k', start w/ min 9, maxV 10)
0:57:46:alg:Debug:got -b + k <= 9
0:57:47:alg:Debug:l28: compute ub for '-b - s', start w/ min 6, maxV 10)
0:57:56:alg:Debug:got -b - s <= 6
0:57:57:alg:Debug:l28: compute ub for '-a - b', start w/ min -3, maxV 10)
0:58:12:alg:Debug:got -a - b <= -2
0:58:13:alg:Debug:l28: compute ub for '-a + c', start w/ min 0, maxV 10)
0:58:28:alg:Debug:got -a + c <= 0
0:58:28:alg:Debug:l18: compute ub for '-a - y', start w/ min -2, maxV 10)
0:58:44:alg:Debug:got -a - y <= -2
0:58:44:alg:Debug:l18: compute ub for '-r', start w/ min 9, maxV 10)
0:58:47:alg:Debug:got -r <= 9
0:58:47:alg:Debug:l18: compute ub for '-q', start w/ min 9, maxV 10)
0:58:50:alg:Debug:got -q <= 9
0:57:23:alg:Debug:l28: compute ub for '-c - x', start w/ min -1, maxV 10)
0:57:39:alg:Debug:got -c - x <= -1
0:57:39:alg:Debug:l28: compute ub for '-k - x', start w/ min -1, maxV 10)
0:57:55:alg:Debug:got -k - x <= -1
0:57:55:alg:Debug:l28: compute ub for '-k + r', start w/ min 9, maxV 10)
0:57:58:alg:Debug:got -k + r <= 9
0:57:59:alg:Debug:l28: compute ub for '-b - y', start w/ min -2, maxV 10)
0:58:14:alg:Debug:got -b - y <= -2
0:58:15:alg:Debug:l28: compute ub for '-c + s', start w/ min 9, maxV 10)
0:58:18:alg:Debug:got -c + s <= 9
0:58:18:alg:Debug:l28: compute ub for 'p + s', start w/ min 9, maxV 10)
0:58:21:alg:Debug:got p + s <= 9
0:58:22:alg:Debug:l28: compute ub for '-k - p', start w/ min 9, maxV 10)
0:58:25:alg:Debug:got -k - p <= 9
0:58:25:alg:Debug:l28: compute ub for '-q - r', start w/ min 9, maxV 10)
0:58:29:alg:Debug:got -q - r <= 9
0:58:29:alg:Debug:l28: compute ub for '-q - x', start w/ min 6, maxV 10)
0:58:38:alg:Debug:got -q - x <= 6
0:58:39:alg:Debug:l28: compute ub for '-b - p', start w/ min 5, maxV 10)
0:58:51:alg:Debug:got -b - p <= 5
0:57:23:alg:Debug:l28: compute ub for '-a - c', start w/ min -2, maxV 10)
0:57:38:alg:Debug:got -a - c <= -1
0:57:39:alg:Debug:l28: compute ub for '-q', start w/ min 8, maxV 10)
0:57:45:alg:Debug:got -q <= 8
0:57:46:alg:Debug:l28: compute ub for 'r + s', start w/ min 9, maxV 10)
0:57:49:alg:Debug:got r + s <= 9
0:57:49:alg:Debug:l28: compute ub for '-c - s', start w/ min 9, maxV 10)
0:57:53:alg:Debug:got -c - s <= 9
0:57:53:alg:Debug:l28: compute ub for 'r', start w/ min 9, maxV 10)
0:57:56:alg:Debug:got r <= 9
0:57:57:alg:Debug:l28: compute ub for '-a - r', start w/ min 4, maxV 10)
0:58:9:alg:Debug:got -a - r <= 4
0:58:10:alg:Debug:l28: compute ub for '-b - k', start w/ min -1, maxV 10)
0:58:25:alg:Debug:got -b - k <= -1
0:58:26:alg:Debug:l28: compute ub for '-k - s', start w/ min 9, maxV 10)
0:58:29:alg:Debug:got -k - s <= 9
0:58:29:alg:Debug:l28: compute ub for '-c', start w/ min 0, maxV 10)
0:58:45:alg:Debug:got -c <= 0
0:58:45:alg:Debug:l28: compute ub for '-b + q', start w/ min 8, maxV 10)
0:58:51:alg:Debug:got -b + q <= 8
0:57:23:alg:Debug:l28: compute ub for 'q + r', start w/ min 8, maxV 10)
0:57:29:alg:Debug:got q + r <= 8
0:57:30:alg:Debug:l28: compute ub for '-a + s', start w/ min 9, maxV 10)
0:57:33:alg:Debug:got -a + s <= 9
0:57:34:alg:Debug:l28: compute ub for '-c + r', start w/ min 9, maxV 10)
0:57:37:alg:Debug:got -c + r <= 9
0:57:37:alg:Debug:l28: compute ub for '-a - q', start w/ min 9, maxV 10)
0:57:40:alg:Debug:got -a - q <= 9
0:57:41:alg:Debug:l28: compute ub for '-x', start w/ min -1, maxV 10)
0:57:56:alg:Debug:got -x <= -1
0:57:57:alg:Debug:l28: compute ub for '-b - x', start w/ min -2, maxV 10)
0:58:13:alg:Debug:got -b - x <= -2
0:58:13:alg:Debug:l28: compute ub for '-a - y', start w/ min -4, maxV 10)
0:58:25:alg:Debug:got -a - y <= -2
0:58:26:alg:Debug:l28: compute ub for '-a + p', start w/ min 8, maxV 10)
0:58:32:alg:Debug:got -a + p <= 8
0:58:33:alg:Debug:l28: compute ub for '-c - p', start w/ min 9, maxV 10)
0:58:36:alg:Debug:got -c - p <= 9
0:58:37:alg:Debug:l28: compute ub for '-a - x', start w/ min -2, maxV 10)
0:58:52:alg:Debug:got -a - x <= -2
0:57:23:alg:Debug:l18: compute ub for '-p - y', start w/ min -1, maxV 10)
0:57:38:alg:Debug:got -p - y <= -1
0:57:38:alg:Debug:l18: compute ub for '-p - s', start w/ min 9, maxV 10)
0:57:42:alg:Debug:got -p - s <= 9
0:57:42:alg:Debug:l18: compute ub for '-q - s', start w/ min 9, maxV 10)
0:57:45:alg:Debug:got -q - s <= 9
0:57:45:alg:Debug:l18: compute ub for '-a + p', start w/ min 8, maxV 10)
0:57:51:alg:Debug:got -a + p <= 8
0:57:52:alg:Debug:l18: compute ub for '-b + q', start w/ min 9, maxV 10)
0:57:55:alg:Debug:got -b + q <= 9
0:57:55:alg:Debug:l18: compute ub for '-a', start w/ min -1, maxV 10)
0:58:10:alg:Debug:got -a <= -1
0:58:11:alg:Debug:l18: compute ub for '-a - x', start w/ min -2, maxV 10)
0:58:26:alg:Debug:got -a - x <= -2
0:58:26:alg:Debug:l18: compute ub for 'q - s', start w/ min 9, maxV 10)
0:58:29:alg:Debug:l18: compute ub for '-b - y', start w/ min -1, maxV 10)
0:58:45:alg:Debug:got -b - y <= -1
0:58:45:alg:Debug:l18: compute ub for 'p - x', start w/ min 1, maxV 10)
0:59:0:alg:Debug:got p - x <= 1
0:57:23:alg:Debug:l28: compute ub for '-q - y', start w/ min -1, maxV 10)
0:57:39:alg:Debug:got -q - y <= -1
0:57:39:alg:Debug:l28: compute ub for '-b - r', start w/ min 7, maxV 10)
0:57:48:alg:Debug:got -b - r <= 7
0:57:49:alg:Debug:l28: compute ub for '-c + k', start w/ min 9, maxV 10)
0:57:52:alg:Debug:got -c + k <= 9
0:57:53:alg:Debug:l28: compute ub for 'p + q', start w/ min 9, maxV 10)
0:57:56:alg:Debug:got p + q <= 9
0:57:56:alg:Debug:l28: compute ub for '-s - x', start w/ min -1, maxV 10)
0:58:12:alg:Debug:got -s - x <= -1
0:58:12:alg:Debug:l28: compute ub for '-p - q', start w/ min 7, maxV 10)
0:58:22:alg:Debug:got -p - q <= 7
0:58:22:alg:Debug:l28: compute ub for '-k + s', start w/ min 9, maxV 10)
0:58:25:alg:Debug:got -k + s <= 9
0:58:26:alg:Debug:l28: compute ub for '-b + p', start w/ min 9, maxV 10)
0:58:29:alg:Debug:got -b + p <= 9
0:58:30:alg:Debug:l28: compute ub for 'q - x', start w/ min 1, maxV 10)
0:58:45:alg:Debug:got q - x <= 1
0:58:45:alg:Debug:l28: compute ub for '-k', start w/ min 0, maxV 10)
0:59:1:alg:Debug:got -k <= 0
0:57:23:alg:Debug:l28: compute ub for 's', start w/ min 9, maxV 10)
0:57:26:alg:Debug:got s <= 9
0:57:27:alg:Debug:l28: compute ub for '-c - y', start w/ min -1, maxV 10)
0:57:42:alg:Debug:got -c - y <= -1
0:57:43:alg:Debug:l28: compute ub for '-b', start w/ min -1, maxV 10)
0:57:58:alg:Debug:got -b <= -1
0:57:59:alg:Debug:l28: compute ub for 'p - r', start w/ min 9, maxV 10)
0:58:2:alg:Debug:got p - r <= 9
0:58:3:alg:Debug:l28: compute ub for '-p + q', start w/ min 9, maxV 10)
0:58:6:alg:Debug:got -p + q <= 9
0:58:6:alg:Debug:l28: compute ub for 's - x', start w/ min 0, maxV 10)
0:58:22:alg:Debug:got s - x <= 0
0:58:22:alg:Debug:l28: compute ub for 'p', start w/ min 5, maxV 10)
0:58:35:alg:Debug:got p <= 5
0:58:35:alg:Debug:l28: compute ub for 'p - q', start w/ min 9, maxV 10)
0:58:38:alg:Debug:got p - q <= 9
0:58:39:alg:Debug:l28: compute ub for '-c - k', start w/ min -1, maxV 10)
0:58:54:alg:Debug:got -c - k <= -1
0:58:55:alg:Debug:l28: compute ub for '-b + r', start w/ min 7, maxV 10)
0:59:4:alg:Debug:got -b + r <= 7
0:59:4:alg:Info:191 invs:
l28: -k - s <= 9, -c <= 0, -b + q <= 8, q + r <= 8, -a + s <= 9, -c + r <= 9, -a - q <= 9, -x <= -1, -b - x <= -2, -a - y <= -2, -a + p <= 8, -c - p <= 9, -a - x <= -2, -q - y <= -1, -b - r <= 7, -c + k <= 9, p + q <= 9, -s - x <= -1, -p - q <= 7, -k + s <= 9, -b + p <= 9, q - x <= 1, -k <= 0, s <= 9, -c - y <= -1, -b <= -1, p - r <= 9, -p + q <= 9, s - x <= 0, p <= 5, p - q <= 9, -c - k <= -1, -b + r <= 7, -k - r <= 9, -p + s <= 9, q - r <= 8, -q - r <= 9, -b + k <= 9, -k - p <= 9, -b - y <= -2, -k + r <= 9, -a + c <= 0, -k - x <= -1, -b - s <= 6, -q - s <= 8, k - r <= 9, -r + s <= 9, p + s <= 9, -c + s <= 9, -a - b <= -2, k + q <= 9, -b - q <= 7, -c - x <= -1, -p - y <= -2, -b - p <= 5, -a - c <= -1, -q - x <= 6, -q <= 8, r + s <= 9, -c - s <= 9, r <= 9, -a - r <= 4, -b - k <= -1, -s - y <= 3, k - x <= 9, p - y <= 0, k + s <= 9, -b - c <= -1, -p - x <= 0, q + s <= 8, -y <= -1, -c - r <= 8, -a <= -1, -r - s <= 8, k - y <= 9, k - s <= 9, k + r <= 9, b - y <= 0, k - q <= 9, -r - y <= 2, q - s <= 9, -s <= 9, -p + r <= 9, -a + r <= 7, -p <= 6, -a - p <= 6, r - y <= 2, -k + p <= 9, p + r <= 8, -k - q <= 9, p - x <= 0, -a + q <= 7, -p - s <= 9, -r - x <= -1, -c + p <= 9, q <= 9, -a + k <= 0, -c - q <= 9, k + p <= 9, -c + q <= 9, k - p <= 9, -k - y <= -1, -b + s <= 8, -x - y <= -2, r - x <= 0, -q + r <= 8, -a - s <= 8, k <= 9, q - y <= -1, r - s <= 9, -k + q <= 9, p - s <= 9, s - y <= 3, -p - r <= 8, -r <= 9, -a - k <= -1, b*k - a + c == 0
l18: -p - y <= -1, -p - s <= 9, -q - s <= 9, -a + p <= 8, -b + q <= 9, -a <= -1, -a - x <= -2, -b - y <= -1, p - x <= 1, p - q <= 9, r - x <= 0, -b - p <= 8, -b <= 0, -a - b <= -1, -s - x <= 0, -y <= -1, r - y <= 3, q <= 9, -a - p <= 7, r + s <= 9, -a - r <= 6, p + s <= 9, -s - y <= 9, q - x <= 9, q + r <= 9, -p - q <= 9, s <= 9, -r - y <= 3, -b - r <= 7, p + q <= 9, -q - y <= 0, -q - x <= 8, p - r <= 9, r - s <= 9, -p - r <= 8, -r <= 9, -q <= 9, -a - y <= -2, s - y <= 9, -p + r <= 9, -s <= 9, -r - s <= 9, -b + s <= 9, p - y <= 0, -b - q <= 9, -b - x <= -1, -p - x <= 6, q - r <= 9, b - y <= 0, -x - y <= -2, -a - s <= 9, -p + s <= 9, -a + q <= 9, r <= 9, -b + p <= 9, q + s <= 9, p + r <= 8, -q + r <= 9, s - x <= 0, -p <= 8, p <= 9, p - s <= 9, -a + r <= 8, -a + s <= 9, -p + q <= 9, -q - r <= 9, -b + r <= 9, -x <= -1, -a - q <= 9, -b - s <= 9, -r - x <= -1, q - y <= 0, q*x + s*y - b == 0, p*x + r*y - a == 0
0:59:4:alg:Info:test 191 invs on all 2778 traces
0:59:4:ds:Warn:l28: -q <= 8 disproved
0:59:4:ds:Warn:l28: -r - s <= 8 disproved
0:59:4:ds:Warn:l28: r + s <= 9 disproved
0:59:4:ds:Warn:l28: q - s <= 9 disproved
0:59:4:ds:Warn:l28: -b + q <= 8 disproved
0:59:4:ds:Warn:l28: -k - s <= 9 disproved
0:59:5:ds:Warn:l28: r <= 9 disproved
0:59:5:ds:Warn:l28: -k - r <= 9 disproved
0:59:5:ds:Warn:l28: -a + r <= 7 disproved
0:59:5:ds:Warn:l28: -b - s <= 6 disproved
0:59:5:ds:Warn:l28: -k + p <= 9 disproved
0:59:5:ds:Warn:l28: k - y <= 9 disproved
0:59:5:ds:Warn:l28: -p + r <= 9 disproved
0:59:5:ds:Warn:l28: -c + r <= 9 disproved
0:59:5:ds:Warn:l28: -a + s <= 9 disproved
0:59:5:ds:Warn:l28: k + p <= 9 disproved
0:59:5:ds:Warn:l28: -a - q <= 9 disproved
0:59:5:ds:Warn:l28: -c - p <= 9 disproved
0:59:6:ds:Warn:l28: -p - s <= 9 disproved
0:59:6:ds:Warn:l28: -b - p <= 5 disproved
0:59:6:ds:Warn:l28: -k + s <= 9 disproved
0:59:6:ds:Warn:l28: -c + s <= 9 disproved
0:59:6:ds:Warn:l28: s <= 9 disproved
0:59:6:ds:Warn:l28: q + r <= 8 disproved
0:59:6:ds:Warn:l28: -q - r <= 9 disproved
0:59:6:ds:Warn:l28: s - y <= 3 disproved
0:59:6:ds:Warn:l28: -p + q <= 9 disproved
0:59:6:ds:Warn:l28: p - q <= 9 disproved
0:59:6:ds:Warn:l28: -k - q <= 9 disproved
0:59:6:ds:Warn:l28: k - q <= 9 disproved
0:59:6:ds:Warn:l28: p <= 5 disproved
0:59:6:ds:Warn:l28: -r - y <= 2 disproved
0:59:6:ds:Warn:l28: -p + s <= 9 disproved
0:59:6:ds:Warn:l28: k + q <= 9 disproved
0:59:6:ds:Warn:l28: -q - x <= 6 disproved
0:59:6:ds:Warn:l28: -r <= 9 disproved
0:59:6:ds:Warn:l28: -b + r <= 7 disproved
0:59:6:ds:Warn:l28: p - r <= 9 disproved
0:59:6:ds:Warn:l28: -p - q <= 7 disproved
0:59:7:ds:Warn:l28: p + s <= 9 disproved
0:59:7:ds:Warn:l28: r - y <= 2 disproved
0:59:7:ds:Warn:l28: -b - r <= 7 disproved
0:59:7:ds:Warn:l28: -k + q <= 9 disproved
0:59:7:ds:Warn:l28: k <= 9 disproved
0:59:7:ds:Warn:l28: -c + k <= 9 disproved
0:59:7:ds:Warn:l28: -s - y <= 3 disproved
0:59:7:ds:Warn:l28: -q + r <= 8 disproved
0:59:8:ds:Warn:l28: -c - s <= 9 disproved
0:59:9:ds:Warn:l28: k - x <= 9 disproved
0:59:9:ds:Warn:l28: k + s <= 9 disproved
0:59:9:ds:Warn:l28: p - s <= 9 disproved
0:59:9:ds:Warn:l28: -c + p <= 9 disproved
0:59:9:ds:Warn:l28: k + r <= 9 disproved
0:59:9:ds:Warn:l28: q <= 9 disproved
0:59:9:ds:Warn:l28: -p <= 6 disproved
0:59:9:ds:Warn:l28: -a + q <= 7 disproved
0:59:9:ds:Warn:l28: q - r <= 8 disproved
0:59:9:ds:Warn:l28: -s <= 9 disproved
0:59:9:ds:Warn:l28: p + r <= 8 disproved
0:59:9:ds:Warn:l28: -a - s <= 8 disproved
0:59:9:ds:Warn:l28: -c - r <= 8 disproved
0:59:9:ds:Warn:l28: -p - r <= 8 disproved
0:59:9:ds:Warn:l28: -b + s <= 8 disproved
0:59:9:ds:Warn:l28: -a - r <= 4 disproved
0:59:9:ds:Warn:l28: -k - p <= 9 disproved
0:59:9:ds:Warn:l28: -c + q <= 9 disproved
0:59:10:ds:Warn:l28: -c - q <= 9 disproved
0:59:10:ds:Warn:l28: k - r <= 9 disproved
0:59:10:ds:Warn:l28: -b - q <= 7 disproved
0:59:10:ds:Warn:l28: k - p <= 9 disproved
0:59:10:ds:Warn:l28: k - s <= 9 disproved
0:59:10:ds:Warn:l28: -k + r <= 9 disproved
0:59:10:ds:Warn:l28: -q - s <= 8 disproved
0:59:10:ds:Warn:l28: q + s <= 8 disproved
0:59:10:ds:Warn:l28: -b + k <= 9 disproved
0:59:11:ds:Warn:l28: -r + s <= 9 disproved
0:59:11:ds:Warn:l28: r - s <= 9 disproved
0:59:11:ds:Warn:l18: -r - s <= 9 disproved
0:59:11:ds:Warn:l18: -q <= 9 disproved
0:59:11:ds:Warn:l18: r + s <= 9 disproved
0:59:11:ds:Warn:l18: -a + p <= 8 disproved
0:59:11:ds:Warn:l18: -a + q <= 9 disproved
0:59:11:ds:Warn:l18: r <= 9 disproved
0:59:11:ds:Warn:l18: q - x <= 9 disproved
0:59:11:ds:Warn:l18: -s <= 9 disproved
0:59:11:ds:Warn:l18: -p - r <= 8 disproved
0:59:11:ds:Warn:l18: -p + r <= 9 disproved
0:59:11:ds:Warn:l18: -a - s <= 9 disproved
0:59:11:ds:Warn:l18: p + s <= 9 disproved
0:59:11:ds:Warn:l18: p + q <= 9 disproved
0:59:11:ds:Warn:l18: -p - s <= 9 disproved
0:59:11:ds:Warn:l18: r - y <= 3 disproved
0:59:11:ds:Warn:l18: -b + p <= 9 disproved
0:59:11:ds:Warn:l18: -r <= 9 disproved
0:59:11:ds:Warn:l18: -b + q <= 9 disproved
0:59:11:ds:Warn:l18: q + s <= 9 disproved
0:59:11:ds:Warn:l18: p - r <= 9 disproved
0:59:11:ds:Warn:l18: -s - y <= 9 disproved
0:59:11:ds:Warn:l18: -q + r <= 9 disproved
0:59:11:ds:Warn:l18: -p - q <= 9 disproved
0:59:11:ds:Warn:l18: -a - r <= 6 disproved
0:59:11:ds:Warn:l18: -b - p <= 8 disproved
0:59:11:ds:Warn:l18: s <= 9 disproved
0:59:11:ds:Warn:l18: q + r <= 9 disproved
0:59:12:ds:Warn:l18: -q - x <= 8 disproved
0:59:12:ds:Warn:l18: q - r <= 9 disproved
0:59:12:ds:Warn:l18: -b + s <= 9 disproved
0:59:12:ds:Warn:l18: -p - x <= 6 disproved
0:59:12:ds:Warn:l18: -b + r <= 9 disproved
0:59:12:ds:Warn:l18: p <= 9 disproved
0:59:12:ds:Warn:l18: -p + q <= 9 disproved
0:59:12:ds:Warn:l18: s - y <= 9 disproved
0:59:12:ds:Warn:l18: p - q <= 9 disproved
0:59:12:ds:Warn:l18: -b - s <= 9 disproved
0:59:12:ds:Warn:l18: -a + r <= 8 disproved
0:59:12:ds:Warn:l18: -b - q <= 9 disproved
0:59:12:ds:Warn:l18: -q - s <= 9 disproved
0:59:12:ds:Warn:l18: -p + s <= 9 disproved
0:59:12:ds:Warn:l18: -a - p <= 7 disproved
0:59:12:ds:Warn:l18: -r - y <= 3 disproved
0:59:12:ds:Warn:l18: -p <= 8 disproved
0:59:12:ds:Warn:l18: p - s <= 9 disproved
0:59:12:ds:Warn:l18: -a + s <= 9 disproved
0:59:12:ds:Warn:l18: -a - q <= 9 disproved
0:59:12:ds:Warn:l18: -b - r <= 7 disproved
0:59:12:ds:Warn:l18: -q - r <= 9 disproved
0:59:12:ds:Warn:l18: q <= 9 disproved
0:59:12:ds:Warn:l18: r - s <= 9 disproved
0:59:12:ds:Warn:l18: p + r <= 8 disproved
0:59:12:alg:Info:find uniq invs
0:59:12:alg:Info:62 invs:
l28: -c <= 0, -x <= -1, -b - x <= -2, -a - y <= -2, -a + p <= 8, -a - x <= -2, -q - y <= -1, p + q <= 9, -s - x <= -1, -b + p <= 9, q - x <= 1, -k <= 0, -c - y <= -1, -b <= -1, s - x <= 0, -c - k <= -1, -b - y <= -2, -a + c <= 0, -k - x <= -1, -a - b <= -2, -c - x <= -1, -p - y <= -2, -a - c <= -1, -b - k <= -1, p - y <= 0, -b - c <= -1, -p - x <= 0, -y <= -1, -a <= -1, b - y <= 0, -a - p <= 6, p - x <= 0, -r - x <= -1, -a + k <= 0, -k - y <= -1, -x - y <= -2, r - x <= 0, q - y <= -1, -a - k <= -1, b*k - a + c == 0
l18: -p - y <= -1, -a <= -1, -a - x <= -2, -b - y <= -1, p - x <= 1, r - x <= 0, -b <= 0, -a - b <= -1, -s - x <= 0, -y <= -1, -q - y <= 0, -a - y <= -2, p - y <= 0, -b - x <= -1, b - y <= 0, -x - y <= -2, s - x <= 0, -x <= -1, -r - x <= -1, q - y <= 0, q*x + s*y - b == 0, p*x + r*y - a == 0
0:59:12:miscs:Debug:workloads 'uniqify' 2: [1, 1]
0:59:14:alg:Info:removed 26 redundant invs
0:59:14:alg:Info:got 36 invs, 194 inps (test 51): 
l28: -a + p <= 8, -x <= -1, -p - y <= -2, -c <= 0, -c - k <= -1, b*k - a + c == 0, -b <= -1, p - y <= 0, -s - x <= -1, -p - x <= 0, b - y <= 0, -a + c <= 0, -a - p <= 6, r - x <= 0, q - x <= 1, s - x <= 0, -q - y <= -1, p - x <= 0, -b + p <= 9, -r - x <= -1, p + q <= 9, q - y <= -1
l18: -a <= -1, -b <= 0, q*x + s*y - b == 0, s - x <= 0, b - y <= 0, p - x <= 1, r - x <= 0, -r - x <= -1, p - y <= 0, -x <= -1, q - y <= 0, -p - y <= -1, p*x + r*y - a == 0, -y <= -1
0:59:14:alg:Info:*done* prog programs/nla/egcd2.c, invs 36, time 216.742465019 s
0:59:14:alg:Debug:rm -rf /var/tmp/DIG2_rKpnRt
0:59:15:alg:Debug:src: /var/tmp/DIG2_zzfWyI/egcd2.c
0:59:15:alg:Info:analyze programs/nla/egcd2.c
0:59:15:alg:Info:set seed to: 1.0 (test 83)
0:59:15:miscs:Info:autodeg 2
0:59:15:alg:Info:check reachability
0:59:15:alg:Info:gen eqts at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
0:59:15:alg:Debug:l18: need more traces (21 eqts, need >= 67)
0:59:15:alg:Debug:obtain 17 new traces
0:59:15:alg:Debug:l18: need more traces (38 eqts, need >= 67)
0:59:16:alg:Debug:obtain 20 new traces
0:59:16:alg:Debug:l18: need more traces (58 eqts, need >= 67)
0:59:16:alg:Debug:obtain 20 new traces
0:59:16:miscs:Debug:workloads 'find eqts' 2: [1, 1]
0:59:16:alg:Debug:l18: infer using 67 exprs
0:59:16:miscs:Debug:solve 45 uks using 67 eqts
0:59:17:alg:Debug:l18: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
0:59:17:alg:Debug:l18: check 2 unchecked (2 candidates)
0:59:17:miscs:Debug:workloads 'prove' 2: [1, 1]
0:59:20:alg:Debug:l18: no disproved candidates -- break
0:59:16:alg:Debug:l28: infer using 99 exprs
0:59:16:miscs:Debug:solve 66 uks using 99 eqts
0:59:22:alg:Debug:l28: 3 candidates:
b*k - a + c == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
0:59:22:alg:Debug:l28: check 3 unchecked (3 candidates)
0:59:22:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
0:59:25:alg:Debug:l28: no disproved candidates -- break
0:59:25:alg:Debug:l18: got 2 eqts, 0 new inps
0:59:25:alg:Debug:q*x + s*y - b == 0
p*x + r*y - a == 0
0:59:25:alg:Debug:l28: got 3 eqts, 0 new inps
0:59:25:alg:Debug:q*x + s*y - b == 0
b*k - a + c == 0
p*x + r*y - a == 0
0:59:25:alg:Info:5 invs:
l28: q*x + s*y - b == 0, b*k - a + c == 0, p*x + r*y - a == 0
l18: q*x + s*y - b == 0, p*x + r*y - a == 0
0:59:25:alg:Info:gen ieqs at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
0:59:25:alg:Info:2 locs: check upperbounds for 328 terms
0:59:25:miscs:Debug:workloads 'prove' 20: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24]
1:0:37:alg:Info:2 locs: compute upperbounds for 191 terms
1:0:37:miscs:Debug:workloads 'guesscheck' 20: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1]
1:0:37:alg:Debug:l18: compute ub for '-b - x', start w/ min -1, maxV 10)
1:0:52:alg:Debug:got -b - x <= -1
1:0:37:alg:Debug:l18: compute ub for 'r + s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got r + s <= 9
1:0:40:alg:Debug:l18: compute ub for '-s', start w/ min 9, maxV 10)
1:0:43:alg:Debug:got -s <= 9
1:0:44:alg:Debug:l18: compute ub for '-a - r', start w/ min 8, maxV 10)
1:0:50:alg:Debug:got -a - r <= 8
1:0:50:alg:Debug:l18: compute ub for 'p - r', start w/ min 9, maxV 10)
1:0:53:alg:Debug:got p - r <= 9
1:0:53:alg:Debug:l18: compute ub for 'r', start w/ min 9, maxV 10)
1:0:56:alg:Debug:got r <= 9
1:0:57:alg:Debug:l18: compute ub for '-a + q', start w/ min 9, maxV 10)
1:1:0:alg:Debug:got -a + q <= 9
1:1:0:alg:Debug:l18: compute ub for '-x - y', start w/ min -7, maxV 10)
1:1:12:alg:Debug:got -x - y <= -2
1:1:12:alg:Debug:l18: compute ub for '-a - s', start w/ min 9, maxV 10)
1:1:15:alg:Debug:got -a - s <= 9
1:1:16:alg:Debug:l18: compute ub for '-p + q', start w/ min 9, maxV 10)
1:1:19:alg:Debug:got -p + q <= 9
1:1:19:alg:Debug:l18: compute ub for '-p + r', start w/ min 9, maxV 10)
1:1:22:alg:Debug:got -p + r <= 9
1:0:37:alg:Debug:l18: compute ub for '-b - p', start w/ min 8, maxV 10)
1:0:43:alg:Debug:got -b - p <= 8
1:0:43:alg:Debug:l18: compute ub for 'r - s', start w/ min 9, maxV 10)
1:0:47:alg:Debug:got r - s <= 9
1:0:47:alg:Debug:l18: compute ub for '-b', start w/ min 0, maxV 10)
1:1:2:alg:Debug:got -b <= 0
1:1:2:alg:Debug:l18: compute ub for '-b + p', start w/ min 9, maxV 10)
1:1:6:alg:Debug:got -b + p <= 9
1:1:6:alg:Debug:l18: compute ub for 'p', start w/ min 9, maxV 10)
1:1:9:alg:Debug:got p <= 9
1:1:9:alg:Debug:l18: compute ub for 'q - x', start w/ min 9, maxV 10)
1:1:12:alg:Debug:got q - x <= 9
1:1:12:alg:Debug:l18: compute ub for '-q + r', start w/ min 9, maxV 10)
1:1:15:alg:Debug:got -q + r <= 9
1:1:16:alg:Debug:l18: compute ub for 'p + s', start w/ min 9, maxV 10)
1:1:19:alg:Debug:got p + s <= 9
1:1:19:alg:Debug:l18: compute ub for 's - x', start w/ min 0, maxV 10)
1:1:34:alg:Debug:got s - x <= 0
1:1:35:alg:Debug:l18: compute ub for 'p - q', start w/ min 9, maxV 10)
1:1:38:alg:Debug:got p - q <= 9
1:0:37:alg:Debug:l18: compute ub for '-b + r', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -b + r <= 9
1:0:40:alg:Debug:l18: compute ub for '-b - q', start w/ min 9, maxV 10)
1:0:43:alg:Debug:got -b - q <= 9
1:0:44:alg:Debug:l18: compute ub for '-q + s', start w/ min 9, maxV 10)
1:0:47:alg:Debug:l18: compute ub for '-a - b', start w/ min -1, maxV 10)
1:1:2:alg:Debug:got -a - b <= -1
1:1:3:alg:Debug:l18: compute ub for 'p - s', start w/ min 9, maxV 10)
1:1:6:alg:Debug:got p - s <= 9
1:1:6:alg:Debug:l18: compute ub for 'q - r', start w/ min 9, maxV 10)
1:1:9:alg:Debug:got q - r <= 9
1:1:9:alg:Debug:l18: compute ub for '-p', start w/ min 8, maxV 10)
1:1:15:alg:Debug:got -p <= 8
1:1:16:alg:Debug:l18: compute ub for '-p - r', start w/ min 8, maxV 10)
1:1:22:alg:Debug:got -p - r <= 8
1:1:22:alg:Debug:l18: compute ub for '-p - y', start w/ min -1, maxV 10)
1:1:37:alg:Debug:got -p - y <= -1
1:1:38:alg:Debug:l18: compute ub for '-a + s', start w/ min 9, maxV 10)
1:1:41:alg:Debug:got -a + s <= 9
1:0:37:alg:Debug:l28: compute ub for '-b + k', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -b + k <= 9
1:0:41:alg:Debug:l28: compute ub for '-b - s', start w/ min 8, maxV 10)
1:0:47:alg:Debug:got -b - s <= 8
1:0:48:alg:Debug:l28: compute ub for 'k - r', start w/ min 9, maxV 10)
1:0:51:alg:Debug:got k - r <= 9
1:0:51:alg:Debug:l28: compute ub for 'k + r', start w/ min 9, maxV 10)
1:0:54:alg:Debug:got k + r <= 9
1:0:55:alg:Debug:l28: compute ub for '-r + s', start w/ min 9, maxV 10)
1:0:58:alg:Debug:got -r + s <= 9
1:0:59:alg:Debug:l28: compute ub for 's - y', start w/ min 9, maxV 10)
1:1:2:alg:Debug:got s - y <= 9
1:1:2:alg:Debug:l28: compute ub for '-a + c', start w/ min 0, maxV 10)
1:1:18:alg:Debug:got -a + c <= 0
1:1:18:alg:Debug:l18: compute ub for '-a - y', start w/ min -2, maxV 10)
1:1:34:alg:Debug:got -a - y <= -2
1:1:34:alg:Debug:l18: compute ub for '-a + p', start w/ min 8, maxV 10)
1:1:40:alg:Debug:got -a + p <= 8
1:1:40:alg:Debug:l18: compute ub for '-q', start w/ min 9, maxV 10)
1:1:43:alg:Debug:got -q <= 9
1:0:37:alg:Debug:l28: compute ub for 'k', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got k <= 9
1:0:41:alg:Debug:l28: compute ub for 'q - s', start w/ min 9, maxV 10)
1:0:45:alg:Debug:l28: compute ub for 'p - r', start w/ min 9, maxV 10)
1:0:48:alg:Debug:got p - r <= 9
1:0:48:alg:Debug:l28: compute ub for '-p + s', start w/ min 8, maxV 10)
1:0:55:alg:Debug:got -p + s <= 8
1:0:55:alg:Debug:l28: compute ub for '-p - r', start w/ min 7, maxV 10)
1:1:4:alg:Debug:got -p - r <= 7
1:1:5:alg:Debug:l28: compute ub for '-r - s', start w/ min 8, maxV 10)
1:1:11:alg:Debug:got -r - s <= 8
1:1:12:alg:Debug:l28: compute ub for '-r', start w/ min 8, maxV 10)
1:1:18:alg:Debug:got -r <= 8
1:1:19:alg:Debug:l28: compute ub for '-a - k', start w/ min -1, maxV 10)
1:1:34:alg:Debug:got -a - k <= -1
1:1:35:alg:Debug:l28: compute ub for '-r - y', start w/ min 8, maxV 10)
1:1:41:alg:Debug:got -r - y <= 8
1:1:41:alg:Debug:l28: compute ub for '-k + q', start w/ min 9, maxV 10)
1:1:44:alg:Debug:got -k + q <= 9
1:0:37:alg:Debug:l18: compute ub for '-r', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -r <= 9
1:0:40:alg:Debug:l18: compute ub for 'p + q', start w/ min 9, maxV 10)
1:0:43:alg:Debug:got p + q <= 9
1:0:44:alg:Debug:l18: compute ub for '-a - q', start w/ min 9, maxV 10)
1:0:47:alg:Debug:got -a - q <= 9
1:0:47:alg:Debug:l18: compute ub for 'p + r', start w/ min 8, maxV 10)
1:0:53:alg:Debug:got p + r <= 8
1:0:53:alg:Debug:l18: compute ub for '-r - y', start w/ min 8, maxV 10)
1:1:0:alg:Debug:got -r - y <= 8
1:1:0:alg:Debug:l18: compute ub for '-x', start w/ min -1, maxV 10)
1:1:15:alg:Debug:got -x <= -1
1:1:15:alg:Debug:l18: compute ub for '-r + s', start w/ min 9, maxV 10)
1:1:19:alg:Debug:got -r + s <= 9
1:1:19:alg:Debug:l18: compute ub for 'q', start w/ min 9, maxV 10)
1:1:22:alg:Debug:got q <= 9
1:1:22:alg:Debug:l18: compute ub for '-a - p', start w/ min 7, maxV 10)
1:1:31:alg:Debug:got -a - p <= 7
1:1:31:alg:Debug:l18: compute ub for '-y', start w/ min -1, maxV 10)
1:1:47:alg:Debug:got -y <= -1
1:0:37:alg:Debug:l28: compute ub for 'k + q', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got k + q <= 9
1:0:41:alg:Debug:l28: compute ub for 'r - y', start w/ min 9, maxV 10)
1:0:44:alg:Debug:got r - y <= 9
1:0:45:alg:Debug:l28: compute ub for '-a + k', start w/ min 0, maxV 10)
1:1:0:alg:Debug:got -a + k <= 0
1:1:1:alg:Debug:l28: compute ub for '-p + r', start w/ min 9, maxV 10)
1:1:4:alg:Debug:got -p + r <= 9
1:1:4:alg:Debug:l28: compute ub for '-p - s', start w/ min 9, maxV 10)
1:1:7:alg:Debug:got -p - s <= 9
1:1:8:alg:Debug:l28: compute ub for 'k - q', start w/ min 9, maxV 10)
1:1:11:alg:Debug:got k - q <= 9
1:1:12:alg:Debug:l28: compute ub for '-q - y', start w/ min -1, maxV 10)
1:1:27:alg:Debug:got -q - y <= -1
1:1:27:alg:Debug:l28: compute ub for '-b - r', start w/ min 4, maxV 10)
1:1:40:alg:Debug:got -b - r <= 4
1:1:40:alg:Debug:l28: compute ub for '-c + k', start w/ min 8, maxV 10)
1:1:46:alg:Debug:got -c + k <= 8
1:1:47:alg:Debug:l28: compute ub for '-p - q', start w/ min 7, maxV 10)
1:1:56:alg:Debug:got -p - q <= 7
1:0:37:alg:Debug:l18: compute ub for '-p + s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -p + s <= 9
1:0:40:alg:Debug:l18: compute ub for 'r - y', start w/ min 9, maxV 10)
1:0:43:alg:Debug:got r - y <= 9
1:0:44:alg:Debug:l18: compute ub for 'q - y', start w/ min 0, maxV 10)
1:0:59:alg:Debug:got q - y <= 0
1:0:59:alg:Debug:l18: compute ub for '-a + r', start w/ min 8, maxV 10)
1:1:5:alg:Debug:got -a + r <= 8
1:1:6:alg:Debug:l18: compute ub for '-r - x', start w/ min -1, maxV 10)
1:1:21:alg:Debug:got -r - x <= -1
1:1:21:alg:Debug:l18: compute ub for 's - y', start w/ min 9, maxV 10)
1:1:24:alg:Debug:got s - y <= 9
1:1:25:alg:Debug:l18: compute ub for '-q - r', start w/ min 9, maxV 10)
1:1:28:alg:Debug:got -q - r <= 9
1:1:28:alg:Debug:l18: compute ub for 'b - y', start w/ min 0, maxV 10)
1:1:43:alg:Debug:got b - y <= 0
1:1:43:alg:Debug:l18: compute ub for '-p - x', start w/ min 6, maxV 10)
1:1:53:alg:Debug:got -p - x <= 6
1:1:53:alg:Debug:l18: compute ub for 'q + s', start w/ min 9, maxV 10)
1:1:56:alg:Debug:got q + s <= 9
1:0:37:alg:Debug:l18: compute ub for '-p - s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -p - s <= 9
1:0:40:alg:Debug:l18: compute ub for '-q - s', start w/ min 9, maxV 10)
1:0:43:alg:Debug:got -q - s <= 9
1:0:44:alg:Debug:l18: compute ub for '-b + q', start w/ min 9, maxV 10)
1:0:47:alg:Debug:got -b + q <= 9
1:0:47:alg:Debug:l18: compute ub for '-a', start w/ min -1, maxV 10)
1:1:2:alg:Debug:got -a <= -1
1:1:3:alg:Debug:l18: compute ub for '-r - s', start w/ min 9, maxV 10)
1:1:6:alg:Debug:got -r - s <= 9
1:1:6:alg:Debug:l18: compute ub for 'p - x', start w/ min 3, maxV 10)
1:1:18:alg:Debug:got p - x <= 3
1:1:18:alg:Debug:l18: compute ub for '-b - y', start w/ min -1, maxV 10)
1:1:34:alg:Debug:got -b - y <= -1
1:1:34:alg:Debug:l18: compute ub for '-s - y', start w/ min 8, maxV 10)
1:1:40:alg:Debug:got -s - y <= 8
1:1:40:alg:Debug:l18: compute ub for 'r - x', start w/ min 0, maxV 10)
1:1:56:alg:Debug:got r - x <= 0
1:1:56:alg:Debug:l18: compute ub for '-b + s', start w/ min 9, maxV 10)
1:1:59:alg:Debug:got -b + s <= 9
1:0:37:alg:Debug:l18: compute ub for '-q - y', start w/ min 0, maxV 10)
1:0:52:alg:Debug:got -q - y <= 0
1:0:53:alg:Debug:l18: compute ub for '-a - x', start w/ min -2, maxV 10)
1:1:8:alg:Debug:got -a - x <= -2
1:1:8:alg:Debug:l18: compute ub for '-b - r', start w/ min 9, maxV 10)
1:1:11:alg:Debug:got -b - r <= 9
1:1:12:alg:Debug:l18: compute ub for '-b - s', start w/ min 9, maxV 10)
1:1:15:alg:Debug:got -b - s <= 9
1:1:15:alg:Debug:l18: compute ub for '-p - q', start w/ min 9, maxV 10)
1:1:18:alg:Debug:got -p - q <= 9
1:1:18:alg:Debug:l18: compute ub for '-s - x', start w/ min 0, maxV 10)
1:1:34:alg:Debug:got -s - x <= 0
1:1:34:alg:Debug:l18: compute ub for 'p - y', start w/ min 0, maxV 10)
1:1:49:alg:Debug:got p - y <= 0
1:1:50:alg:Debug:l18: compute ub for 'q + r', start w/ min 9, maxV 10)
1:1:53:alg:Debug:got q + r <= 9
1:1:53:alg:Debug:l18: compute ub for '-q - x', start w/ min 8, maxV 10)
1:1:59:alg:Debug:got -q - x <= 8
1:1:59:alg:Debug:l18: compute ub for 's', start w/ min 9, maxV 10)
1:2:2:alg:Debug:got s <= 9
1:0:37:alg:Debug:l28: compute ub for '-q + s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -q + s <= 9
1:0:41:alg:Debug:l28: compute ub for 'p - x', start w/ min 0, maxV 10)
1:0:56:alg:Debug:got p - x <= 0
1:0:57:alg:Debug:l28: compute ub for '-k - r', start w/ min 8, maxV 10)
1:1:3:alg:Debug:got -k - r <= 8
1:1:4:alg:Debug:l28: compute ub for 'k + p', start w/ min 9, maxV 10)
1:1:7:alg:Debug:got k + p <= 9
1:1:7:alg:Debug:l28: compute ub for '-k + p', start w/ min 5, maxV 10)
1:1:20:alg:Debug:got -k + p <= 5
1:1:20:alg:Debug:l28: compute ub for '-c - q', start w/ min 8, maxV 10)
1:1:27:alg:Debug:got -c - q <= 8
1:1:27:alg:Debug:l28: compute ub for 'k - y', start w/ min 9, maxV 10)
1:1:30:alg:Debug:got k - y <= 9
1:1:31:alg:Debug:l28: compute ub for '-a + r', start w/ min 3, maxV 10)
1:1:43:alg:Debug:got -a + r <= 3
1:1:44:alg:Debug:l28: compute ub for '-r - x', start w/ min -1, maxV 10)
1:1:59:alg:Debug:got -r - x <= -1
1:2:0:alg:Debug:l28: compute ub for '-q - r', start w/ min 9, maxV 10)
1:2:3:alg:Debug:got -q - r <= 9
1:0:37:alg:Debug:l28: compute ub for '-k - s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -k - s <= 9
1:0:41:alg:Debug:l28: compute ub for 'k - x', start w/ min 8, maxV 10)
1:0:47:alg:Debug:got k - x <= 8
1:0:48:alg:Debug:l28: compute ub for '-p', start w/ min 5, maxV 10)
1:1:0:alg:Debug:got -p <= 5
1:1:1:alg:Debug:l28: compute ub for 'q + s', start w/ min 8, maxV 10)
1:1:7:alg:Debug:got q + s <= 8
1:1:7:alg:Debug:l28: compute ub for 'p + r', start w/ min 3, maxV 10)
1:1:20:alg:Debug:got p + r <= 3
1:1:21:alg:Debug:l28: compute ub for '-c + p', start w/ min 8, maxV 10)
1:1:27:alg:Debug:got -c + p <= 8
1:1:27:alg:Debug:l28: compute ub for 'q', start w/ min 9, maxV 10)
1:1:30:alg:Debug:got q <= 9
1:1:31:alg:Debug:l28: compute ub for '-a - p', start w/ min 3, maxV 10)
1:1:43:alg:Debug:got -a - p <= 3
1:1:44:alg:Debug:l28: compute ub for '-y', start w/ min -1, maxV 10)
1:1:59:alg:Debug:got -y <= -1
1:1:59:alg:Debug:l28: compute ub for '-s - y', start w/ min 8, maxV 10)
1:2:5:alg:Debug:got -s - y <= 8
1:0:37:alg:Debug:l28: compute ub for '-c - x', start w/ min -1, maxV 10)
1:0:53:alg:Debug:got -c - x <= -1
1:0:53:alg:Debug:l28: compute ub for 'k - s', start w/ min 9, maxV 10)
1:0:57:alg:Debug:got k - s <= 9
1:0:57:alg:Debug:l28: compute ub for '-b - y', start w/ min -2, maxV 10)
1:1:13:alg:Debug:got -b - y <= -2
1:1:13:alg:Debug:l28: compute ub for '-c + s', start w/ min 9, maxV 10)
1:1:16:alg:Debug:got -c + s <= 9
1:1:17:alg:Debug:l28: compute ub for '-k + r', start w/ min 5, maxV 10)
1:1:29:alg:Debug:got -k + r <= 5
1:1:30:alg:Debug:l28: compute ub for 'p + s', start w/ min 9, maxV 10)
1:1:33:alg:Debug:got p + s <= 9
1:1:33:alg:Debug:l28: compute ub for '-p - x', start w/ min 3, maxV 10)
1:1:46:alg:Debug:got -p - x <= 3
1:1:46:alg:Debug:l28: compute ub for 'q + r', start w/ min 8, maxV 10)
1:1:52:alg:Debug:got q + r <= 8
1:1:53:alg:Debug:l28: compute ub for '-q - x', start w/ min 6, maxV 10)
1:2:2:alg:Debug:got -q - x <= 6
1:2:2:alg:Debug:l28: compute ub for 's', start w/ min 9, maxV 10)
1:2:5:alg:Debug:got s <= 9
1:0:37:alg:Debug:l28: compute ub for '-c + q', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -c + q <= 9
1:0:41:alg:Debug:l28: compute ub for '-k - p', start w/ min 5, maxV 10)
1:0:53:alg:Debug:got -k - p <= 5
1:0:54:alg:Debug:l28: compute ub for 'k - p', start w/ min 9, maxV 10)
1:0:57:alg:Debug:got k - p <= 9
1:0:58:alg:Debug:l28: compute ub for '-x - y', start w/ min -7, maxV 10)
1:1:10:alg:Debug:got -x - y <= -2
1:1:11:alg:Debug:l28: compute ub for '-b - c', start w/ min -1, maxV 10)
1:1:26:alg:Debug:got -b - c <= -1
1:1:27:alg:Debug:l28: compute ub for '-p - y', start w/ min -2, maxV 10)
1:1:42:alg:Debug:got -p - y <= -2
1:1:43:alg:Debug:l28: compute ub for 'r - s', start w/ min 9, maxV 10)
1:1:46:alg:Debug:got r - s <= 9
1:1:46:alg:Debug:l28: compute ub for '-k + s', start w/ min 9, maxV 10)
1:1:49:alg:Debug:got -k + s <= 9
1:1:50:alg:Debug:l28: compute ub for '-q - s', start w/ min 8, maxV 10)
1:1:56:alg:Debug:got -q - s <= 8
1:1:56:alg:Debug:l28: compute ub for '-b - q', start w/ min 7, maxV 10)
1:2:5:alg:Debug:got -b - q <= 7
1:0:37:alg:Debug:l28: compute ub for '-s', start w/ min 9, maxV 10)
1:0:40:alg:Debug:got -s <= 9
1:0:41:alg:Debug:l28: compute ub for '-a + q', start w/ min 7, maxV 10)
1:0:50:alg:Debug:got -a + q <= 7
1:0:51:alg:Debug:l28: compute ub for '-c - r', start w/ min 9, maxV 10)
1:0:54:alg:Debug:got -c - r <= 9
1:0:55:alg:Debug:l28: compute ub for '-a - s', start w/ min 8, maxV 10)
1:1:1:alg:Debug:got -a - s <= 8
1:1:1:alg:Debug:l28: compute ub for 'p - q', start w/ min 9, maxV 10)
1:1:4:alg:Debug:got p - q <= 9
1:1:5:alg:Debug:l28: compute ub for 'q - x', start w/ min 3, maxV 10)
1:1:17:alg:Debug:got q - x <= 3
1:1:18:alg:Debug:l28: compute ub for '-q + r', start w/ min 8, maxV 10)
1:1:24:alg:Debug:got -q + r <= 8
1:1:25:alg:Debug:l28: compute ub for 'r - x', start w/ min 0, maxV 10)
1:1:40:alg:Debug:got r - x <= 0
1:1:41:alg:Debug:l28: compute ub for '-a - r', start w/ min 5, maxV 10)
1:1:53:alg:Debug:got -a - r <= 5
1:1:53:alg:Debug:l28: compute ub for '-k - y', start w/ min -1, maxV 10)
1:2:9:alg:Debug:got -k - y <= -1
1:0:37:alg:Debug:l28: compute ub for '-s - x', start w/ min -1, maxV 10)
1:0:53:alg:Debug:got -s - x <= -1
1:0:53:alg:Debug:l28: compute ub for 'p + q', start w/ min 7, maxV 10)
1:1:3:alg:Debug:got p + q <= 7
1:1:3:alg:Debug:l28: compute ub for '-b + p', start w/ min 9, maxV 10)
1:1:6:alg:Debug:got -b + p <= 9
1:1:7:alg:Debug:l28: compute ub for '-k', start w/ min 0, maxV 10)
1:1:22:alg:Debug:got -k <= 0
1:1:23:alg:Debug:l28: compute ub for 'q - r', start w/ min 8, maxV 10)
1:1:29:alg:Debug:got q - r <= 8
1:1:30:alg:Debug:l28: compute ub for 'p - s', start w/ min 9, maxV 10)
1:1:33:alg:Debug:got p - s <= 9
1:1:33:alg:Debug:l28: compute ub for 'p - y', start w/ min 0, maxV 10)
1:1:49:alg:Debug:got p - y <= 0
1:1:49:alg:Debug:l28: compute ub for '-a - b', start w/ min -3, maxV 10)
1:2:5:alg:Debug:got -a - b <= -2
1:2:5:alg:Debug:l28: compute ub for '-c - s', start w/ min 9, maxV 10)
1:2:8:alg:Debug:got -c - s <= 9
1:2:8:alg:Debug:l28: compute ub for 'b - y', start w/ min 0, maxV 10)
1:2:24:alg:Debug:got b - y <= 0
1:0:37:alg:Debug:l28: compute ub for '-a - c', start w/ min -2, maxV 10)
1:0:53:alg:Debug:got -a - c <= -1
1:0:53:alg:Debug:l28: compute ub for '-q', start w/ min 8, maxV 10)
1:1:0:alg:Debug:got -q <= 8
1:1:0:alg:Debug:l28: compute ub for 'r + s', start w/ min 7, maxV 10)
1:1:9:alg:Debug:got r + s <= 7
1:1:10:alg:Debug:l28: compute ub for '-b + s', start w/ min 8, maxV 10)
1:1:16:alg:Debug:got -b + s <= 8
1:1:17:alg:Debug:l28: compute ub for 'r', start w/ min 5, maxV 10)
1:1:29:alg:Debug:got r <= 5
1:1:30:alg:Debug:l28: compute ub for '-b - k', start w/ min -1, maxV 10)
1:1:45:alg:Debug:got -b - k <= -1
1:1:46:alg:Debug:l28: compute ub for '-c', start w/ min 0, maxV 10)
1:2:1:alg:Debug:got -c <= 0
1:2:2:alg:Debug:l28: compute ub for '-b + q', start w/ min 8, maxV 10)
1:2:8:alg:Debug:got -b + q <= 8
1:2:8:alg:Debug:l28: compute ub for '-a', start w/ min -1, maxV 10)
1:2:23:alg:Debug:got -a <= -1
1:2:24:alg:Debug:l28: compute ub for 'k + s', start w/ min 9, maxV 10)
1:2:27:alg:Debug:got k + s <= 9
1:0:37:alg:Debug:l28: compute ub for '-a + s', start w/ min 7, maxV 10)
1:0:47:alg:Debug:got -a + s <= 7
1:0:47:alg:Debug:l28: compute ub for '-c + r', start w/ min 5, maxV 10)
1:1:0:alg:Debug:got -c + r <= 5
1:1:0:alg:Debug:l28: compute ub for '-a - q', start w/ min 6, maxV 10)
1:1:9:alg:Debug:got -a - q <= 6
1:1:10:alg:Debug:l28: compute ub for '-x', start w/ min -1, maxV 10)
1:1:26:alg:Debug:got -x <= -1
1:1:26:alg:Debug:l28: compute ub for '-b - x', start w/ min -2, maxV 10)
1:1:42:alg:Debug:got -b - x <= -2
1:1:42:alg:Debug:l28: compute ub for '-a - y', start w/ min -4, maxV 10)
1:1:54:alg:Debug:got -a - y <= -2
1:1:55:alg:Debug:l28: compute ub for '-a + p', start w/ min 4, maxV 10)
1:2:7:alg:Debug:got -a + p <= 4
1:2:8:alg:Debug:l28: compute ub for '-c - p', start w/ min 8, maxV 10)
1:2:14:alg:Debug:got -c - p <= 8
1:2:14:alg:Debug:l28: compute ub for '-a - x', start w/ min -2, maxV 10)
1:2:30:alg:Debug:got -a - x <= -2
1:2:30:alg:Debug:l28: compute ub for '-k - x', start w/ min -1, maxV 10)
1:2:46:alg:Debug:got -k - x <= -1
1:0:37:alg:Debug:l28: compute ub for '-b - p', start w/ min 4, maxV 10)
1:0:50:alg:Debug:got -b - p <= 4
1:0:50:alg:Debug:l28: compute ub for '-c - y', start w/ min -1, maxV 10)
1:1:6:alg:Debug:got -c - y <= -1
1:1:6:alg:Debug:l28: compute ub for '-b', start w/ min -1, maxV 10)
1:1:22:alg:Debug:got -b <= -1
1:1:22:alg:Debug:l28: compute ub for '-p + q', start w/ min 9, maxV 10)
1:1:26:alg:Debug:got -p + q <= 9
1:1:26:alg:Debug:l28: compute ub for 's - x', start w/ min 0, maxV 10)
1:1:42:alg:Debug:got s - x <= 0
1:1:42:alg:Debug:l28: compute ub for 'p', start w/ min 5, maxV 10)
1:1:55:alg:Debug:got p <= 5
1:1:55:alg:Debug:l28: compute ub for '-c - k', start w/ min -1, maxV 10)
1:2:11:alg:Debug:got -c - k <= -1
1:2:11:alg:Debug:l28: compute ub for '-b + r', start w/ min 4, maxV 10)
1:2:23:alg:Debug:got -b + r <= 4
1:2:24:alg:Debug:l28: compute ub for 'q - y', start w/ min -1, maxV 10)
1:2:39:alg:Debug:got q - y <= -1
1:2:40:alg:Debug:l28: compute ub for '-k - q', start w/ min 8, maxV 10)
1:2:46:alg:Debug:got -k - q <= 8
1:2:46:alg:Info:194 invs:
l28: p - y <= 0, -a - b <= -2, -c - s <= 9, b - y <= 0, -a - c <= -1, -q <= 8, r + s <= 7, -b + s <= 8, r <= 5, -b - k <= -1, -c <= 0, -b + q <= 8, -a <= -1, k + s <= 9, -a + s <= 7, -c + r <= 5, -a - q <= 6, -x <= -1, -b - x <= -2, -a - y <= -2, -a + p <= 4, -c - p <= 8, -a - x <= -2, -k - x <= -1, -b - p <= 4, -c - y <= -1, -b <= -1, -p + q <= 9, s - x <= 0, p <= 5, -c - k <= -1, -b + r <= 4, q - y <= -1, -k - q <= 8, -k + s <= 9, r - s <= 9, -p - y <= -2, -x - y <= -2, k - p <= 9, -q - x <= 6, q + r <= 8, s <= 9, p + s <= 9, -k + r <= 5, -p - x <= 3, k - s <= 9, -c + s <= 9, -b - y <= -2, -b - c <= -1, -c - x <= -1, -s - y <= 8, -y <= -1, -k - p <= 5, -c + q <= 9, q <= 9, -a - p <= 3, -b - q <= 7, -q - s <= 8, -s <= 9, -a + q <= 7, -c - r <= 9, -a - s <= 8, p - q <= 9, q - x <= 3, -q + r <= 8, r - x <= 0, -a - r <= 5, -k - y <= -1, -s - x <= -1, p + q <= 7, -b + p <= 9, -k <= 0, q - r <= 8, p - s <= 9, r - y <= 9, -q - y <= -1, k - q <= 9, -p - s <= 9, -p + r <= 9, -a + k <= 0, -p - q <= 7, -c + k <= 8, -b - r <= 4, k + q <= 9, k - r <= 9, -r - s <= 8, -r <= 8, -p - r <= 7, -r + s <= 9, p - r <= 9, k + r <= 9, -p + s <= 8, k <= 9, -b - s <= 8, -a + c <= 0, s - y <= 9, -a - k <= -1, -k + q <= 9, -r - y <= 8, -b + k <= 9, k - x <= 8, -k - s <= 9, -p <= 5, -q - r <= 9, -c + p <= 8, q + s <= 8, p + r <= 3, -r - x <= -1, -a + r <= 3, k - y <= 9, -c - q <= 8, -k + p <= 5, k + p <= 9, p - x <= 0, -q + s <= 9, -k - r <= 8, q*x + s*y - b == 0, b*k - a + c == 0, p*x + r*y - a == 0
l18: s - y <= 9, -r - x <= -1, -p - x <= 6, -a + r <= 8, q - y <= 0, r - y <= 9, -p + s <= 9, -q - r <= 9, b - y <= 0, -y <= -1, -q <= 9, -a + p <= 8, -a - y <= -2, -r + s <= 9, -a - q <= 9, -r - y <= 8, p + r <= 8, -x <= -1, -a - p <= 7, q <= 9, p + q <= 9, -r <= 9, q - r <= 9, p - s <= 9, -a - b <= -1, -b - q <= 9, -b + r <= 9, -p <= 8, p - q <= 9, s - x <= 0, -a + s <= 9, -p - y <= -1, -p - r <= 8, -p + q <= 9, -b + p <= 9, p - r <= 9, -p + r <= 9, -s <= 9, -x - y <= -2, r <= 9, -q + r <= 9, r - s <= 9, -b - x <= -1, p <= 9, -b - p <= 8, -a - r <= 8, -a - s <= 9, -a + q <= 9, p + s <= 9, -b <= 0, r + s <= 9, q - x <= 9, -s - y <= 8, -b - y <= -1, -s - x <= 0, r - x <= 0, -p - q <= 9, -b - s <= 9, -b - r <= 9, p - x <= 3, -r - s <= 9, -a <= -1, q + r <= 9, p - y <= 0, q + s <= 9, -q - s <= 9, -p - s <= 9, -b + s <= 9, s <= 9, -b + q <= 9, -q - x <= 8, -a - x <= -2, -q - y <= 0, q*x + s*y - b == 0, p*x + r*y - a == 0
1:2:46:alg:Info:test 194 invs on all 2693 traces
1:2:46:ds:Warn:l28: -q <= 8 disproved
1:2:46:ds:Warn:l28: -r - s <= 8 disproved
1:2:46:ds:Warn:l28: r <= 5 disproved
1:2:46:ds:Warn:l28: -q + s <= 9 disproved
1:2:46:ds:Warn:l28: -b + q <= 8 disproved
1:2:47:ds:Warn:l28: -k - s <= 9 disproved
1:2:47:ds:Warn:l28: -k - r <= 8 disproved
1:2:47:ds:Warn:l28: k + r <= 9 disproved
1:2:47:ds:Warn:l28: -a + r <= 3 disproved
1:2:47:ds:Warn:l28: -c - q <= 8 disproved
1:2:47:ds:Warn:l28: k - p <= 9 disproved
1:2:47:ds:Warn:l28: -k + p <= 5 disproved
1:2:47:ds:Warn:l28: k - y <= 9 disproved
1:2:47:ds:Warn:l28: -b - s <= 8 disproved
1:2:47:ds:Warn:l28: -p + r <= 9 disproved
1:2:47:ds:Warn:l28: -a - q <= 6 disproved
1:2:47:ds:Warn:l28: -a + s <= 7 disproved
1:2:47:ds:Warn:l28: -c + r <= 5 disproved
1:2:47:ds:Warn:l28: -c - p <= 8 disproved
1:2:47:ds:Warn:l28: k - s <= 9 disproved
1:2:48:ds:Warn:l28: -b - p <= 4 disproved
1:2:48:ds:Warn:l28: -k + s <= 9 disproved
1:2:48:ds:Warn:l28: -p - s <= 9 disproved
1:2:48:ds:Warn:l28: -c + s <= 9 disproved
1:2:48:ds:Warn:l28: s <= 9 disproved
1:2:48:ds:Warn:l28: q + r <= 8 disproved
1:2:48:ds:Warn:l28: -q - r <= 9 disproved
1:2:48:ds:Warn:l28: p - q <= 9 disproved
1:2:48:ds:Warn:l28: -k - q <= 8 disproved
1:2:48:ds:Warn:l28: -b + r <= 4 disproved
1:2:48:ds:Warn:l28: p <= 5 disproved
1:2:48:ds:Warn:l28: k + q <= 9 disproved
1:2:48:ds:Warn:l28: p - s <= 9 disproved
1:2:49:ds:Warn:l28: -p + s <= 8 disproved
1:2:49:ds:Warn:l28: -r <= 8 disproved
1:2:49:ds:Warn:l28: -k + q <= 9 disproved
1:2:49:ds:Warn:l28: -p - r <= 7 disproved
1:2:49:ds:Warn:l28: p + r <= 3 disproved
1:2:49:ds:Warn:l28: p - r <= 9 disproved
1:2:49:ds:Warn:l28: p + q <= 7 disproved
1:2:49:ds:Warn:l28: p + s <= 9 disproved
1:2:50:ds:Warn:l28: k <= 9 disproved
1:2:50:ds:Warn:l28: -b - r <= 4 disproved
1:2:50:ds:Warn:l28: -s - y <= 8 disproved
1:2:50:ds:Warn:l28: -p - q <= 7 disproved
1:2:50:ds:Warn:l28: q + s <= 8 disproved
1:2:50:ds:Warn:l28: -c + k <= 8 disproved
1:2:50:ds:Warn:l28: q - r <= 8 disproved
1:2:51:ds:Warn:l28: -c - s <= 9 disproved
1:2:51:ds:Warn:l28: q - x <= 3 disproved
1:2:51:ds:Warn:l28: k + s <= 9 disproved
1:2:51:ds:Warn:l28: -a - p <= 3 disproved
1:2:51:ds:Warn:l28: -c + p <= 8 disproved
1:2:51:ds:Warn:l28: -p <= 5 disproved
1:2:51:ds:Warn:l28: q <= 9 disproved
1:2:51:ds:Warn:l28: -q + r <= 8 disproved
1:2:51:ds:Warn:l28: -s <= 9 disproved
1:2:51:ds:Warn:l28: -a - s <= 8 disproved
1:2:51:ds:Warn:l28: -a + q <= 7 disproved
1:2:51:ds:Warn:l28: -c - r <= 9 disproved
1:2:52:ds:Warn:l28: -b + s <= 8 disproved
1:2:52:ds:Warn:l28: -k - p <= 5 disproved
1:2:52:ds:Warn:l28: -a - r <= 5 disproved
1:2:52:ds:Warn:l28: k + p <= 9 disproved
1:2:52:ds:Warn:l28: -c + q <= 9 disproved
1:2:52:ds:Warn:l28: r - s <= 9 disproved
1:2:52:ds:Warn:l28: k - r <= 9 disproved
1:2:52:ds:Warn:l28: -b - q <= 7 disproved
1:2:52:ds:Warn:l28: -p + q <= 9 disproved
1:2:52:ds:Warn:l28: -k + r <= 5 disproved
1:2:52:ds:Warn:l28: -q - s <= 8 disproved
1:2:53:ds:Warn:l28: -b + k <= 9 disproved
1:2:53:ds:Warn:l28: k - q <= 9 disproved
1:2:53:ds:Warn:l28: -r + s <= 9 disproved
1:2:53:ds:Warn:l18: r + s <= 9 disproved
1:2:53:ds:Warn:l18: -a + p <= 8 disproved
1:2:53:ds:Warn:l18: r - s <= 9 disproved
1:2:53:ds:Warn:l18: -q <= 9 disproved
1:2:53:ds:Warn:l18: -p - r <= 8 disproved
1:2:53:ds:Warn:l18: -a + q <= 9 disproved
1:2:53:ds:Warn:l18: r <= 9 disproved
1:2:53:ds:Warn:l18: -a - q <= 9 disproved
1:2:53:ds:Warn:l18: -s <= 9 disproved
1:2:53:ds:Warn:l18: -p + r <= 9 disproved
1:2:53:ds:Warn:l18: -a - s <= 9 disproved
1:2:53:ds:Warn:l18: p + s <= 9 disproved
1:2:53:ds:Warn:l18: -p - q <= 9 disproved
1:2:53:ds:Warn:l18: -p - s <= 9 disproved
1:2:53:ds:Warn:l18: -b + q <= 9 disproved
1:2:53:ds:Warn:l18: -a - r <= 8 disproved
1:2:53:ds:Warn:l18: -q - s <= 9 disproved
1:2:53:ds:Warn:l18: -s - y <= 8 disproved
1:2:53:ds:Warn:l18: -q + r <= 9 disproved
1:2:53:ds:Warn:l18: -a + s <= 9 disproved
1:2:53:ds:Warn:l18: p + q <= 9 disproved
1:2:53:ds:Warn:l18: p - x <= 3 disproved
1:2:53:ds:Warn:l18: -r - s <= 9 disproved
1:2:53:ds:Warn:l18: -r + s <= 9 disproved
1:2:53:ds:Warn:l18: -b - p <= 8 disproved
1:2:53:ds:Warn:l18: q + r <= 9 disproved
1:2:53:ds:Warn:l18: -q - x <= 8 disproved
1:2:53:ds:Warn:l18: q - r <= 9 disproved
1:2:53:ds:Warn:l18: p <= 9 disproved
1:2:53:ds:Warn:l18: -b + p <= 9 disproved
1:2:53:ds:Warn:l18: -b + r <= 9 disproved
1:2:54:ds:Warn:l18: -p + q <= 9 disproved
1:2:54:ds:Warn:l18: s - y <= 9 disproved
1:2:54:ds:Warn:l18: q - x <= 9 disproved
1:2:54:ds:Warn:l18: p - q <= 9 disproved
1:2:54:ds:Warn:l18: -b - r <= 9 disproved
1:2:54:ds:Warn:l18: -a + r <= 8 disproved
1:2:54:ds:Warn:l18: -b - q <= 9 disproved
1:2:54:ds:Warn:l18: p - s <= 9 disproved
1:2:54:ds:Warn:l18: q + s <= 9 disproved
1:2:54:ds:Warn:l18: s <= 9 disproved
1:2:54:ds:Warn:l18: -a - p <= 7 disproved
1:2:54:ds:Warn:l18: -p <= 8 disproved
1:2:54:ds:Warn:l18: -p + s <= 9 disproved
1:2:54:ds:Warn:l18: p - r <= 9 disproved
1:2:54:ds:Warn:l18: p + r <= 8 disproved
1:2:54:ds:Warn:l18: -r <= 9 disproved
1:2:54:ds:Warn:l18: -r - y <= 8 disproved
1:2:54:ds:Warn:l18: -q - r <= 9 disproved
1:2:54:ds:Warn:l18: q <= 9 disproved
1:2:54:ds:Warn:l18: -b + s <= 9 disproved
1:2:54:ds:Warn:l18: -b - s <= 9 disproved
1:2:54:alg:Info:find uniq invs
1:2:54:alg:Info:68 invs:
l28: p - y <= 0, -a - b <= -2, b - y <= 0, -a - c <= -1, r + s <= 7, -b - k <= -1, -c <= 0, -a <= -1, -x <= -1, -b - x <= -2, -a - y <= -2, -a + p <= 4, -a - x <= -2, -k - x <= -1, -c - y <= -1, -b <= -1, s - x <= 0, -c - k <= -1, q - y <= -1, -p - y <= -2, -x - y <= -2, -q - x <= 6, -p - x <= 3, -b - y <= -2, -b - c <= -1, -c - x <= -1, -y <= -1, r - x <= 0, -k - y <= -1, -s - x <= -1, -b + p <= 9, -k <= 0, r - y <= 9, -q - y <= -1, -a + k <= 0, -a + c <= 0, s - y <= 9, -a - k <= -1, -r - y <= 8, k - x <= 8, -r - x <= -1, p - x <= 0, q*x + s*y - b == 0, b*k - a + c == 0, p*x + r*y - a == 0
l18: -r - x <= -1, -p - x <= 6, q - y <= 0, r - y <= 9, b - y <= 0, -y <= -1, -a - y <= -2, -x <= -1, -a - b <= -1, s - x <= 0, -p - y <= -1, -x - y <= -2, -b - x <= -1, -b <= 0, -b - y <= -1, -s - x <= 0, r - x <= 0, -a <= -1, p - y <= 0, -a - x <= -2, -q - y <= 0, q*x + s*y - b == 0, p*x + r*y - a == 0
1:2:54:miscs:Debug:workloads 'uniqify' 2: [1, 1]
1:9:15:alg:Debug:src: /var/tmp/DIG2__Uiija/egcd2.c
1:9:15:alg:Info:analyze programs/nla/egcd2.c
1:9:15:alg:Info:set seed to: 2.0 (test 98)
1:9:15:miscs:Info:autodeg 2
1:9:15:alg:Info:check reachability
1:9:15:alg:Info:gen eqts at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
1:9:15:alg:Debug:l18: need more traces (16 eqts, need >= 67)
1:9:15:alg:Debug:obtain 18 new traces
1:9:15:alg:Debug:l18: need more traces (34 eqts, need >= 67)
1:9:16:alg:Debug:obtain 20 new traces
1:9:16:alg:Debug:l18: need more traces (54 eqts, need >= 67)
1:9:16:alg:Debug:obtain 20 new traces
1:9:16:miscs:Debug:workloads 'find eqts' 2: [1, 1]
1:9:16:alg:Debug:l18: infer using 67 exprs
1:9:16:miscs:Debug:solve 45 uks using 67 eqts
1:9:17:alg:Debug:l18: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
1:9:17:alg:Debug:l18: check 2 unchecked (2 candidates)
1:9:17:miscs:Debug:workloads 'prove' 2: [1, 1]
1:9:16:alg:Debug:l28: infer using 99 exprs
1:9:16:miscs:Debug:solve 66 uks using 99 eqts
1:9:18:alg:Debug:l28: 5 candidates:
s^2 - s == 0
s*x - s - x + 1 == 0
p - s == 0
q + s - 1 == 0
r + s - 1 == 0
1:9:18:alg:Debug:l28: check 5 unchecked (5 candidates)
1:9:18:miscs:Debug:workloads 'prove' 5: [1, 1, 1, 1, 1]
1:9:20:alg:Debug:l18: no disproved candidates -- break
1:9:22:alg:Debug:l28: 1 new cex exprs
1:9:22:alg:Debug:l28: infer using 100 exprs
1:9:22:miscs:Debug:solve 66 uks using 100 eqts
1:9:23:alg:Debug:l28: 4 candidates:
k*p - k*s == 0
p*s - p == 0
s^2 - 4*p + 3*s == 0
q - r == 0
1:9:23:alg:Debug:l28: check 4 unchecked (4 candidates)
1:9:23:miscs:Debug:workloads 'prove' 4: [1, 1, 1, 1]
1:9:27:alg:Debug:l28: 4 new cex exprs
1:9:27:alg:Debug:l28: infer using 104 exprs
1:9:27:miscs:Debug:solve 66 uks using 104 eqts
1:9:29:alg:Debug:l28: 1 candidates:
b*k - a + c == 0
1:9:29:alg:Debug:l28: check 1 unchecked (1 candidates)
1:9:32:alg:Debug:l28: no disproved candidates -- break
1:9:32:alg:Debug:l18: got 2 eqts, 0 new inps
1:9:32:alg:Debug:p*x + r*y - a == 0
q*x + s*y - b == 0
1:9:32:alg:Debug:l28: got 1 eqts, 299 new inps
1:9:32:alg:Debug:b*k - a + c == 0
1:9:32:alg:Info:3 invs:
l28: b*k - a + c == 0
l18: p*x + r*y - a == 0, q*x + s*y - b == 0
1:9:32:alg:Info:gen ieqs at 2 locs: l28 (int a, int b, int c, int p, int q, int r, int s, int x, int y, int k); l18 (int a, int b, int p, int q, int r, int s, int x, int y)
1:9:32:alg:Info:2 locs: check upperbounds for 328 terms
1:9:32:miscs:Debug:workloads 'prove' 20: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24]
1:10:47:alg:Info:2 locs: compute upperbounds for 192 terms
1:10:47:miscs:Debug:workloads 'guesscheck' 20: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2]
1:10:48:alg:Debug:l18: compute ub for 'p + r', start w/ min 5, maxV 10)
1:11:0:alg:Debug:got p + r <= 5
1:11:0:alg:Debug:l18: compute ub for '-a - p', start w/ min 8, maxV 10)
1:11:6:alg:Debug:got -a - p <= 8
1:10:48:alg:Debug:l18: compute ub for 'p', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got p <= 9
1:10:51:alg:Debug:l18: compute ub for '-b + r', start w/ min 9, maxV 10)
1:10:54:alg:Debug:got -b + r <= 9
1:10:54:alg:Debug:l18: compute ub for '-q - s', start w/ min 9, maxV 10)
1:10:57:alg:Debug:got -q - s <= 9
1:10:58:alg:Debug:l18: compute ub for '-p - q', start w/ min 9, maxV 10)
1:11:1:alg:Debug:got -p - q <= 9
1:11:1:alg:Debug:l18: compute ub for '-x - y', start w/ min -7, maxV 10)
1:11:13:alg:Debug:got -x - y <= -2
1:11:13:alg:Debug:l18: compute ub for '-b + p', start w/ min 9, maxV 10)
1:11:17:alg:Debug:got -b + p <= 9
1:11:17:alg:Debug:l18: compute ub for '-p + q', start w/ min 9, maxV 10)
1:11:20:alg:Debug:got -p + q <= 9
1:11:20:alg:Debug:l18: compute ub for 's - y', start w/ min 9, maxV 10)
1:11:23:alg:Debug:got s - y <= 9
1:11:23:alg:Debug:l18: compute ub for '-b - p', start w/ min 9, maxV 10)
1:11:26:alg:Debug:got -b - p <= 9
1:11:27:alg:Debug:l18: compute ub for 'q - y', start w/ min 0, maxV 10)
1:11:42:alg:Debug:got q - y <= 0
1:10:48:alg:Debug:l18: compute ub for 'q - x', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got q - x <= 9
1:10:51:alg:Debug:l18: compute ub for '-q + s', start w/ min 9, maxV 10)
1:10:54:alg:Debug:got -q + s <= 9
1:10:54:alg:Debug:l18: compute ub for '-b - r', start w/ min 9, maxV 10)
1:10:57:alg:Debug:got -b - r <= 9
1:10:57:alg:Debug:l18: compute ub for 'q + s', start w/ min 9, maxV 10)
1:11:1:alg:Debug:got q + s <= 9
1:11:1:alg:Debug:l18: compute ub for 'r - y', start w/ min 5, maxV 10)
1:11:13:alg:Debug:got r - y <= 5
1:11:13:alg:Debug:l18: compute ub for 'p - q', start w/ min 9, maxV 10)
1:11:16:alg:Debug:got p - q <= 9
1:11:17:alg:Debug:l18: compute ub for '-q - x', start w/ min 8, maxV 10)
1:11:23:alg:Debug:got -q - x <= 8
1:11:23:alg:Debug:l18: compute ub for '-q - r', start w/ min 9, maxV 10)
1:11:26:alg:Debug:got -q - r <= 9
1:11:26:alg:Debug:l18: compute ub for 'p - y', start w/ min 0, maxV 10)
1:11:42:alg:Debug:got p - y <= 0
1:11:42:alg:Debug:l18: compute ub for '-b - s', start w/ min 9, maxV 10)
1:11:45:alg:Debug:got -b - s <= 9
1:10:48:alg:Debug:l18: compute ub for '-r - x', start w/ min -1, maxV 10)
1:11:3:alg:Debug:got -r - x <= -1
1:11:3:alg:Debug:l18: compute ub for 'p - s', start w/ min 9, maxV 10)
1:11:6:alg:Debug:got p - s <= 9
1:11:7:alg:Debug:l18: compute ub for '-q', start w/ min 9, maxV 10)
1:11:10:alg:Debug:got -q <= 9
1:11:10:alg:Debug:l18: compute ub for '-a + r', start w/ min 8, maxV 10)
1:11:16:alg:Debug:got -a + r <= 8
1:11:16:alg:Debug:l18: compute ub for '-s', start w/ min 9, maxV 10)
1:11:19:alg:Debug:got -s <= 9
1:11:20:alg:Debug:l18: compute ub for 'r', start w/ min 9, maxV 10)
1:11:23:alg:Debug:got r <= 9
1:11:23:alg:Debug:l18: compute ub for 'p + s', start w/ min 9, maxV 10)
1:11:26:alg:Debug:got p + s <= 9
1:11:26:alg:Debug:l18: compute ub for 'p + q', start w/ min 9, maxV 10)
1:11:29:alg:Debug:got p + q <= 9
1:11:29:alg:Debug:l18: compute ub for '-p + r', start w/ min 9, maxV 10)
1:11:33:alg:Debug:got -p + r <= 9
1:11:33:alg:Debug:l18: compute ub for '-a - b', start w/ min -1, maxV 10)
1:11:48:alg:Debug:got -a - b <= -1
1:10:48:alg:Debug:l18: compute ub for '-p - x', start w/ min 6, maxV 10)
1:10:57:alg:Debug:got -p - x <= 6
1:10:57:alg:Debug:l18: compute ub for '-b - q', start w/ min 9, maxV 10)
1:11:0:alg:Debug:got -b - q <= 9
1:11:0:alg:Debug:l18: compute ub for 'q + r', start w/ min 9, maxV 10)
1:11:4:alg:Debug:got q + r <= 9
1:11:4:alg:Debug:l18: compute ub for 'r - s', start w/ min 9, maxV 10)
1:11:7:alg:Debug:got r - s <= 9
1:11:7:alg:Debug:l18: compute ub for '-p + s', start w/ min 9, maxV 10)
1:11:10:alg:Debug:got -p + s <= 9
1:11:10:alg:Debug:l18: compute ub for '-b - y', start w/ min -1, maxV 10)
1:11:26:alg:Debug:got -b - y <= -1
1:11:26:alg:Debug:l18: compute ub for '-a + q', start w/ min 9, maxV 10)
1:11:29:alg:Debug:got -a + q <= 9
1:11:29:alg:Debug:l18: compute ub for '-p - r', start w/ min 8, maxV 10)
1:11:36:alg:Debug:got -p - r <= 8
1:11:36:alg:Debug:l18: compute ub for '-a + s', start w/ min 9, maxV 10)
1:11:39:alg:Debug:got -a + s <= 9
1:11:39:alg:Debug:l18: compute ub for '-q - y', start w/ min 0, maxV 10)
1:11:55:alg:Debug:got -q - y <= 0
1:10:48:alg:Debug:l18: compute ub for '-a - x', start w/ min -2, maxV 10)
1:11:3:alg:Debug:got -a - x <= -2
1:11:3:alg:Debug:l18: compute ub for '-s - x', start w/ min 0, maxV 10)
1:11:19:alg:Debug:got -s - x <= 0
1:11:19:alg:Debug:l18: compute ub for '-x', start w/ min -1, maxV 10)
1:11:34:alg:Debug:got -x <= -1
1:11:35:alg:Debug:l18: compute ub for 'r + s', start w/ min 9, maxV 10)
1:11:38:alg:Debug:got r + s <= 9
1:11:38:alg:Debug:l18: compute ub for '-b + s', start w/ min 9, maxV 10)
1:11:41:alg:Debug:got -b + s <= 9
1:11:41:alg:Debug:l18: compute ub for '-a - s', start w/ min 9, maxV 10)
1:11:44:alg:Debug:got -a - s <= 9
1:11:44:alg:Debug:l18: compute ub for '-r', start w/ min 9, maxV 10)
1:11:48:alg:Debug:got -r <= 9
1:11:48:alg:Debug:l18: compute ub for 'q', start w/ min 9, maxV 10)
1:11:51:alg:Debug:got q <= 9
1:11:51:alg:Debug:l18: compute ub for '-p', start w/ min 9, maxV 10)
1:11:54:alg:Debug:got -p <= 9
1:11:54:alg:Debug:l18: compute ub for '-r + s', start w/ min 9, maxV 10)
1:11:57:alg:Debug:got -r + s <= 9
1:10:48:alg:Debug:l28: compute ub for '-a', start w/ min -1, maxV 10)
1:11:3:alg:Debug:got -a <= -1
1:11:4:alg:Debug:l28: compute ub for '-b + q', start w/ min 8, maxV 10)
1:11:10:alg:Debug:got -b + q <= 8
1:11:11:alg:Debug:l28: compute ub for '-q + s', start w/ min 9, maxV 10)
1:11:14:alg:Debug:got -q + s <= 9
1:11:15:alg:Debug:l28: compute ub for 'k - p', start w/ min 9, maxV 10)
1:11:18:alg:Debug:got k - p <= 9
1:11:18:alg:Debug:l28: compute ub for 'k + r', start w/ min 9, maxV 10)
1:11:21:alg:Debug:got k + r <= 9
1:11:22:alg:Debug:l28: compute ub for '-r - y', start w/ min 2, maxV 10)
1:11:35:alg:Debug:got -r - y <= 2
1:11:35:alg:Debug:l28: compute ub for 'k + s', start w/ min 9, maxV 10)
1:11:38:alg:Debug:got k + s <= 9
1:11:39:alg:Debug:l28: compute ub for '-r - x', start w/ min -1, maxV 10)
1:11:54:alg:Debug:got -r - x <= -1
1:11:55:alg:Debug:l28: compute ub for '-q - r', start w/ min 9, maxV 10)
1:11:58:alg:Debug:got -q - r <= 9
1:11:58:alg:Debug:l28: compute ub for '-r + s', start w/ min 9, maxV 10)
1:10:48:alg:Debug:l18: compute ub for 'p - x', start w/ min 3, maxV 10)
1:11:0:alg:Debug:got p - x <= 3
1:11:0:alg:Debug:l18: compute ub for '-a - q', start w/ min 9, maxV 10)
1:11:3:alg:Debug:got -a - q <= 9
1:11:3:alg:Debug:l18: compute ub for 'b - y', start w/ min 0, maxV 10)
1:11:19:alg:Debug:got b - y <= 0
1:11:19:alg:Debug:l18: compute ub for '-p - s', start w/ min 9, maxV 10)
1:11:22:alg:Debug:got -p - s <= 9
1:11:22:alg:Debug:l18: compute ub for '-a', start w/ min -1, maxV 10)
1:11:38:alg:Debug:got -a <= -1
1:11:38:alg:Debug:l18: compute ub for '-b + q', start w/ min 9, maxV 10)
1:11:41:alg:Debug:got -b + q <= 9
1:11:41:alg:Debug:l18: compute ub for 'q - s', start w/ min 9, maxV 10)
1:11:45:alg:Debug:l18: compute ub for 'r - x', start w/ min 0, maxV 10)
1:12:0:alg:Debug:got r - x <= 0
1:12:0:alg:Debug:l18: compute ub for '-s - y', start w/ min 9, maxV 10)
1:12:3:alg:Debug:got -s - y <= 9
1:12:4:alg:Debug:l18: compute ub for '-a + p', start w/ min 8, maxV 10)
1:12:10:alg:Debug:got -a + p <= 8
1:10:48:alg:Debug:l28: compute ub for '-r', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got -r <= 9
1:10:52:alg:Debug:l28: compute ub for 'q', start w/ min 9, maxV 10)
1:10:55:alg:Debug:got q <= 9
1:10:55:alg:Debug:l28: compute ub for '-y', start w/ min -1, maxV 10)
1:11:11:alg:Debug:got -y <= -1
1:11:12:alg:Debug:l28: compute ub for '-p + r', start w/ min 7, maxV 10)
1:11:21:alg:Debug:got -p + r <= 7
1:11:22:alg:Debug:l28: compute ub for '-b - s', start w/ min 7, maxV 10)
1:11:31:alg:Debug:got -b - s <= 7
1:11:32:alg:Debug:l28: compute ub for '-a - s', start w/ min 5, maxV 10)
1:11:44:alg:Debug:got -a - s <= 5
1:11:45:alg:Debug:l28: compute ub for 'b - y', start w/ min 0, maxV 10)
1:12:0:alg:Debug:got b - y <= 0
1:12:0:alg:Debug:l28: compute ub for '-c + q', start w/ min 9, maxV 10)
1:12:4:alg:Debug:got -c + q <= 9
1:12:4:alg:Debug:l28: compute ub for 'q - r', start w/ min 8, maxV 10)
1:12:10:alg:Debug:got q - r <= 8
1:12:11:alg:Debug:l28: compute ub for '-r - s', start w/ min 9, maxV 10)
1:12:14:alg:Debug:got -r - s <= 9
1:10:48:alg:Debug:l28: compute ub for '-a - p', start w/ min 3, maxV 10)
1:11:0:alg:Debug:got -a - p <= 3
1:11:1:alg:Debug:l28: compute ub for '-b - r', start w/ min 9, maxV 10)
1:11:4:alg:Debug:got -b - r <= 9
1:11:5:alg:Debug:l28: compute ub for 'p + q', start w/ min 7, maxV 10)
1:11:14:alg:Debug:got p + q <= 7
1:11:15:alg:Debug:l28: compute ub for '-s - x', start w/ min -1, maxV 10)
1:11:30:alg:Debug:got -s - x <= -1
1:11:31:alg:Debug:l28: compute ub for '-s', start w/ min 9, maxV 10)
1:11:34:alg:Debug:got -s <= 9
1:11:35:alg:Debug:l28: compute ub for '-b - x', start w/ min -2, maxV 10)
1:11:50:alg:Debug:got -b - x <= -2
1:11:51:alg:Debug:l28: compute ub for 'p - s', start w/ min 9, maxV 10)
1:11:54:alg:Debug:got p - s <= 9
1:11:54:alg:Debug:l28: compute ub for '-q + r', start w/ min 8, maxV 10)
1:12:1:alg:Debug:got -q + r <= 8
1:12:1:alg:Debug:l28: compute ub for 'q - x', start w/ min 3, maxV 10)
1:12:14:alg:Debug:got q - x <= 3
1:12:14:alg:Debug:l28: compute ub for '-q - s', start w/ min 8, maxV 10)
1:12:20:alg:Debug:got -q - s <= 8
1:10:48:alg:Debug:l28: compute ub for 'r - s', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got r - s <= 9
1:10:52:alg:Debug:l28: compute ub for '-k + q', start w/ min 9, maxV 10)
1:10:55:alg:Debug:got -k + q <= 9
1:10:56:alg:Debug:l28: compute ub for '-k - q', start w/ min 9, maxV 10)
1:10:59:alg:Debug:got -k - q <= 9
1:10:59:alg:Debug:l28: compute ub for '-a + r', start w/ min 3, maxV 10)
1:11:12:alg:Debug:got -a + r <= 3
1:11:12:alg:Debug:l28: compute ub for '-k + p', start w/ min 5, maxV 10)
1:11:25:alg:Debug:got -k + p <= 5
1:11:25:alg:Debug:l28: compute ub for 'p - r', start w/ min 8, maxV 10)
1:11:32:alg:Debug:got p - r <= 8
1:11:32:alg:Debug:l28: compute ub for 'p - x', start w/ min 0, maxV 10)
1:11:48:alg:Debug:got p - x <= 0
1:11:48:alg:Debug:l28: compute ub for 'p + s', start w/ min 9, maxV 10)
1:11:51:alg:Debug:got p + s <= 9
1:11:52:alg:Debug:l28: compute ub for '-c - k', start w/ min -1, maxV 10)
1:12:8:alg:Debug:got -c - k <= -1
1:12:8:alg:Debug:l28: compute ub for '-s - y', start w/ min 2, maxV 10)
1:12:21:alg:Debug:got -s - y <= 3
1:10:48:alg:Debug:l28: compute ub for 'k - s', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got k - s <= 9
1:10:52:alg:Debug:l28: compute ub for '-b + p', start w/ min 4, maxV 10)
1:11:4:alg:Debug:got -b + p <= 4
1:11:5:alg:Debug:l28: compute ub for '-k', start w/ min 0, maxV 10)
1:11:20:alg:Debug:got -k <= 0
1:11:21:alg:Debug:l28: compute ub for 'r - y', start w/ min 5, maxV 10)
1:11:33:alg:Debug:got r - y <= 5
1:11:34:alg:Debug:l28: compute ub for 'r + s', start w/ min 7, maxV 10)
1:11:43:alg:Debug:got r + s <= 7
1:11:44:alg:Debug:l28: compute ub for '-p - y', start w/ min -2, maxV 10)
1:11:59:alg:Debug:got -p - y <= -2
1:12:0:alg:Debug:l28: compute ub for 'k - q', start w/ min 9, maxV 10)
1:12:3:alg:Debug:got k - q <= 9
1:12:4:alg:Debug:l28: compute ub for 'k + p', start w/ min 9, maxV 10)
1:12:7:alg:Debug:got k + p <= 9
1:12:7:alg:Debug:l28: compute ub for 'q + s', start w/ min 5, maxV 10)
1:12:20:alg:Debug:got q + s <= 5
1:12:20:alg:Debug:l28: compute ub for 'k + q', start w/ min 9, maxV 10)
1:12:23:alg:Debug:got k + q <= 9
1:10:48:alg:Debug:l18: compute ub for 's', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got s <= 9
1:10:51:alg:Debug:l18: compute ub for '-a - r', start w/ min 7, maxV 10)
1:11:0:alg:Debug:got -a - r <= 7
1:11:0:alg:Debug:l18: compute ub for '-r - s', start w/ min 9, maxV 10)
1:11:3:alg:Debug:got -r - s <= 9
1:11:4:alg:Debug:l18: compute ub for '-y', start w/ min -1, maxV 10)
1:11:19:alg:Debug:got -y <= -1
1:11:19:alg:Debug:l18: compute ub for '-b', start w/ min 0, maxV 10)
1:11:35:alg:Debug:got -b <= 0
1:11:35:alg:Debug:l18: compute ub for '-p - y', start w/ min -1, maxV 10)
1:11:50:alg:Debug:got -p - y <= -1
1:11:51:alg:Debug:l18: compute ub for '-q + r', start w/ min 9, maxV 10)
1:11:54:alg:Debug:got -q + r <= 9
1:11:54:alg:Debug:l18: compute ub for 'q - r', start w/ min 9, maxV 10)
1:11:57:alg:Debug:got q - r <= 9
1:11:57:alg:Debug:l18: compute ub for 's - x', start w/ min 0, maxV 10)
1:12:13:alg:Debug:got s - x <= 0
1:12:13:alg:Debug:l18: compute ub for '-r - y', start w/ min 2, maxV 10)
1:12:25:alg:Debug:got -r - y <= 2
1:10:48:alg:Debug:l28: compute ub for '-k - r', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got -k - r <= 9
1:10:52:alg:Debug:l28: compute ub for '-c - s', start w/ min 9, maxV 10)
1:10:55:alg:Debug:got -c - s <= 9
1:10:56:alg:Debug:l28: compute ub for 'q - y', start w/ min -1, maxV 10)
1:11:11:alg:Debug:got q - y <= -1
1:11:12:alg:Debug:l28: compute ub for '-a - k', start w/ min -1, maxV 10)
1:11:27:alg:Debug:got -a - k <= -1
1:11:28:alg:Debug:l28: compute ub for 'k - x', start w/ min 9, maxV 10)
1:11:31:alg:Debug:got k - x <= 9
1:11:31:alg:Debug:l28: compute ub for 'p - y', start w/ min 0, maxV 10)
1:11:47:alg:Debug:got p - y <= 0
1:11:47:alg:Debug:l28: compute ub for '-p', start w/ min 5, maxV 10)
1:12:0:alg:Debug:got -p <= 5
1:12:0:alg:Debug:l28: compute ub for 'p - q', start w/ min 9, maxV 10)
1:12:4:alg:Debug:l28: compute ub for '-c + r', start w/ min 5, maxV 10)
1:12:16:alg:Debug:got -c + r <= 5
1:12:16:alg:Debug:l28: compute ub for '-c + p', start w/ min 5, maxV 10)
1:12:29:alg:Debug:got -c + p <= 5
1:10:48:alg:Debug:l28: compute ub for 'q - s', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got q - s <= 9
1:10:52:alg:Debug:l28: compute ub for '-q - x', start w/ min 6, maxV 10)
1:11:1:alg:Debug:got -q - x <= 6
1:11:2:alg:Debug:l28: compute ub for 'q + r', start w/ min 8, maxV 10)
1:11:8:alg:Debug:got q + r <= 8
1:11:9:alg:Debug:l28: compute ub for '-p - s', start w/ min 9, maxV 10)
1:11:12:alg:Debug:got -p - s <= 9
1:11:12:alg:Debug:l28: compute ub for '-c - y', start w/ min -1, maxV 10)
1:11:28:alg:Debug:got -c - y <= -1
1:11:28:alg:Debug:l28: compute ub for 's', start w/ min 9, maxV 10)
1:11:32:alg:Debug:got s <= 9
1:11:32:alg:Debug:l28: compute ub for '-b', start w/ min -1, maxV 10)
1:11:48:alg:Debug:got -b <= -1
1:11:48:alg:Debug:l28: compute ub for 's - x', start w/ min 0, maxV 10)
1:12:4:alg:Debug:got s - x <= 0
1:12:4:alg:Debug:l28: compute ub for 'p', start w/ min 5, maxV 10)
1:12:17:alg:Debug:got p <= 5
1:12:17:alg:Debug:l28: compute ub for '-b + r', start w/ min 4, maxV 10)
1:12:30:alg:Debug:got -b + r <= 4
1:10:48:alg:Debug:l28: compute ub for '-c - r', start w/ min 8, maxV 10)
1:10:54:alg:Debug:got -c - r <= 8
1:10:55:alg:Debug:l28: compute ub for '-p + q', start w/ min 9, maxV 10)
1:10:58:alg:Debug:got -p + q <= 9
1:10:59:alg:Debug:l28: compute ub for '-p - q', start w/ min 7, maxV 10)
1:11:8:alg:Debug:got -p - q <= 7
1:11:9:alg:Debug:l28: compute ub for 'k - r', start w/ min 9, maxV 10)
1:11:12:alg:Debug:got k - r <= 9
1:11:12:alg:Debug:l28: compute ub for '-k + r', start w/ min 5, maxV 10)
1:11:25:alg:Debug:got -k + r <= 5
1:11:25:alg:Debug:l28: compute ub for '-k - x', start w/ min -1, maxV 10)
1:11:41:alg:Debug:got -k - x <= -1
1:11:41:alg:Debug:l28: compute ub for '-a + k', start w/ min 0, maxV 10)
1:11:57:alg:Debug:got -a + k <= 0
1:11:57:alg:Debug:l28: compute ub for '-b - c', start w/ min -1, maxV 10)
1:12:12:alg:Debug:got -b - c <= -1
1:12:13:alg:Debug:l28: compute ub for '-q - y', start w/ min -1, maxV 10)
1:12:28:alg:Debug:got -q - y <= -1
1:12:29:alg:Debug:l28: compute ub for '-c + s', start w/ min 9, maxV 10)
1:12:32:alg:Debug:got -c + s <= 9
1:10:48:alg:Debug:l28: compute ub for '-b - q', start w/ min 8, maxV 10)
1:10:54:alg:Debug:got -b - q <= 8
1:10:55:alg:Debug:l28: compute ub for '-a + q', start w/ min 7, maxV 10)
1:11:4:alg:Debug:got -a + q <= 7
1:11:5:alg:Debug:l28: compute ub for '-k - y', start w/ min -1, maxV 10)
1:11:20:alg:Debug:got -k - y <= -1
1:11:21:alg:Debug:l28: compute ub for '-b + k', start w/ min 9, maxV 10)
1:11:24:alg:Debug:got -b + k <= 9
1:11:25:alg:Debug:l28: compute ub for '-k + s', start w/ min 9, maxV 10)
1:11:28:alg:Debug:got -k + s <= 9
1:11:29:alg:Debug:l28: compute ub for 'r - x', start w/ min 0, maxV 10)
1:11:44:alg:Debug:got r - x <= 0
1:11:45:alg:Debug:l28: compute ub for '-a + c', start w/ min 0, maxV 10)
1:12:0:alg:Debug:got -a + c <= 0
1:12:0:alg:Debug:l18: compute ub for '-a - y', start w/ min -2, maxV 10)
1:12:16:alg:Debug:got -a - y <= -2
1:12:16:alg:Debug:l18: compute ub for 'p - r', start w/ min 9, maxV 10)
1:12:19:alg:Debug:got p - r <= 9
1:12:19:alg:Debug:l18: compute ub for '-b - x', start w/ min -1, maxV 10)
1:12:35:alg:Debug:got -b - x <= -1
1:10:48:alg:Debug:l28: compute ub for '-x - y', start w/ min -7, maxV 10)
1:11:0:alg:Debug:got -x - y <= -2
1:11:1:alg:Debug:l28: compute ub for 's - y', start w/ min 5, maxV 10)
1:11:13:alg:Debug:got s - y <= 5
1:11:14:alg:Debug:l28: compute ub for 'k', start w/ min 9, maxV 10)
1:11:17:alg:Debug:got k <= 9
1:11:18:alg:Debug:l28: compute ub for '-c + k', start w/ min 9, maxV 10)
1:11:21:alg:Debug:got -c + k <= 9
1:11:22:alg:Debug:l28: compute ub for '-a - b', start w/ min -3, maxV 10)
1:11:37:alg:Debug:got -a - b <= -2
1:11:38:alg:Debug:l28: compute ub for '-p + s', start w/ min 8, maxV 10)
1:11:44:alg:Debug:got -p + s <= 8
1:11:45:alg:Debug:l28: compute ub for '-p - x', start w/ min 2, maxV 10)
1:11:57:alg:Debug:got -p - x <= 2
1:11:58:alg:Debug:l28: compute ub for 'p + r', start w/ min 3, maxV 10)
1:12:10:alg:Debug:got p + r <= 3
1:12:11:alg:Debug:l28: compute ub for '-k - p', start w/ min 5, maxV 10)
1:12:23:alg:Debug:got -k - p <= 5
1:12:23:alg:Debug:l28: compute ub for '-a - r', start w/ min 4, maxV 10)
1:12:36:alg:Debug:got -a - r <= 4
1:10:48:alg:Debug:l28: compute ub for '-a - c', start w/ min -2, maxV 10)
1:11:3:alg:Debug:got -a - c <= -1
1:11:4:alg:Debug:l28: compute ub for '-b - p', start w/ min 4, maxV 10)
1:11:17:alg:Debug:got -b - p <= 4
1:11:17:alg:Debug:l28: compute ub for '-q', start w/ min 9, maxV 10)
1:11:20:alg:Debug:got -q <= 9
1:11:21:alg:Debug:l28: compute ub for '-k - s', start w/ min 9, maxV 10)
1:11:24:alg:Debug:got -k - s <= 9
1:11:25:alg:Debug:l28: compute ub for 'r', start w/ min 5, maxV 10)
1:11:37:alg:Debug:got r <= 5
1:11:38:alg:Debug:l28: compute ub for '-b - k', start w/ min -1, maxV 10)
1:11:53:alg:Debug:got -b - k <= -1
1:11:54:alg:Debug:l28: compute ub for '-c - x', start w/ min -1, maxV 10)
1:12:9:alg:Debug:got -c - x <= -1
1:12:10:alg:Debug:l28: compute ub for 'k - y', start w/ min 9, maxV 10)
1:12:13:alg:Debug:got k - y <= 9
1:12:13:alg:Debug:l28: compute ub for '-a - q', start w/ min 6, maxV 10)
1:12:22:alg:Debug:got -a - q <= 6
1:12:23:alg:Debug:l28: compute ub for '-c', start w/ min 0, maxV 10)
1:12:38:alg:Debug:got -c <= 0
1:10:48:alg:Debug:l28: compute ub for '-c - q', start w/ min 9, maxV 10)
1:10:51:alg:Debug:got -c - q <= 9
1:10:52:alg:Debug:l28: compute ub for '-b - y', start w/ min -2, maxV 10)
1:11:7:alg:Debug:got -b - y <= -2
1:11:8:alg:Debug:l28: compute ub for '-a + s', start w/ min 7, maxV 10)
1:11:17:alg:Debug:got -a + s <= 7
1:11:18:alg:Debug:l28: compute ub for '-a - x', start w/ min -2, maxV 10)
1:11:33:alg:Debug:got -a - x <= -2
1:11:34:alg:Debug:l28: compute ub for '-x', start w/ min -1, maxV 10)
1:11:50:alg:Debug:got -x <= -1
1:11:50:alg:Debug:l28: compute ub for '-b + s', start w/ min 8, maxV 10)
1:11:56:alg:Debug:got -b + s <= 8
1:11:57:alg:Debug:l28: compute ub for '-p - r', start w/ min 8, maxV 10)
1:12:3:alg:Debug:got -p - r <= 8
1:12:4:alg:Debug:l28: compute ub for '-a - y', start w/ min -4, maxV 10)
1:12:16:alg:Debug:got -a - y <= -2
1:12:16:alg:Debug:l28: compute ub for '-a + p', start w/ min 2, maxV 10)
1:12:29:alg:Debug:got -a + p <= 2
1:12:29:alg:Debug:l28: compute ub for '-c - p', start w/ min 5, maxV 10)
1:12:41:alg:Debug:got -c - p <= 5
1:12:41:alg:Info:192 invs:
l28: -p - s <= 9, -b <= -1, s <= 9, -c - y <= -1, q + r <= 8, -c + p <= 5, q - s <= 9, -c + r <= 5, k - x <= 9, -p <= 5, -q - x <= 6, p - y <= 0, -a - k <= -1, s - x <= 0, p <= 5, -b + r <= 4, -c - r <= 8, -p + q <= 9, -p - q <= 7, k - r <= 9, -k + r <= 5, -k - x <= -1, -a + k <= 0, -b - c <= -1, -q - y <= -1, -c + s <= 9, -b - q <= 8, -a + q <= 7, -k - y <= -1, -b + k <= 9, -k + s <= 9, r - x <= 0, -a + c <= 0, -x - y <= -2, s - y <= 5, k <= 9, -c + k <= 9, -a - b <= -2, -p + s <= 8, -p - x <= 2, -k <= 0, -b + p <= 4, -q + r <= 8, p - s <= 9, -b - x <= -2, -s <= 9, -s - x <= -1, -c - k <= -1, q - x <= 3, p + s <= 9, p - x <= 0, p - r <= 8, -k + p <= 5, -a + r <= 3, -k - q <= 9, -k + q <= 9, k - s <= 9, k + p <= 9, r - y <= 5, k - q <= 9, -p - y <= -2, r + s <= 7, r - s <= 9, -q - s <= 8, -s - y <= 3, p + r <= 3, -k - p <= 5, -a - r <= 4, -a - c <= -1, -b - p <= 4, -q <= 9, -k - s <= 9, r <= 5, -b - k <= -1, -c - x <= -1, k - y <= 9, -a - q <= 6, -c <= 0, -c - q <= 9, -b - y <= -2, -a + s <= 7, -a - x <= -2, -x <= -1, -b + s <= 8, -p - r <= 8, -a - y <= -2, -a + p <= 2, -c - p <= 5, k + q <= 9, q + s <= 5, q - y <= -1, -k - r <= 9, -c - s <= 9, k + s <= 9, -a <= -1, -q + s <= 9, k + r <= 9, -r - x <= -1, -b + q <= 8, k - p <= 9, -r - y <= 2, -q - r <= 9, q - r <= 8, p + q <= 7, -y <= -1, -c + q <= 9, -a - s <= 5, -b - s <= 7, -b - r <= 9, q <= 9, b - y <= 0, -r <= 9, -a - p <= 3, -p + r <= 7, -r - s <= 9, b*k - a + c == 0
l18: -a - y <= -2, p - r <= 9, -b - x <= -1, -p - q <= 9, q - x <= 9, -b + r <= 9, p <= 9, -a - p <= 8, q - y <= 0, p + r <= 5, -b - p <= 9, -x - y <= -2, s - y <= 9, -p + q <= 9, -b + p <= 9, -q - s <= 9, -s <= 9, r - s <= 9, -a + r <= 8, -a - b <= -1, p + q <= 9, q + r <= 9, -p + r <= 9, p + s <= 9, r <= 9, -b - q <= 9, -p - x <= 6, -p - r <= 8, -p + s <= 9, -q <= 9, -a + q <= 9, p - s <= 9, -b - y <= -1, -b - s <= 9, p - y <= 0, -q + s <= 9, -r - x <= -1, p - q <= 9, -q - r <= 9, -q - x <= 8, q + s <= 9, r - y <= 5, -b - r <= 9, s <= 9, -a - r <= 7, -r - s <= 9, -y <= -1, -b <= 0, -p - y <= -1, q - r <= 9, s - x <= 0, -r - y <= 2, -q + r <= 9, -a + s <= 9, -x <= -1, -a - x <= -2, -r <= 9, -p <= 9, -b + s <= 9, -q - y <= 0, r + s <= 9, -s - x <= 0, q <= 9, -r + s <= 9, -a - s <= 9, r - x <= 0, b - y <= 0, -a <= -1, -s - y <= 9, -a - q <= 9, p - x <= 3, -p - s <= 9, -b + q <= 9, -a + p <= 8, p*x + r*y - a == 0, q*x + s*y - b == 0
1:12:41:alg:Info:test 192 invs on all 3012 traces
1:12:41:ds:Warn:l28: -q <= 9 disproved
1:12:41:ds:Warn:l28: -a - q <= 6 disproved
1:12:41:ds:Warn:l28: k + s <= 9 disproved
1:12:41:ds:Warn:l28: -p - q <= 7 disproved
1:12:42:ds:Warn:l28: r <= 5 disproved
1:12:42:ds:Warn:l28: r - s <= 9 disproved
1:12:42:ds:Warn:l28: k - y <= 9 disproved
1:12:42:ds:Warn:l28: -b + q <= 8 disproved
1:12:42:ds:Warn:l28: k - p <= 9 disproved
1:12:42:ds:Warn:l28: -k + p <= 5 disproved
1:12:42:ds:Warn:l28: k + r <= 9 disproved
1:12:42:ds:Warn:l28: -b - p <= 4 disproved
1:12:42:ds:Warn:l28: q - s <= 9 disproved
1:12:42:ds:Warn:l28: k + q <= 9 disproved
1:12:42:ds:Warn:l28: -r - y <= 2 disproved
1:12:42:ds:Warn:l28: -c - q <= 9 disproved
1:12:42:ds:Warn:l28: p + r <= 3 disproved
1:12:42:ds:Warn:l28: -b + s <= 8 disproved
1:12:42:ds:Warn:l28: -a + s <= 7 disproved
1:12:42:ds:Warn:l28: -p - r <= 8 disproved
1:12:42:ds:Warn:l28: -c - r <= 8 disproved
1:12:42:ds:Warn:l28: -a + p <= 2 disproved
1:12:43:ds:Warn:l28: -c + s <= 9 disproved
1:12:43:ds:Warn:l28: -q + s <= 9 disproved
1:12:43:ds:Warn:l28: s <= 9 disproved
1:12:43:ds:Warn:l28: -q - r <= 9 disproved
1:12:43:ds:Warn:l28: q + r <= 8 disproved
1:12:43:ds:Warn:l28: s - y <= 5 disproved
1:12:44:ds:Warn:l28: p <= 5 disproved
1:12:44:ds:Warn:l28: -c + k <= 9 disproved
1:12:44:ds:Warn:l28: k <= 9 disproved
1:12:44:ds:Warn:l28: -p + s <= 8 disproved
1:12:44:ds:Warn:l28: p - s <= 9 disproved
1:12:44:ds:Warn:l28: -b + r <= 4 disproved
1:12:44:ds:Warn:l28: -a - r <= 4 disproved
1:12:44:ds:Warn:l28: -r <= 9 disproved
1:12:44:ds:Warn:l28: -a - s <= 5 disproved
1:12:44:ds:Warn:l28: -k - q <= 9 disproved
1:12:44:ds:Warn:l28: -a + r <= 3 disproved
1:12:44:ds:Warn:l28: -p - s <= 9 disproved
1:12:45:ds:Warn:l28: k - q <= 9 disproved
1:12:45:ds:Warn:l28: p + q <= 7 disproved
1:12:45:ds:Warn:l28: -b - r <= 9 disproved
1:12:45:ds:Warn:l28: q - r <= 8 disproved
1:12:45:ds:Warn:l28: -q - s <= 8 disproved
1:12:45:ds:Warn:l28: q + s <= 5 disproved
1:12:45:ds:Warn:l28: -s - y <= 3 disproved
1:12:45:ds:Warn:l28: -c - s <= 9 disproved
1:12:45:ds:Warn:l28: k - x <= 9 disproved
1:12:45:ds:Warn:l28: -c + p <= 5 disproved
1:12:46:ds:Warn:l28: -a - p <= 3 disproved
1:12:46:ds:Warn:l28: -p + q <= 9 disproved
1:12:46:ds:Warn:l28: -c + r <= 5 disproved
1:12:46:ds:Warn:l28: -k - r <= 9 disproved
1:12:46:ds:Warn:l28: -p <= 5 disproved
1:12:46:ds:Warn:l28: q <= 9 disproved
1:12:46:ds:Warn:l28: p - r <= 8 disproved
1:12:46:ds:Warn:l28: -c - p <= 5 disproved
1:12:46:ds:Warn:l28: -s <= 9 disproved
1:12:46:ds:Warn:l28: -b - s <= 7 disproved
1:12:46:ds:Warn:l28: -k + q <= 9 disproved
1:12:47:ds:Warn:l28: -p + r <= 7 disproved
1:12:47:ds:Warn:l28: -c + q <= 9 disproved
1:12:47:ds:Warn:l28: -r - s <= 9 disproved
1:12:47:ds:Warn:l28: r - y <= 5 disproved
1:12:47:ds:Warn:l28: -b + p <= 4 disproved
1:12:47:ds:Warn:l28: r + s <= 7 disproved
1:12:47:ds:Warn:l28: k - r <= 9 disproved
1:12:47:ds:Warn:l28: -k + s <= 9 disproved
1:12:47:ds:Warn:l28: -k - p <= 5 disproved
1:12:47:ds:Warn:l28: -q + r <= 8 disproved
1:12:47:ds:Warn:l28: k + p <= 9 disproved
1:12:47:ds:Warn:l28: -b - q <= 8 disproved
1:12:47:ds:Warn:l28: -k + r <= 5 disproved
1:12:47:ds:Warn:l28: p + s <= 9 disproved
1:12:47:ds:Warn:l28: -b + k <= 9 disproved
1:12:48:ds:Warn:l28: -k - s <= 9 disproved
1:12:48:ds:Warn:l28: k - s <= 9 disproved
1:12:48:ds:Warn:l28: -a + q <= 7 disproved
1:12:48:ds:Warn:l18: -q <= 9 disproved
1:12:48:ds:Warn:l18: -a + p <= 8 disproved
1:12:48:ds:Warn:l18: -p + r <= 9 disproved
1:12:48:ds:Warn:l18: -b + s <= 9 disproved
1:12:48:ds:Warn:l18: r <= 9 disproved
1:12:48:ds:Warn:l18: -b - s <= 9 disproved
1:12:48:ds:Warn:l18: -a + r <= 8 disproved
1:12:48:ds:Warn:l18: -a - s <= 9 disproved
1:12:48:ds:Warn:l18: p - s <= 9 disproved
1:12:48:ds:Warn:l18: q - r <= 9 disproved
1:12:48:ds:Warn:l18: -p - q <= 9 disproved
1:12:49:ds:Warn:l18: -r - y <= 2 disproved
1:12:49:ds:Warn:l18: p + s <= 9 disproved
1:12:49:ds:Warn:l18: -a - q <= 9 disproved
1:12:49:ds:Warn:l18: -a - p <= 8 disproved
1:12:49:ds:Warn:l18: -b + q <= 9 disproved
1:12:49:ds:Warn:l18: r + s <= 9 disproved
1:12:49:ds:Warn:l18: r - y <= 5 disproved
1:12:49:ds:Warn:l18: p + r <= 5 disproved
1:12:49:ds:Warn:l18: -b + p <= 9 disproved
1:12:49:ds:Warn:l18: -q - s <= 9 disproved
1:12:49:ds:Warn:l18: -b - r <= 9 disproved
1:12:49:ds:Warn:l18: p - r <= 9 disproved
1:12:49:ds:Warn:l18: -q - x <= 8 disproved
1:12:49:ds:Warn:l18: q - x <= 9 disproved
1:12:49:ds:Warn:l18: -q + r <= 9 disproved
1:12:49:ds:Warn:l18: r - s <= 9 disproved
1:12:49:ds:Warn:l18: -a + s <= 9 disproved
1:12:49:ds:Warn:l18: q + s <= 9 disproved
1:12:49:ds:Warn:l18: -s <= 9 disproved
1:12:49:ds:Warn:l18: -q + s <= 9 disproved
1:12:49:ds:Warn:l18: -a + q <= 9 disproved
1:12:49:ds:Warn:l18: p <= 9 disproved
1:12:49:ds:Warn:l18: -b - p <= 9 disproved
1:12:49:ds:Warn:l18: s - y <= 9 disproved
1:12:49:ds:Warn:l18: -b + r <= 9 disproved
1:12:49:ds:Warn:l18: -s - y <= 9 disproved
1:12:49:ds:Warn:l18: -r + s <= 9 disproved
1:12:49:ds:Warn:l18: -b - q <= 9 disproved
1:12:49:ds:Warn:l18: s <= 9 disproved
1:12:49:ds:Warn:l18: -p - s <= 9 disproved
1:12:49:ds:Warn:l18: -p <= 9 disproved
1:12:49:ds:Warn:l18: -q - r <= 9 disproved
1:12:49:ds:Warn:l18: -r - s <= 9 disproved
1:12:49:ds:Warn:l18: -p + s <= 9 disproved
1:12:49:ds:Warn:l18: q + r <= 9 disproved
1:12:49:ds:Warn:l18: p - q <= 9 disproved
1:12:49:ds:Warn:l18: -r <= 9 disproved
1:12:49:ds:Warn:l18: -p - r <= 8 disproved
1:12:49:ds:Warn:l18: p + q <= 9 disproved
1:12:49:ds:Warn:l18: -p + q <= 9 disproved
1:12:49:ds:Warn:l18: q <= 9 disproved
1:12:49:ds:Warn:l18: -a - r <= 7 disproved
1:12:49:alg:Info:find uniq invs
1:12:49:alg:Info:60 invs:
l28: -b <= -1, -c - y <= -1, -q - x <= 6, p - y <= 0, -a - k <= -1, s - x <= 0, -k - x <= -1, -a + k <= 0, -b - c <= -1, -q - y <= -1, -k - y <= -1, r - x <= 0, -a + c <= 0, -x - y <= -2, -a - b <= -2, -p - x <= 2, -k <= 0, -b - x <= -2, -s - x <= -1, -c - k <= -1, q - x <= 3, p - x <= 0, -p - y <= -2, -a - c <= -1, -b - k <= -1, -c - x <= -1, -c <= 0, -b - y <= -2, -a - x <= -2, -x <= -1, -a - y <= -2, q - y <= -1, -a <= -1, -r - x <= -1, -y <= -1, b - y <= 0, b*k - a + c == 0
l18: -a - y <= -2, -b - x <= -1, q - y <= 0, -x - y <= -2, -a - b <= -1, -p - x <= 6, -b - y <= -1, p - y <= 0, -r - x <= -1, -y <= -1, -b <= 0, -p - y <= -1, s - x <= 0, -x <= -1, -a - x <= -2, -q - y <= 0, -s - x <= 0, r - x <= 0, b - y <= 0, -a <= -1, p - x <= 3, p*x + r*y - a == 0, q*x + s*y - b == 0
1:12:49:miscs:Debug:workloads 'uniqify' 2: [1, 1]
1:12:51:alg:Info:removed 26 redundant invs
1:12:51:alg:Info:got 34 invs, 494 inps (test 45): 
l28: r - x <= 0, -s - x <= -1, -c - k <= -1, q - x <= 3, -r - x <= -1, -q - y <= -1, s - x <= 0, -p - x <= 2, b - y <= 0, -k <= 0, -p - y <= -2, -q - x <= 6, -b <= -1, q - y <= -1, p - x <= 0, -x <= -1, p - y <= 0, -c <= 0, b*k - a + c == 0
l18: -p - y <= -1, -b <= 0, -x <= -1, p - y <= 0, q*x + s*y - b == 0, -y <= -1, b - y <= 0, p - x <= 3, s - x <= 0, -r - x <= -1, -a <= -1, r - x <= 0, q - y <= 0, p*x + r*y - a == 0, -p - x <= 6
1:12:51:alg:Info:*done* prog programs/nla/egcd2.c, invs 34, time 215.757485151 s
1:12:51:alg:Debug:rm -rf /var/tmp/DIG2__Uiija
running egcd3
1:12:52:alg:Debug:src: /var/tmp/DIG2_0ayl56/egcd3.c
1:12:52:alg:Info:analyze programs/nla/egcd3.c
1:12:52:alg:Info:set seed to: 10.0 (test 97)
1:12:52:miscs:Info:autodeg 2
1:12:52:alg:Info:check reachability
1:12:52:alg:Info:gen eqts at 3 locs: l21 (int a, int b, int y, int r, int x, int p, int q, int s); l29 (int a, int b, int y, int r, int x, int p, int q, int s, int k, int c); l41 (int a, int b, int y, int r, int x, int p, int q, int s, int d, int v, int k, int c)
1:12:52:alg:Debug:l21: need more traces (19 eqts, need >= 67)
1:12:52:alg:Debug:obtain 15 new traces
1:12:52:alg:Debug:l21: need more traces (34 eqts, need >= 67)
1:12:52:alg:Debug:obtain 16 new traces
1:12:52:alg:Debug:l21: need more traces (50 eqts, need >= 67)
1:12:53:alg:Debug:obtain 17 new traces
1:12:53:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
1:12:53:alg:Debug:l21: infer using 67 exprs
1:12:53:miscs:Debug:solve 45 uks using 67 eqts
1:12:54:alg:Debug:l21: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
1:12:54:alg:Debug:l21: check 2 unchecked (2 candidates)
1:12:54:miscs:Debug:workloads 'prove' 2: [1, 1]
1:12:58:alg:Debug:l21: no disproved candidates -- break
1:12:53:alg:Debug:l41: infer using 136 exprs
1:12:53:miscs:Debug:solve 91 uks using 136 eqts
1:13:9:alg:Debug:l41: 3 candidates:
b*d - v == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
1:13:9:alg:Debug:l41: check 3 unchecked (3 candidates)
1:13:9:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
1:12:53:alg:Debug:l29: infer using 99 exprs
1:12:53:miscs:Debug:solve 66 uks using 99 eqts
1:13:13:alg:Debug:l41: no disproved candidates -- break
1:13:13:alg:Debug:l29: 3 candidates:
b*k - a + c == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
1:13:13:alg:Debug:l29: check 3 unchecked (3 candidates)
1:13:13:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
1:13:16:alg:Debug:l29: no disproved candidates -- break
1:13:16:alg:Debug:l21: got 2 eqts, 0 new inps
1:13:16:alg:Debug:p*x + r*y - a == 0
q*x + s*y - b == 0
1:13:16:alg:Debug:l41: got 3 eqts, 0 new inps
1:13:16:alg:Debug:p*x + r*y - a == 0
b*d - v == 0
q*x + s*y - b == 0
1:13:16:alg:Debug:l29: got 3 eqts, 0 new inps
1:13:16:alg:Debug:p*x + r*y - a == 0
b*k - a + c == 0
q*x + s*y - b == 0
1:13:16:alg:Info:8 invs:
l21: p*x + r*y - a == 0, q*x + s*y - b == 0
l29: p*x + r*y - a == 0, b*k - a + c == 0, q*x + s*y - b == 0
l41: p*x + r*y - a == 0, b*d - v == 0, q*x + s*y - b == 0
1:13:16:alg:Info:gen ieqs at 3 locs: l21 (int a, int b, int y, int r, int x, int p, int q, int s); l29 (int a, int b, int y, int r, int x, int p, int q, int s, int k, int c); l41 (int a, int b, int y, int r, int x, int p, int q, int s, int d, int v, int k, int c)
1:13:16:alg:Info:3 locs: check upperbounds for 616 terms
1:13:16:miscs:Debug:workloads 'prove' 20: [31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 27]
1:14:53:alg:Info:3 locs: compute upperbounds for 317 terms
1:14:53:miscs:Debug:workloads 'guesscheck' 20: [16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 13]
1:14:54:alg:Debug:l21: compute ub for 'q - y', start w/ min 0, maxV 10)
1:15:9:alg:Debug:got q - y <= 0
1:15:9:alg:Debug:l21: compute ub for 'q - r', start w/ min 9, maxV 10)
1:15:13:alg:Debug:got q - r <= 9
1:15:13:alg:Debug:l21: compute ub for '-x - y', start w/ min -7, maxV 10)
1:15:25:alg:Debug:got -x - y <= -2
1:15:25:alg:Debug:l21: compute ub for 'q', start w/ min 9, maxV 10)
1:15:29:alg:Debug:got q <= 9
1:15:29:alg:Debug:l21: compute ub for '-a - s', start w/ min 9, maxV 10)
1:15:32:alg:Debug:l21: compute ub for '-r - s', start w/ min 9, maxV 10)
1:15:35:alg:Debug:got -r - s <= 9
1:15:35:alg:Debug:l21: compute ub for 'q + r', start w/ min 9, maxV 10)
1:15:39:alg:Debug:got q + r <= 9
1:15:39:alg:Debug:l21: compute ub for '-a + p', start w/ min 8, maxV 10)
1:15:45:alg:Debug:got -a + p <= 8
1:15:45:alg:Debug:l21: compute ub for '-b - r', start w/ min 9, maxV 10)
1:15:48:alg:Debug:got -b - r <= 9
1:15:48:alg:Debug:l21: compute ub for '-b + r', start w/ min 9, maxV 10)
1:15:52:alg:Debug:got -b + r <= 9
1:15:52:alg:Debug:l21: compute ub for '-b', start w/ min 0, maxV 10)
1:16:7:alg:Debug:got -b <= 0
1:16:7:alg:Debug:l21: compute ub for '-q', start w/ min 9, maxV 10)
1:16:11:alg:Debug:got -q <= 9
1:16:11:alg:Debug:l21: compute ub for '-q + r', start w/ min 9, maxV 10)
1:16:14:alg:Debug:l21: compute ub for '-b - p', start w/ min 9, maxV 10)
1:16:17:alg:Debug:got -b - p <= 9
1:16:17:alg:Debug:l21: compute ub for 's', start w/ min 9, maxV 10)
1:16:20:alg:Debug:got s <= 9
1:16:21:alg:Debug:l21: compute ub for '-p - y', start w/ min -1, maxV 10)
1:16:36:alg:Debug:got -p - y <= -1
1:14:54:alg:Debug:l21: compute ub for '-r', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -r <= 9
1:14:57:alg:Debug:l21: compute ub for 's - x', start w/ min 0, maxV 10)
1:15:13:alg:Debug:got s - x <= 0
1:15:13:alg:Debug:l21: compute ub for '-b - q', start w/ min 9, maxV 10)
1:15:16:alg:Debug:got -b - q <= 9
1:15:16:alg:Debug:l21: compute ub for 's - y', start w/ min 9, maxV 10)
1:15:19:alg:Debug:got s - y <= 9
1:15:19:alg:Debug:l21: compute ub for '-p + r', start w/ min 9, maxV 10)
1:15:23:alg:Debug:got -p + r <= 9
1:15:23:alg:Debug:l21: compute ub for '-p', start w/ min 9, maxV 10)
1:15:26:alg:Debug:got -p <= 9
1:15:26:alg:Debug:l21: compute ub for 'r + s', start w/ min 9, maxV 10)
1:15:29:alg:Debug:got r + s <= 9
1:15:29:alg:Debug:l21: compute ub for 'r', start w/ min 9, maxV 10)
1:15:33:alg:Debug:got r <= 9
1:15:33:alg:Debug:l21: compute ub for '-a', start w/ min -1, maxV 10)
1:15:48:alg:Debug:got -a <= -1
1:15:48:alg:Debug:l21: compute ub for '-p - x', start w/ min 7, maxV 10)
1:15:58:alg:Debug:got -p - x <= 7
1:15:58:alg:Debug:l21: compute ub for '-b + s', start w/ min 9, maxV 10)
1:16:1:alg:Debug:got -b + s <= 9
1:16:1:alg:Debug:l21: compute ub for '-b - y', start w/ min -1, maxV 10)
1:16:17:alg:Debug:got -b - y <= -1
1:16:17:alg:Debug:l21: compute ub for 'q - s', start w/ min 9, maxV 10)
1:16:20:alg:Debug:got q - s <= 9
1:16:20:alg:Debug:l21: compute ub for 'p - x', start w/ min 4, maxV 10)
1:16:33:alg:Debug:got p - x <= 4
1:16:33:alg:Debug:l21: compute ub for 'p + s', start w/ min 9, maxV 10)
1:16:36:alg:Debug:got p + s <= 9
1:16:36:alg:Debug:l21: compute ub for '-a + r', start w/ min 8, maxV 10)
1:16:42:alg:Debug:got -a + r <= 8
1:14:54:alg:Debug:l29: compute ub for 'q', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got q <= 9
1:14:57:alg:Debug:l29: compute ub for '-p - q', start w/ min 8, maxV 10)
1:15:4:alg:Debug:got -p - q <= 8
1:15:4:alg:Debug:l29: compute ub for '-p - x', start w/ min 3, maxV 10)
1:15:16:alg:Debug:got -p - x <= 3
1:15:17:alg:Debug:l29: compute ub for '-b + s', start w/ min 8, maxV 10)
1:15:23:alg:Debug:got -b + s <= 8
1:15:23:alg:Debug:l29: compute ub for '-p + r', start w/ min 9, maxV 10)
1:15:26:alg:Debug:got -p + r <= 9
1:15:27:alg:Debug:l29: compute ub for '-c - y', start w/ min -1, maxV 10)
1:15:42:alg:Debug:got -c - y <= -1
1:15:43:alg:Debug:l29: compute ub for 'q + r', start w/ min 8, maxV 10)
1:15:49:alg:Debug:got q + r <= 8
1:15:49:alg:Debug:l29: compute ub for '-q - r', start w/ min 9, maxV 10)
1:15:52:alg:Debug:got -q - r <= 9
1:15:53:alg:Debug:l29: compute ub for '-a + p', start w/ min 3, maxV 10)
1:16:5:alg:Debug:got -a + p <= 3
1:16:5:alg:Debug:l29: compute ub for '-b - c', start w/ min -1, maxV 10)
1:16:21:alg:Debug:got -b - c <= -1
1:16:21:alg:Debug:l29: compute ub for '-x - y', start w/ min -7, maxV 10)
1:16:34:alg:Debug:got -x - y <= -2
1:16:34:alg:Debug:l29: compute ub for '-k + s', start w/ min 9, maxV 10)
1:16:37:alg:Debug:got -k + s <= 9
1:16:37:alg:Debug:l29: compute ub for 'p + q', start w/ min 8, maxV 10)
1:16:44:alg:Debug:got p + q <= 8
1:16:44:alg:Debug:l29: compute ub for '-c - p', start w/ min 6, maxV 10)
1:16:53:alg:Debug:got -c - p <= 6
1:16:54:alg:Debug:l29: compute ub for '-a + r', start w/ min 4, maxV 10)
1:17:6:alg:Debug:got -a + r <= 4
1:17:6:alg:Debug:l29: compute ub for '-c - s', start w/ min 9, maxV 10)
1:17:9:alg:Debug:got -c - s <= 9
1:14:54:alg:Debug:l21: compute ub for '-p + s', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -p + s <= 9
1:14:57:alg:Debug:l21: compute ub for '-a - b', start w/ min -1, maxV 10)
1:15:12:alg:Debug:got -a - b <= -1
1:15:13:alg:Debug:l21: compute ub for '-p - r', start w/ min 8, maxV 10)
1:15:19:alg:Debug:got -p - r <= 8
1:15:19:alg:Debug:l21: compute ub for 'q + s', start w/ min 9, maxV 10)
1:15:22:alg:Debug:got q + s <= 9
1:15:22:alg:Debug:l21: compute ub for 'b - y', start w/ min 0, maxV 10)
1:15:38:alg:Debug:got b - y <= 0
1:15:38:alg:Debug:l21: compute ub for '-a - r', start w/ min 8, maxV 10)
1:15:44:alg:Debug:got -a - r <= 8
1:15:45:alg:Debug:l21: compute ub for '-p + q', start w/ min 9, maxV 10)
1:15:48:alg:Debug:got -p + q <= 9
1:15:48:alg:Debug:l21: compute ub for 'p - y', start w/ min 0, maxV 10)
1:16:3:alg:Debug:got p - y <= 0
1:16:4:alg:Debug:l21: compute ub for '-r + s', start w/ min 9, maxV 10)
1:16:7:alg:Debug:got -r + s <= 9
1:16:7:alg:Debug:l21: compute ub for '-q - y', start w/ min 0, maxV 10)
1:16:22:alg:Debug:got -q - y <= 0
1:16:23:alg:Debug:l21: compute ub for 'p + r', start w/ min 6, maxV 10)
1:16:32:alg:Debug:got p + r <= 6
1:16:32:alg:Debug:l21: compute ub for '-b + q', start w/ min 9, maxV 10)
1:16:35:alg:Debug:got -b + q <= 9
1:16:36:alg:Debug:l21: compute ub for '-p - q', start w/ min 9, maxV 10)
1:16:39:alg:Debug:l21: compute ub for '-s - x', start w/ min 0, maxV 10)
1:16:54:alg:Debug:got -s - x <= 0
1:16:55:alg:Debug:l21: compute ub for '-a - x', start w/ min -2, maxV 10)
1:17:10:alg:Debug:got -a - x <= -2
1:17:10:alg:Debug:l21: compute ub for 'p + q', start w/ min 9, maxV 10)
1:17:13:alg:Debug:got p + q <= 9
1:14:54:alg:Debug:l29: compute ub for '-r + s', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -r + s <= 9
1:14:57:alg:Debug:l29: compute ub for '-b - y', start w/ min -2, maxV 10)
1:15:13:alg:Debug:got -b - y <= -2
1:15:13:alg:Debug:l29: compute ub for '-s - y', start w/ min 6, maxV 10)
1:15:23:alg:Debug:got -s - y <= 6
1:15:23:alg:Debug:l29: compute ub for '-b + q', start w/ min 8, maxV 10)
1:15:29:alg:Debug:got -b + q <= 8
1:15:29:alg:Debug:l29: compute ub for '-q + s', start w/ min 9, maxV 10)
1:15:33:alg:Debug:got -q + s <= 9
1:15:33:alg:Debug:l29: compute ub for 'r - x', start w/ min 0, maxV 10)
1:15:48:alg:Debug:got r - x <= 0
1:15:49:alg:Debug:l29: compute ub for '-a - b', start w/ min -3, maxV 10)
1:16:4:alg:Debug:got -a - b <= -2
1:16:5:alg:Debug:l29: compute ub for '-a - q', start w/ min 7, maxV 10)
1:16:14:alg:Debug:got -a - q <= 7
1:16:14:alg:Debug:l21: compute ub for '-a + q', start w/ min 9, maxV 10)
1:16:17:alg:Debug:got -a + q <= 9
1:16:17:alg:Debug:l21: compute ub for '-r - y', start w/ min 6, maxV 10)
1:16:27:alg:Debug:got -r - y <= 6
1:16:27:alg:Debug:l21: compute ub for 'q - x', start w/ min 9, maxV 10)
1:16:30:alg:Debug:got q - x <= 9
1:16:30:alg:Debug:l21: compute ub for '-a - y', start w/ min -2, maxV 10)
1:16:46:alg:Debug:got -a - y <= -2
1:16:46:alg:Debug:l21: compute ub for '-a - p', start w/ min 8, maxV 10)
1:16:52:alg:Debug:got -a - p <= 8
1:16:52:alg:Debug:l21: compute ub for '-r - x', start w/ min -1, maxV 10)
1:17:8:alg:Debug:got -r - x <= -1
1:17:8:alg:Debug:l21: compute ub for '-q - s', start w/ min 9, maxV 10)
1:17:11:alg:Debug:l21: compute ub for 'p - r', start w/ min 9, maxV 10)
1:17:14:alg:Debug:got p - r <= 9
1:14:54:alg:Debug:l21: compute ub for '-a + s', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -a + s <= 9
1:14:57:alg:Debug:l21: compute ub for '-b + p', start w/ min 9, maxV 10)
1:15:0:alg:Debug:got -b + p <= 9
1:15:0:alg:Debug:l21: compute ub for 'r - x', start w/ min 0, maxV 10)
1:15:16:alg:Debug:got r - x <= 0
1:15:16:alg:Debug:l21: compute ub for '-x', start w/ min -1, maxV 10)
1:15:32:alg:Debug:got -x <= -1
1:15:32:alg:Debug:l21: compute ub for '-p - s', start w/ min 9, maxV 10)
1:15:35:alg:Debug:l21: compute ub for 'r - s', start w/ min 9, maxV 10)
1:15:38:alg:Debug:got r - s <= 9
1:15:38:alg:Debug:l21: compute ub for 'p', start w/ min 9, maxV 10)
1:15:42:alg:Debug:got p <= 9
1:15:42:alg:Debug:l21: compute ub for 'p - s', start w/ min 9, maxV 10)
1:15:45:alg:Debug:l21: compute ub for '-q - x', start w/ min 9, maxV 10)
1:15:48:alg:Debug:got -q - x <= 9
1:15:48:alg:Debug:l21: compute ub for '-y', start w/ min -1, maxV 10)
1:16:4:alg:Debug:got -y <= -1
1:16:4:alg:Debug:l21: compute ub for 'r - y', start w/ min 2, maxV 10)
1:16:17:alg:Debug:got r - y <= 2
1:16:17:alg:Debug:l21: compute ub for '-a - q', start w/ min 9, maxV 10)
1:16:20:alg:Debug:got -a - q <= 9
1:16:20:alg:Debug:l21: compute ub for '-b - x', start w/ min -1, maxV 10)
1:16:36:alg:Debug:got -b - x <= -1
1:16:36:alg:Debug:l41: compute ub for '-a + q', start w/ min 7, maxV 10)
1:16:45:alg:Debug:got -a + q <= 7
1:16:45:alg:Debug:l41: compute ub for '-k - y', start w/ min -1, maxV 10)
1:17:1:alg:Debug:got -k - y <= -1
1:17:1:alg:Debug:l41: compute ub for '-a + b', start w/ min 0, maxV 10)
1:17:17:alg:Debug:got -a + b <= 0
1:14:54:alg:Debug:l41: compute ub for '-c - s', start w/ min 6, maxV 10)
1:15:3:alg:Debug:got -c - s <= 6
1:15:4:alg:Debug:l41: compute ub for '-r + s', start w/ min 9, maxV 10)
1:15:7:alg:Debug:got -r + s <= 9
1:15:7:alg:Debug:l41: compute ub for '-k', start w/ min 0, maxV 10)
1:15:23:alg:Debug:got -k <= 0
1:15:23:alg:Debug:l41: compute ub for '-s - y', start w/ min 6, maxV 10)
1:15:32:alg:Debug:got -s - y <= 6
1:15:33:alg:Debug:l41: compute ub for '-b + q', start w/ min 8, maxV 10)
1:15:39:alg:Debug:got -b + q <= 8
1:15:39:alg:Debug:l41: compute ub for '-q + s', start w/ min 9, maxV 10)
1:15:42:alg:Debug:got -q + s <= 9
1:15:43:alg:Debug:l41: compute ub for 'b - c', start w/ min 0, maxV 10)
1:15:58:alg:Debug:got b - c <= 0
1:15:59:alg:Debug:l41: compute ub for '-a - d', start w/ min -3, maxV 10)
1:16:14:alg:Debug:got -a - d <= -2
1:16:14:alg:Debug:l41: compute ub for 'r - x', start w/ min 0, maxV 10)
1:16:30:alg:Debug:got r - x <= 0
1:16:30:alg:Debug:l41: compute ub for '-s - v', start w/ min 8, maxV 10)
1:16:36:alg:Debug:got -s - v <= 8
1:16:37:alg:Debug:l41: compute ub for '-v - y', start w/ min -2, maxV 10)
1:16:52:alg:Debug:got -v - y <= -2
1:16:53:alg:Debug:l41: compute ub for '-a - b', start w/ min -3, maxV 10)
1:17:8:alg:Debug:got -a - b <= -2
1:17:8:alg:Debug:l41: compute ub for '-a - q', start w/ min 7, maxV 10)
1:17:18:alg:Debug:got -a - q <= 7
1:14:54:alg:Debug:l29: compute ub for '-a + q', start w/ min 7, maxV 10)
1:15:3:alg:Debug:got -a + q <= 7
1:15:4:alg:Debug:l29: compute ub for '-k - y', start w/ min -1, maxV 10)
1:15:19:alg:Debug:got -k - y <= -1
1:15:19:alg:Debug:l29: compute ub for '-r - x', start w/ min -1, maxV 10)
1:15:35:alg:Debug:got -r - x <= -1
1:15:35:alg:Debug:l29: compute ub for 'q + s', start w/ min 6, maxV 10)
1:15:45:alg:Debug:got q + s <= 6
1:15:45:alg:Debug:l29: compute ub for '-r', start w/ min 9, maxV 10)
1:15:48:alg:Debug:got -r <= 9
1:15:48:alg:Debug:l29: compute ub for '-b - q', start w/ min 8, maxV 10)
1:15:55:alg:Debug:got -b - q <= 8
1:15:55:alg:Debug:l29: compute ub for 's - y', start w/ min 2, maxV 10)
1:16:7:alg:Debug:got s - y <= 2
1:16:8:alg:Debug:l29: compute ub for 'r + s', start w/ min 7, maxV 10)
1:16:17:alg:Debug:got r + s <= 7
1:16:17:alg:Debug:l29: compute ub for '-c + s', start w/ min 9, maxV 10)
1:16:20:alg:Debug:got -c + s <= 9
1:16:21:alg:Debug:l29: compute ub for '-a', start w/ min -1, maxV 10)
1:16:36:alg:Debug:got -a <= -1
1:16:37:alg:Debug:l29: compute ub for '-a - r', start w/ min 3, maxV 10)
1:16:49:alg:Debug:got -a - r <= 3
1:16:49:alg:Debug:l29: compute ub for '-c + p', start w/ min 5, maxV 10)
1:17:2:alg:Debug:got -c + p <= 5
1:17:2:alg:Debug:l29: compute ub for 'p - q', start w/ min 9, maxV 10)
1:17:5:alg:Debug:got p - q <= 9
1:17:6:alg:Debug:l29: compute ub for '-k - s', start w/ min 9, maxV 10)
1:17:9:alg:Debug:got -k - s <= 9
1:17:9:alg:Debug:l29: compute ub for '-a - p', start w/ min 4, maxV 10)
1:17:21:alg:Debug:got -a - p <= 4
1:17:22:alg:Debug:l29: compute ub for '-q + r', start w/ min 9, maxV 10)
1:17:25:alg:Debug:got -q + r <= 9
1:14:54:alg:Debug:l29: compute ub for '-b + p', start w/ min 4, maxV 10)
1:15:6:alg:Debug:got -b + p <= 4
1:15:7:alg:Debug:l29: compute ub for '-k + p', start w/ min 5, maxV 10)
1:15:19:alg:Debug:got -k + p <= 5
1:15:19:alg:Debug:l29: compute ub for '-c - r', start w/ min 9, maxV 10)
1:15:22:alg:Debug:got -c - r <= 9
1:15:23:alg:Debug:l29: compute ub for '-b + r', start w/ min 5, maxV 10)
1:15:35:alg:Debug:got -b + r <= 5
1:15:36:alg:Debug:l29: compute ub for 'r - s', start w/ min 9, maxV 10)
1:15:39:alg:Debug:got r - s <= 9
1:15:39:alg:Debug:l29: compute ub for '-c', start w/ min 0, maxV 10)
1:15:55:alg:Debug:got -c <= 0
1:15:55:alg:Debug:l29: compute ub for '-a + s', start w/ min 7, maxV 10)
1:16:4:alg:Debug:got -a + s <= 7
1:16:5:alg:Debug:l29: compute ub for '-q - s', start w/ min 8, maxV 10)
1:16:11:alg:Debug:got -q - s <= 8
1:16:11:alg:Debug:l29: compute ub for 'b - y', start w/ min 0, maxV 10)
1:16:27:alg:Debug:got b - y <= 0
1:16:27:alg:Debug:l29: compute ub for '-q - y', start w/ min -1, maxV 10)
1:16:42:alg:Debug:got -q - y <= -1
1:16:43:alg:Debug:l29: compute ub for '-p - r', start w/ min 8, maxV 10)
1:16:49:alg:Debug:got -p - r <= 8
1:16:49:alg:Debug:l29: compute ub for 'r', start w/ min 6, maxV 10)
1:16:59:alg:Debug:got r <= 6
1:16:59:alg:Debug:l29: compute ub for '-k - q', start w/ min 9, maxV 10)
1:17:2:alg:Debug:got -k - q <= 9
1:17:3:alg:Debug:l29: compute ub for '-y', start w/ min -1, maxV 10)
1:17:18:alg:Debug:got -y <= -1
1:17:18:alg:Debug:l29: compute ub for '-p - s', start w/ min 9, maxV 10)
1:17:21:alg:Debug:got -p - s <= 9
1:17:22:alg:Debug:l29: compute ub for 'q - r', start w/ min 8, maxV 10)
1:17:28:alg:Debug:got q - r <= 8
1:14:54:alg:Debug:l29: compute ub for 's', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got s <= 9
1:14:57:alg:Debug:l29: compute ub for 'p + r', start w/ min 3, maxV 10)
1:15:10:alg:Debug:got p + r <= 3
1:15:10:alg:Debug:l29: compute ub for '-b - s', start w/ min 8, maxV 10)
1:15:16:alg:Debug:got -b - s <= 8
1:15:17:alg:Debug:l29: compute ub for 'p - x', start w/ min 0, maxV 10)
1:15:32:alg:Debug:got p - x <= 0
1:15:33:alg:Debug:l29: compute ub for '-p + q', start w/ min 9, maxV 10)
1:15:36:alg:Debug:got -p + q <= 9
1:15:36:alg:Debug:l29: compute ub for '-s', start w/ min 9, maxV 10)
1:15:39:alg:Debug:got -s <= 9
1:15:39:alg:Debug:l29: compute ub for '-b - k', start w/ min -1, maxV 10)
1:15:55:alg:Debug:got -b - k <= -1
1:15:55:alg:Debug:l29: compute ub for '-x', start w/ min -1, maxV 10)
1:16:11:alg:Debug:got -x <= -1
1:16:11:alg:Debug:l29: compute ub for '-c - k', start w/ min -1, maxV 10)
1:16:27:alg:Debug:got -c - k <= -1
1:16:27:alg:Debug:l29: compute ub for 'p - s', start w/ min 9, maxV 10)
1:16:30:alg:Debug:got p - s <= 9
1:16:31:alg:Debug:l29: compute ub for '-q - x', start w/ min 7, maxV 10)
1:16:40:alg:Debug:got -q - x <= 7
1:16:40:alg:Debug:l29: compute ub for '-b - x', start w/ min -2, maxV 10)
1:16:55:alg:Debug:got -b - x <= -2
1:16:56:alg:Debug:l29: compute ub for '-a - x', start w/ min -2, maxV 10)
1:17:11:alg:Debug:got -a - x <= -2
1:17:12:alg:Debug:l29: compute ub for 'q - x', start w/ min 4, maxV 10)
1:17:24:alg:Debug:got q - x <= 4
1:17:24:alg:Debug:l29: compute ub for '-k + q', start w/ min 9, maxV 10)
1:17:27:alg:Debug:got -k + q <= 9
1:17:28:alg:Debug:l29: compute ub for '-q', start w/ min 9, maxV 10)
1:17:31:alg:Debug:got -q <= 9
1:14:54:alg:Debug:l41: compute ub for '-q - y', start w/ min -1, maxV 10)
1:15:9:alg:Debug:got -q - y <= -1
1:15:10:alg:Debug:l41: compute ub for '-p - r', start w/ min 8, maxV 10)
1:15:16:alg:Debug:got -p - r <= 8
1:15:16:alg:Debug:l41: compute ub for '-v', start w/ min -1, maxV 10)
1:15:32:alg:Debug:got -v <= -1
1:15:32:alg:Debug:l41: compute ub for '-c + d', start w/ min 0, maxV 10)
1:15:48:alg:Debug:got -c + d <= 0
1:15:48:alg:Debug:l41: compute ub for 'r', start w/ min 6, maxV 10)
1:15:57:alg:Debug:got r <= 6
1:15:58:alg:Debug:l41: compute ub for '-d + q', start w/ min 8, maxV 10)
1:16:4:alg:Debug:got -d + q <= 8
1:16:4:alg:Debug:l41: compute ub for '-k - q', start w/ min 9, maxV 10)
1:16:8:alg:Debug:got -k - q <= 9
1:16:8:alg:Debug:l41: compute ub for '-y', start w/ min -1, maxV 10)
1:16:23:alg:Debug:got -y <= -1
1:16:24:alg:Debug:l41: compute ub for 'b - x', start w/ min 0, maxV 10)
1:16:39:alg:Debug:got b - x <= 0
1:16:40:alg:Debug:l41: compute ub for '-p - s', start w/ min 9, maxV 10)
1:16:43:alg:Debug:got -p - s <= 9
1:16:43:alg:Debug:l41: compute ub for 'q - r', start w/ min 8, maxV 10)
1:16:49:alg:Debug:got q - r <= 8
1:16:50:alg:Debug:l41: compute ub for '-p - v', start w/ min 5, maxV 10)
1:17:2:alg:Debug:got -p - v <= 5
1:17:2:alg:Debug:l41: compute ub for 'q', start w/ min 9, maxV 10)
1:17:6:alg:Debug:got q <= 9
1:17:6:alg:Debug:l41: compute ub for '-p - q', start w/ min 8, maxV 10)
1:17:12:alg:Debug:got -p - q <= 8
1:17:13:alg:Debug:l41: compute ub for '-p - x', start w/ min 3, maxV 10)
1:17:25:alg:Debug:got -p - x <= 3
1:17:25:alg:Debug:l41: compute ub for '-b + s', start w/ min 8, maxV 10)
1:17:31:alg:Debug:got -b + s <= 8
1:14:54:alg:Debug:l41: compute ub for '-q + r', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -q + r <= 9
1:14:57:alg:Debug:l41: compute ub for '-c + v', start w/ min 0, maxV 10)
1:15:13:alg:Debug:got -c + v <= 0
1:15:13:alg:Debug:l41: compute ub for 's', start w/ min 9, maxV 10)
1:15:16:alg:Debug:got s <= 9
1:15:17:alg:Debug:l41: compute ub for '-b - v', start w/ min -2, maxV 10)
1:15:32:alg:Debug:got -b - v <= -2
1:15:33:alg:Debug:l41: compute ub for '-d - s', start w/ min 8, maxV 10)
1:15:39:alg:Debug:got -d - s <= 8
1:15:39:alg:Debug:l41: compute ub for 'p + r', start w/ min 3, maxV 10)
1:15:52:alg:Debug:got p + r <= 3
1:15:52:alg:Debug:l41: compute ub for '-q - s', start w/ min 8, maxV 10)
1:15:58:alg:Debug:got -q - s <= 8
1:15:59:alg:Debug:l41: compute ub for '-b - s', start w/ min 8, maxV 10)
1:16:5:alg:Debug:got -b - s <= 8
1:16:5:alg:Debug:l41: compute ub for 'p - x', start w/ min -1, maxV 10)
1:16:21:alg:Debug:got p - x <= 0
1:16:21:alg:Debug:l41: compute ub for 'p - q', start w/ min 9, maxV 10)
1:16:24:alg:Debug:got p - q <= 9
1:16:24:alg:Debug:l41: compute ub for '-s', start w/ min 9, maxV 10)
1:16:28:alg:Debug:got -s <= 9
1:16:28:alg:Debug:l41: compute ub for 'q + r', start w/ min 8, maxV 10)
1:16:34:alg:Debug:got q + r <= 8
1:16:35:alg:Debug:l41: compute ub for 'p - v', start w/ min 4, maxV 10)
1:16:47:alg:Debug:got p - v <= 4
1:16:47:alg:Debug:l41: compute ub for '-b - k', start w/ min -1, maxV 10)
1:17:3:alg:Debug:got -b - k <= -1
1:17:3:alg:Debug:l41: compute ub for '-d - y', start w/ min -2, maxV 10)
1:17:19:alg:Debug:got -d - y <= -2
1:17:19:alg:Debug:l41: compute ub for '-b - c', start w/ min -2, maxV 10)
1:17:34:alg:Debug:got -b - c <= -2
1:14:54:alg:Debug:l41: compute ub for '-c - k', start w/ min -2, maxV 10)
1:15:9:alg:Debug:got -c - k <= -1
1:15:10:alg:Debug:l41: compute ub for 'p - s', start w/ min 9, maxV 10)
1:15:13:alg:Debug:got p - s <= 9
1:15:13:alg:Debug:l41: compute ub for '-q - x', start w/ min 7, maxV 10)
1:15:23:alg:Debug:got -q - x <= 7
1:15:23:alg:Debug:l41: compute ub for '-b - x', start w/ min -2, maxV 10)
1:15:38:alg:Debug:got -b - x <= -2
1:15:39:alg:Debug:l41: compute ub for '-a - y', start w/ min -4, maxV 10)
1:15:51:alg:Debug:got -a - y <= -2
1:15:52:alg:Debug:l41: compute ub for 'q - x', start w/ min 4, maxV 10)
1:16:4:alg:Debug:got q - x <= 4
1:16:4:alg:Debug:l41: compute ub for '-k + q', start w/ min 9, maxV 10)
1:16:8:alg:Debug:got -k + q <= 9
1:16:8:alg:Debug:l41: compute ub for '-x - y', start w/ min -7, maxV 10)
1:16:20:alg:Debug:got -x - y <= -2
1:16:21:alg:Debug:l41: compute ub for '-b - q', start w/ min 8, maxV 10)
1:16:27:alg:Debug:got -b - q <= 8
1:16:27:alg:Debug:l41: compute ub for 'p - r', start w/ min 9, maxV 10)
1:16:30:alg:Debug:got p - r <= 9
1:16:31:alg:Debug:l41: compute ub for 'q - y', start w/ min -1, maxV 10)
1:16:46:alg:Debug:got q - y <= -1
1:16:47:alg:Debug:l41: compute ub for '-k - s', start w/ min 9, maxV 10)
1:16:50:alg:Debug:got -k - s <= 9
1:16:50:alg:Debug:l41: compute ub for '-c - x', start w/ min -2, maxV 10)
1:17:6:alg:Debug:got -c - x <= -2
1:17:6:alg:Debug:l41: compute ub for '-b - y', start w/ min -2, maxV 10)
1:17:21:alg:Debug:got -b - y <= -2
1:17:21:alg:Debug:l41: compute ub for 'q - s', start w/ min 9, maxV 10)
1:17:25:alg:Debug:got q - s <= 9
1:17:25:alg:Debug:l41: compute ub for '-a - v', start w/ min -3, maxV 10)
1:17:40:alg:Debug:got -a - v <= -2
1:14:54:alg:Debug:l29: compute ub for '-k - x', start w/ min -1, maxV 10)
1:15:9:alg:Debug:got -k - x <= -1
1:15:10:alg:Debug:l29: compute ub for 'p - r', start w/ min 9, maxV 10)
1:15:13:alg:Debug:got p - r <= 9
1:15:13:alg:Debug:l29: compute ub for 'q - y', start w/ min -1, maxV 10)
1:15:29:alg:Debug:got q - y <= -1
1:15:29:alg:Debug:l29: compute ub for '-c - x', start w/ min -1, maxV 10)
1:15:44:alg:Debug:got -c - x <= -1
1:15:45:alg:Debug:l29: compute ub for '-k', start w/ min 0, maxV 10)
1:16:0:alg:Debug:got -k <= 0
1:16:1:alg:Debug:l29: compute ub for 'q - s', start w/ min 9, maxV 10)
1:16:4:alg:Debug:got q - s <= 9
1:16:4:alg:Debug:l29: compute ub for '-a - s', start w/ min 6, maxV 10)
1:16:14:alg:Debug:got -a - s <= 6
1:16:14:alg:Debug:l29: compute ub for '-r - s', start w/ min 8, maxV 10)
1:16:20:alg:Debug:got -r - s <= 8
1:16:20:alg:Debug:l29: compute ub for '-b - r', start w/ min 7, maxV 10)
1:16:30:alg:Debug:got -b - r <= 7
1:16:30:alg:Debug:l29: compute ub for '-b', start w/ min -1, maxV 10)
1:16:46:alg:Debug:got -b <= -1
1:16:46:alg:Debug:l29: compute ub for '-c + r', start w/ min 6, maxV 10)
1:16:55:alg:Debug:got -c + r <= 6
1:16:55:alg:Debug:l29: compute ub for '-k - p', start w/ min 6, maxV 10)
1:17:5:alg:Debug:got -k - p <= 6
1:17:5:alg:Debug:l29: compute ub for '-b - p', start w/ min 5, maxV 10)
1:17:17:alg:Debug:got -b - p <= 5
1:17:18:alg:Debug:l29: compute ub for '-a + k', start w/ min 0, maxV 10)
1:17:33:alg:Debug:got -a + k <= 0
1:17:33:alg:Debug:l29: compute ub for '-p + s', start w/ min 8, maxV 10)
1:17:39:alg:Debug:got -p + s <= 8
1:17:40:alg:Debug:l29: compute ub for '-k - r', start w/ min 9, maxV 10)
1:17:43:alg:Debug:got -k - r <= 9
1:14:54:alg:Debug:l41: compute ub for '-p + r', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -p + r <= 9
1:14:57:alg:Debug:l41: compute ub for '-c - y', start w/ min -2, maxV 10)
1:15:13:alg:Debug:got -c - y <= -2
1:15:13:alg:Debug:l41: compute ub for '-d + s', start w/ min 8, maxV 10)
1:15:20:alg:Debug:got -d + s <= 8
1:15:20:alg:Debug:l41: compute ub for 'b - v', start w/ min 0, maxV 10)
1:15:35:alg:Debug:got b - v <= 0
1:15:36:alg:Debug:l41: compute ub for '-c - v', start w/ min -2, maxV 10)
1:15:51:alg:Debug:got -c - v <= -2
1:15:52:alg:Debug:l41: compute ub for '-q - r', start w/ min 9, maxV 10)
1:15:55:alg:Debug:got -q - r <= 9
1:15:55:alg:Debug:l41: compute ub for '-a + p', start w/ min 3, maxV 10)
1:16:8:alg:Debug:got -a + p <= 3
1:16:8:alg:Debug:l41: compute ub for 'd - v', start w/ min 0, maxV 10)
1:16:23:alg:Debug:got d - v <= 0
1:16:24:alg:Debug:l41: compute ub for '-q', start w/ min 9, maxV 10)
1:16:27:alg:Debug:got -q <= 9
1:16:27:alg:Debug:l41: compute ub for '-k + s', start w/ min 9, maxV 10)
1:16:30:alg:Debug:got -k + s <= 9
1:16:31:alg:Debug:l41: compute ub for '-k - x', start w/ min -1, maxV 10)
1:16:46:alg:Debug:got -k - x <= -1
1:16:47:alg:Debug:l41: compute ub for 'p + q', start w/ min 8, maxV 10)
1:16:53:alg:Debug:got p + q <= 8
1:16:53:alg:Debug:l41: compute ub for '-c - p', start w/ min 4, maxV 10)
1:17:6:alg:Debug:got -c - p <= 4
1:17:6:alg:Debug:l41: compute ub for '-a + r', start w/ min 4, maxV 10)
1:17:18:alg:Debug:got -a + r <= 4
1:17:19:alg:Debug:l41: compute ub for '-v - x', start w/ min -2, maxV 10)
1:17:34:alg:Debug:got -v - x <= -2
1:17:34:alg:Debug:l41: compute ub for '-d - k', start w/ min -1, maxV 10)
1:17:50:alg:Debug:got -d - k <= -1
1:14:54:alg:Debug:l41: compute ub for 'p + s', start w/ min 8, maxV 10)
1:15:0:alg:Debug:got p + s <= 8
1:15:1:alg:Debug:l41: compute ub for '-a - k', start w/ min -2, maxV 10)
1:15:16:alg:Debug:got -a - k <= -1
1:15:16:alg:Debug:l41: compute ub for '-b + p', start w/ min 4, maxV 10)
1:15:29:alg:Debug:got -b + p <= 4
1:15:29:alg:Debug:l41: compute ub for '-k + p', start w/ min 5, maxV 10)
1:15:41:alg:Debug:got -k + p <= 5
1:15:42:alg:Debug:l41: compute ub for '-c - r', start w/ min 7, maxV 10)
1:15:51:alg:Debug:got -c - r <= 7
1:15:52:alg:Debug:l41: compute ub for '-c - q', start w/ min 7, maxV 10)
1:16:1:alg:Debug:got -c - q <= 7
1:16:1:alg:Debug:l41: compute ub for '-b + r', start w/ min 5, maxV 10)
1:16:14:alg:Debug:got -b + r <= 5
1:16:14:alg:Debug:l41: compute ub for 'r - s', start w/ min 9, maxV 10)
1:16:17:alg:Debug:got r - s <= 9
1:16:18:alg:Debug:l41: compute ub for '-c', start w/ min -1, maxV 10)
1:16:33:alg:Debug:got -c <= -1
1:16:33:alg:Debug:l41: compute ub for '-a + s', start w/ min 7, maxV 10)
1:16:43:alg:Debug:got -a + s <= 7
1:16:43:alg:Debug:l41: compute ub for '-q - v', start w/ min 8, maxV 10)
1:16:49:alg:Debug:got -q - v <= 8
1:16:50:alg:Debug:l41: compute ub for '-d + r', start w/ min 5, maxV 10)
1:17:2:alg:Debug:got -d + r <= 5
1:17:2:alg:Debug:l41: compute ub for '-d + p', start w/ min 4, maxV 10)
1:17:15:alg:Debug:got -d + p <= 4
1:17:15:alg:Debug:l41: compute ub for '-a + v', start w/ min 0, maxV 10)
1:17:30:alg:Debug:got -a + v <= 0
1:17:30:alg:Debug:l41: compute ub for 'q + s', start w/ min 6, maxV 10)
1:17:40:alg:Debug:got q + s <= 6
1:17:40:alg:Debug:l41: compute ub for 'b - y', start w/ min 0, maxV 10)
1:17:55:alg:Debug:got b - y <= 0
1:14:54:alg:Debug:l41: compute ub for 's - v', start w/ min 8, maxV 10)
1:15:0:alg:Debug:got s - v <= 8
1:15:1:alg:Debug:l41: compute ub for '-r - x', start w/ min -2, maxV 10)
1:15:16:alg:Debug:got -r - x <= -1
1:15:16:alg:Debug:l41: compute ub for '-a + d', start w/ min 0, maxV 10)
1:15:32:alg:Debug:got -a + d <= 0
1:15:32:alg:Debug:l41: compute ub for '-r', start w/ min 9, maxV 10)
1:15:35:alg:Debug:got -r <= 9
1:15:36:alg:Debug:l41: compute ub for '-c - d', start w/ min -2, maxV 10)
1:15:51:alg:Debug:got -c - d <= -2
1:15:52:alg:Debug:l41: compute ub for 's - y', start w/ min 2, maxV 10)
1:16:4:alg:Debug:got s - y <= 2
1:16:4:alg:Debug:l41: compute ub for '-r - s', start w/ min 8, maxV 10)
1:16:11:alg:Debug:got -r - s <= 8
1:16:11:alg:Debug:l41: compute ub for '-c + s', start w/ min 7, maxV 10)
1:16:20:alg:Debug:got -c + s <= 7
1:16:21:alg:Debug:l41: compute ub for '-a', start w/ min -2, maxV 10)
1:16:36:alg:Debug:got -a <= -1
1:16:37:alg:Debug:l41: compute ub for '-a - r', start w/ min 3, maxV 10)
1:16:49:alg:Debug:got -a - r <= 3
1:16:49:alg:Debug:l41: compute ub for '-k - v', start w/ min -1, maxV 10)
1:17:5:alg:Debug:got -k - v <= -1
1:17:5:alg:Debug:l41: compute ub for '-c + p', start w/ min 3, maxV 10)
1:17:17:alg:Debug:got -c + p <= 3
1:17:18:alg:Debug:l41: compute ub for '-p + q', start w/ min 9, maxV 10)
1:17:21:alg:Debug:got -p + q <= 9
1:17:21:alg:Debug:l41: compute ub for '-a - x', start w/ min -4, maxV 10)
1:17:33:alg:Debug:got -a - x <= -2
1:17:34:alg:Debug:l41: compute ub for '-d - v', start w/ min -2, maxV 10)
1:17:49:alg:Debug:got -d - v <= -2
1:17:49:alg:Debug:l41: compute ub for '-a - p', start w/ min 4, maxV 10)
1:18:2:alg:Debug:got -a - p <= 4
1:14:54:alg:Debug:l41: compute ub for '-d - p', start w/ min 5, maxV 10)
1:15:6:alg:Debug:got -d - p <= 5
1:15:7:alg:Debug:l41: compute ub for '-x', start w/ min -1, maxV 10)
1:15:22:alg:Debug:got -x <= -1
1:15:23:alg:Debug:l41: compute ub for '-d - r', start w/ min 8, maxV 10)
1:15:29:alg:Debug:got -d - r <= 8
1:15:29:alg:Debug:l41: compute ub for 'q - v', start w/ min 8, maxV 10)
1:15:35:alg:Debug:got q - v <= 8
1:15:36:alg:Debug:l41: compute ub for '-a - s', start w/ min 6, maxV 10)
1:15:45:alg:Debug:got -a - s <= 6
1:15:45:alg:Debug:l41: compute ub for '-d - x', start w/ min -2, maxV 10)
1:16:1:alg:Debug:got -d - x <= -2
1:16:1:alg:Debug:l41: compute ub for 'r + s', start w/ min 7, maxV 10)
1:16:10:alg:Debug:got r + s <= 7
1:16:11:alg:Debug:l41: compute ub for '-b - r', start w/ min 7, maxV 10)
1:16:20:alg:Debug:got -b - r <= 7
1:16:21:alg:Debug:l41: compute ub for '-b', start w/ min -1, maxV 10)
1:16:36:alg:Debug:got -b <= -1
1:16:36:alg:Debug:l41: compute ub for '-c + r', start w/ min 4, maxV 10)
1:16:49:alg:Debug:got -c + r <= 4
1:16:49:alg:Debug:l41: compute ub for '-k - p', start w/ min 6, maxV 10)
1:16:59:alg:Debug:got -k - p <= 6
1:16:59:alg:Debug:l41: compute ub for '-b - p', start w/ min 5, maxV 10)
1:17:11:alg:Debug:got -b - p <= 5
1:17:12:alg:Debug:l41: compute ub for '-a + k', start w/ min -1, maxV 10)
1:17:27:alg:Debug:got -a + k <= -1
1:17:27:alg:Debug:l41: compute ub for '-d', start w/ min -1, maxV 10)
1:17:43:alg:Debug:got -d <= -1
1:17:43:alg:Debug:l41: compute ub for '-p + s', start w/ min 8, maxV 10)
1:17:49:alg:Debug:got -p + s <= 8
1:17:49:alg:Debug:l41: compute ub for 's - x', start w/ min -1, maxV 10)
1:18:5:alg:Debug:got s - x <= 0
1:14:54:alg:Debug:l41: compute ub for '-k - r', start w/ min 9, maxV 10)
1:14:57:alg:Debug:got -k - r <= 9
1:14:57:alg:Debug:l41: compute ub for 'p - y', start w/ min 0, maxV 10)
1:15:13:alg:Debug:got p - y <= 0
1:15:13:alg:Debug:l41: compute ub for 'r - v', start w/ min 5, maxV 10)
1:15:26:alg:Debug:got r - v <= 5
1:15:26:alg:Debug:l41: compute ub for '-s - x', start w/ min -1, maxV 10)
1:15:42:alg:Debug:got -s - x <= -1
1:15:42:alg:Debug:l41: compute ub for '-c + q', start w/ min 7, maxV 10)
1:15:51:alg:Debug:got -c + q <= 7
1:15:52:alg:Debug:l41: compute ub for '-a - c', start w/ min -4, maxV 10)
1:16:4:alg:Debug:got -a - c <= -2
1:16:4:alg:Debug:l41: compute ub for 'p', start w/ min 5, maxV 10)
1:16:17:alg:Debug:got p <= 5
1:16:17:alg:Debug:l41: compute ub for 'r - y', start w/ min -1, maxV 10)
1:16:33:alg:Debug:got r - y <= -1
1:16:33:alg:Debug:l41: compute ub for '-r - y', start w/ min 2, maxV 10)
1:16:45:alg:Debug:got -r - y <= 2
1:16:46:alg:Debug:l41: compute ub for '-a + c', start w/ min 0, maxV 10)
1:17:1:alg:Debug:got -a + c <= 0
1:17:2:alg:Debug:l41: compute ub for '-b - d', start w/ min -2, maxV 10)
1:17:17:alg:Debug:got -b - d <= -2
1:17:18:alg:Debug:l41: compute ub for '-d - q', start w/ min 8, maxV 10)
1:17:24:alg:Debug:got -d - q <= 8
1:17:24:alg:Debug:l41: compute ub for '-r - v', start w/ min 7, maxV 10)
1:17:33:alg:Debug:got -r - v <= 7
1:17:33:alg:Debug:l41: compute ub for '-p', start w/ min 6, maxV 10)
1:17:43:alg:Debug:got -p <= 6
1:17:43:alg:Debug:l41: compute ub for '-p - y', start w/ min -2, maxV 10)
1:17:58:alg:Debug:got -p - y <= -2
1:17:59:alg:Debug:l41: compute ub for '-k + r', start w/ min 6, maxV 10)
1:18:8:alg:Debug:got -k + r <= 6
1:14:54:alg:Debug:l29: compute ub for 'p - y', start w/ min 0, maxV 10)
1:15:9:alg:Debug:got p - y <= 0
1:15:10:alg:Debug:l29: compute ub for '-s - x', start w/ min -1, maxV 10)
1:15:25:alg:Debug:got -s - x <= -1
1:15:26:alg:Debug:l29: compute ub for '-c + q', start w/ min 9, maxV 10)
1:15:29:alg:Debug:got -c + q <= 9
1:15:29:alg:Debug:l29: compute ub for '-a - c', start w/ min -2, maxV 10)
1:15:45:alg:Debug:got -a - c <= -1
1:15:45:alg:Debug:l29: compute ub for 'p', start w/ min 5, maxV 10)
1:15:57:alg:Debug:got p <= 5
1:15:58:alg:Debug:l29: compute ub for 'r - y', start w/ min -1, maxV 10)
1:16:13:alg:Debug:got r - y <= -1
1:16:14:alg:Debug:l29: compute ub for '-r - y', start w/ min 2, maxV 10)
1:16:26:alg:Debug:got -r - y <= 2
1:16:26:alg:Debug:l29: compute ub for '-a - y', start w/ min -4, maxV 10)
1:16:39:alg:Debug:got -a - y <= -2
1:16:39:alg:Debug:l29: compute ub for '-a + c', start w/ min 0, maxV 10)
1:16:55:alg:Debug:got -a + c <= 0
1:16:55:alg:Debug:l29: compute ub for '-c - q', start w/ min 9, maxV 10)
1:16:58:alg:Debug:got -c - q <= 9
1:16:58:alg:Debug:l29: compute ub for 's - x', start w/ min 0, maxV 10)
1:17:14:alg:Debug:got s - x <= 0
1:17:14:alg:Debug:l29: compute ub for '-p', start w/ min 6, maxV 10)
1:17:24:alg:Debug:got -p <= 6
1:17:24:alg:Debug:l29: compute ub for '-p - y', start w/ min -2, maxV 10)
1:17:39:alg:Debug:got -p - y <= -2
1:17:39:alg:Debug:l29: compute ub for '-k + r', start w/ min 6, maxV 10)
1:17:49:alg:Debug:got -k + r <= 6
1:17:49:alg:Debug:l29: compute ub for 'p + s', start w/ min 8, maxV 10)
1:17:55:alg:Debug:got p + s <= 8
1:17:55:alg:Debug:l29: compute ub for '-a - k', start w/ min -1, maxV 10)
1:18:11:alg:Debug:got -a - k <= -1
1:18:11:alg:Info:319 invs:
l21: -b - x <= -1, -b + p <= 9, -r - x <= -1, -a - p <= 8, -a - y <= -2, q - x <= 9, -y <= -1, -a + q <= 9, p - r <= 9, -r - y <= 6, r - y <= 2, -a - q <= 9, -a + s <= 9, r - s <= 9, -x <= -1, -q - x <= 9, r - x <= 0, p <= 9, q - r <= 9, -x - y <= -2, q - y <= 0, -p + s <= 9, q + s <= 9, -p - r <= 8, -a - b <= -1, -a - x <= -2, p + r <= 6, -q - y <= 0, b - y <= 0, -r + s <= 9, -a - r <= 8, p + q <= 9, -s - x <= 0, -b + q <= 9, p - y <= 0, -p + q <= 9, -p - x <= 7, -a + r <= 8, p - x <= 4, -b + s <= 9, -a <= -1, r <= 9, q - s <= 9, -b - y <= -1, r + s <= 9, p + s <= 9, -p <= 9, -p + r <= 9, -a + p <= 8, q <= 9, q + r <= 9, -r - s <= 9, -b + r <= 9, s - y <= 9, -b - q <= 9, s - x <= 0, -b <= 0, -r <= 9, -p - y <= -1, -b - r <= 9, s <= 9, -q <= 9, -b - p <= 9, p*x + r*y - a == 0, q*x + s*y - b == 0
l29: -a - c <= -1, p - y <= 0, -s - x <= -1, -c + q <= 9, p <= 5, -r - y <= 2, r - y <= -1, -a - y <= -2, -a + c <= 0, -c - q <= 9, s - x <= 0, -p <= 6, -p - y <= -2, -k + r <= 6, p + s <= 8, -a - k <= -1, -a - q <= 7, r - x <= 0, -s - y <= 6, -b + q <= 8, -q + s <= 9, -a - b <= -2, -b - y <= -2, -r + s <= 9, -a + r <= 4, -c - p <= 6, p + q <= 8, -k + s <= 9, -p + r <= 9, -x - y <= -2, -b - c <= -1, -q - r <= 9, -a + p <= 3, q + r <= 8, -c - y <= -1, -c - s <= 9, -a <= -1, s - y <= 2, -c + s <= 9, r + s <= 7, -b - q <= 8, -r - x <= -1, q + s <= 6, -k - y <= -1, -r <= 9, -a + q <= 7, p - q <= 9, -b + r <= 5, -c + p <= 5, -b + p <= 4, -c - r <= 9, -q + r <= 9, -a - p <= 4, -k + p <= 5, -a - r <= 3, -k - s <= 9, -k <= 0, -r - s <= 8, -k - p <= 6, -b <= -1, -c - x <= -1, q - y <= -1, -k - x <= -1, p - r <= 9, -k - r <= 9, -p + s <= 8, -c + r <= 6, q - s <= 9, -a + k <= 0, -a - s <= 6, -b - p <= 5, -b - r <= 7, q <= 9, -b + s <= 8, -p - x <= 3, -p - q <= 8, -y <= -1, -a + s <= 7, r <= 6, -c <= 0, r - s <= 9, -q - s <= 8, -x <= -1, -s <= 9, -p + q <= 9, -p - r <= 8, b - y <= 0, -b - k <= -1, p - x <= 0, p + r <= 3, -q - y <= -1, -k - q <= 9, -b - s <= 8, s <= 9, q - r <= 8, -p - s <= 9, -k + q <= 9, q - x <= 4, -a - x <= -2, -b - x <= -2, -q - x <= 7, -q <= 9, p - s <= 9, -c - k <= -1, p*x + r*y - a == 0, b*k - a + c == 0, q*x + s*y - b == 0
l41: -r - y <= 2, p - y <= 0, -c + q <= 7, r - v <= 5, -k + r <= 6, -a - c <= -2, -d - q <= 8, -p - y <= -2, -p <= 6, -b - d <= -2, -r - v <= 7, r - y <= -1, p <= 5, -a + c <= 0, -s - x <= -1, p + r <= 3, -y <= -1, s <= 9, -q - s <= 8, -k - q <= 9, -p - x <= 3, -q + r <= 9, -b + s <= 8, b - x <= 0, -c + v <= 0, -d - s <= 8, -p - q <= 8, q <= 9, -b - v <= -2, -p - v <= 5, -d + q <= 8, q - r <= 8, -p - s <= 9, -c + d <= 0, r <= 6, -b - c <= -2, -b - x <= -2, q - x <= 4, -a - y <= -2, -d - y <= -2, -b - k <= -1, -b - q <= 8, -b - s <= 8, -x - y <= -2, p - v <= 4, q + r <= 8, p - x <= 0, -s <= 9, p - q <= 9, -c - k <= -1, -q - x <= 7, -k + q <= 9, p - s <= 9, -k <= 0, -c - s <= 6, -r + s <= 9, -a + b <= 0, -k - y <= -1, -a + q <= 7, -c - v <= -2, b - v <= 0, -p + r <= 9, -c - y <= -2, -d + s <= 8, -c - p <= 4, p + q <= 8, -v - x <= -2, -k - x <= -1, -k + s <= 9, -q <= 9, p + s <= 8, -a + r <= 4, -a + p <= 3, -q - r <= 9, -d - k <= -1, d - v <= 0, -a - k <= -1, r - s <= 9, -b + r <= 5, -b + p <= 4, -c - q <= 7, -c - r <= 7, -k + p <= 5, -a - b <= -2, -a - d <= -2, -v - y <= -2, -a - q <= 7, -s - v <= 8, b - c <= 0, -s - y <= 6, -q + s <= 9, -b + q <= 8, r - x <= 0, -k - s <= 9, -b - y <= -2, q - y <= -1, -a - v <= -2, q - s <= 9, -c - x <= -2, p - r <= 9, -d + r <= 5, -q - v <= 8, -d + p <= 4, -a + s <= 7, -k - r <= 9, -d - r <= 8, -d - x <= -2, b - y <= 0, s - v <= 8, -r - s <= 8, -c + s <= 7, -c + p <= 3, -d - v <= -2, -a - p <= 4, -a <= -1, -r <= 9, -c <= -1, -a + v <= 0, -d - p <= 5, -a - r <= 3, -c - d <= -2, -r - x <= -1, r + s <= 7, q - v <= 8, -p + q <= 9, q + s <= 6, -x <= -1, -k - v <= -1, s - y <= 2, -a + d <= 0, -b - r <= 7, -a - s <= 6, -a - x <= -2, -a + k <= -1, s - x <= 0, -b - p <= 5, -k - p <= 6, -c + r <= 4, -p + s <= 8, -b <= -1, -d <= -1, -v <= -1, -q - y <= -1, -p - r <= 8, p*x + r*y - a == 0, b*d - v == 0, q*x + s*y - b == 0
1:18:11:alg:Info:test 319 invs on all 3356 traces
1:18:11:ds:Warn:l21: p + s <= 9 disproved
1:18:11:ds:Warn:l21: q - x <= 9 disproved
1:18:11:ds:Warn:l21: -a + q <= 9 disproved
1:18:11:ds:Warn:l21: -r - s <= 9 disproved
1:18:11:ds:Warn:l21: r + s <= 9 disproved
1:18:11:ds:Warn:l21: -r - y <= 6 disproved
1:18:11:ds:Warn:l21: -p <= 9 disproved
1:18:11:ds:Warn:l21: -p + r <= 9 disproved
1:18:11:ds:Warn:l21: -b - q <= 9 disproved
1:18:11:ds:Warn:l21: s - y <= 9 disproved
1:18:11:ds:Warn:l21: q - s <= 9 disproved
1:18:11:ds:Warn:l21: -b + s <= 9 disproved
1:18:11:ds:Warn:l21: -a + r <= 8 disproved
1:18:11:ds:Warn:l21: -r + s <= 9 disproved
1:18:12:ds:Warn:l21: q <= 9 disproved
1:18:12:ds:Warn:l21: -b - r <= 9 disproved
1:18:12:ds:Warn:l21: q + r <= 9 disproved
1:18:12:ds:Warn:l21: -q - x <= 9 disproved
1:18:12:ds:Warn:l21: -b + p <= 9 disproved
1:18:12:ds:Warn:l21: p - x <= 4 disproved
1:18:12:ds:Warn:l21: -b - p <= 9 disproved
1:18:12:ds:Warn:l21: -q <= 9 disproved
1:18:12:ds:Warn:l21: -a - p <= 8 disproved
1:18:12:ds:Warn:l21: -b + r <= 9 disproved
1:18:12:ds:Warn:l21: -a + s <= 9 disproved
1:18:12:ds:Warn:l21: s <= 9 disproved
1:18:12:ds:Warn:l21: p - r <= 9 disproved
1:18:12:ds:Warn:l21: -a - r <= 8 disproved
1:18:12:ds:Warn:l21: -a + p <= 8 disproved
1:18:12:ds:Warn:l21: q + s <= 9 disproved
1:18:12:ds:Warn:l21: -b + q <= 9 disproved
1:18:12:ds:Warn:l21: -p + q <= 9 disproved
1:18:12:ds:Warn:l21: r - s <= 9 disproved
1:18:12:ds:Warn:l21: -p - r <= 8 disproved
1:18:12:ds:Warn:l21: p + q <= 9 disproved
1:18:12:ds:Warn:l21: r - y <= 2 disproved
1:18:12:ds:Warn:l21: q - r <= 9 disproved
1:18:12:ds:Warn:l21: p <= 9 disproved
1:18:12:ds:Warn:l21: r <= 9 disproved
1:18:12:ds:Warn:l21: -a - q <= 9 disproved
1:18:13:ds:Warn:l21: p + r <= 6 disproved
1:18:13:ds:Warn:l21: -p + s <= 9 disproved
1:18:13:ds:Warn:l21: -r <= 9 disproved
1:18:13:ds:Warn:l29: r + s <= 7 disproved
1:18:13:ds:Warn:l29: s - y <= 2 disproved
1:18:13:ds:Warn:l29: -r <= 9 disproved
1:18:13:ds:Warn:l29: -r - s <= 8 disproved
1:18:13:ds:Warn:l29: -b - q <= 8 disproved
1:18:13:ds:Warn:l29: -c + s <= 9 disproved
1:18:13:ds:Warn:l29: -c + p <= 5 disproved
1:18:13:ds:Warn:l29: -k - s <= 9 disproved
1:18:13:ds:Warn:l29: -q + r <= 9 disproved
1:18:13:ds:Warn:l29: -a - r <= 3 disproved
1:18:13:ds:Warn:l29: s <= 9 disproved
1:18:13:ds:Warn:l29: p - q <= 9 disproved
1:18:13:ds:Warn:l29: -a - p <= 4 disproved
1:18:13:ds:Warn:l29: -b - s <= 8 disproved
1:18:13:ds:Warn:l29: -s <= 9 disproved
1:18:13:ds:Warn:l29: -p + s <= 8 disproved
1:18:13:ds:Warn:l29: p - s <= 9 disproved
1:18:13:ds:Warn:l29: -k + q <= 9 disproved
1:18:14:ds:Warn:l29: -p + r <= 9 disproved
1:18:14:ds:Warn:l29: q - x <= 4 disproved
1:18:14:ds:Warn:l29: -a - s <= 6 disproved
1:18:14:ds:Warn:l29: q - s <= 9 disproved
1:18:14:ds:Warn:l29: -a + q <= 7 disproved
1:18:14:ds:Warn:l29: -b - r <= 7 disproved
1:18:14:ds:Warn:l29: r - s <= 9 disproved
1:18:14:ds:Warn:l29: -k + p <= 5 disproved
1:18:14:ds:Warn:l29: -c + r <= 6 disproved
1:18:14:ds:Warn:l29: -k - p <= 6 disproved
1:18:14:ds:Warn:l29: -k - r <= 9 disproved
1:18:14:ds:Warn:l29: -c + q <= 9 disproved
1:18:14:ds:Warn:l29: -p <= 6 disproved
1:18:14:ds:Warn:l29: -r - y <= 2 disproved
1:18:15:ds:Warn:l29: r - y <= -1 disproved
1:18:15:ds:Warn:l29: -c - q <= 9 disproved
1:18:15:ds:Warn:l29: -b - p <= 5 disproved
1:18:15:ds:Warn:l29: -b + p <= 4 disproved
1:18:15:ds:Warn:l29: -c - r <= 9 disproved
1:18:15:ds:Warn:l29: -k + r <= 6 disproved
1:18:15:ds:Warn:l29: q + s <= 6 disproved
1:18:16:ds:Warn:l29: -q - s <= 8 disproved
1:18:16:ds:Warn:l29: -a + s <= 7 disproved
1:18:16:ds:Warn:l29: -b + r <= 5 disproved
1:18:16:ds:Warn:l29: -r + s <= 9 disproved
1:18:16:ds:Warn:l29: -p - r <= 8 disproved
1:18:16:ds:Warn:l29: r <= 6 disproved
1:18:16:ds:Warn:l29: p + r <= 3 disproved
1:18:16:ds:Warn:l29: p <= 5 disproved
1:18:16:ds:Warn:l29: -k - q <= 9 disproved
1:18:16:ds:Warn:l29: -p - s <= 9 disproved
1:18:16:ds:Warn:l29: p + s <= 8 disproved
1:18:17:ds:Warn:l29: q <= 9 disproved
1:18:17:ds:Warn:l29: -b + s <= 8 disproved
1:18:17:ds:Warn:l29: -p - q <= 8 disproved
1:18:17:ds:Warn:l29: q - r <= 8 disproved
1:18:17:ds:Warn:l29: -a + p <= 3 disproved
1:18:17:ds:Warn:l29: q + r <= 8 disproved
1:18:17:ds:Warn:l29: -q - r <= 9 disproved
1:18:17:ds:Warn:l29: -a + r <= 4 disproved
1:18:17:ds:Warn:l29: -q <= 9 disproved
1:18:17:ds:Warn:l29: -k + s <= 9 disproved
1:18:17:ds:Warn:l29: -q + s <= 9 disproved
1:18:17:ds:Warn:l29: p - r <= 9 disproved
1:18:17:ds:Warn:l29: -c - p <= 6 disproved
1:18:17:ds:Warn:l29: -c - s <= 9 disproved
1:18:17:ds:Warn:l29: p + q <= 8 disproved
1:18:17:ds:Warn:l29: -b + q <= 8 disproved
1:18:17:ds:Warn:l29: -a - q <= 7 disproved
1:18:17:ds:Warn:l29: -p + q <= 9 disproved
1:18:17:ds:Warn:l29: -s - y <= 6 disproved
1:18:17:ds:Warn:l41: -d + s <= 8 disproved
1:18:18:ds:Warn:l41: s - v <= 8 disproved
1:18:18:ds:Warn:l41: s - y <= 2 disproved
1:18:18:ds:Warn:l41: -r <= 9 disproved
1:18:18:ds:Warn:l41: -a + q <= 7 disproved
1:18:18:ds:Warn:l41: -b - q <= 8 disproved
1:18:18:ds:Warn:l41: -c + p <= 3 disproved
1:18:18:ds:Warn:l41: -a + s <= 7 disproved
1:18:18:ds:Warn:l41: -k - s <= 9 disproved
1:18:19:ds:Warn:l41: -q + r <= 9 disproved
1:18:19:ds:Warn:l41: q - r <= 8 disproved
1:18:19:ds:Warn:l41: -a - r <= 3 disproved
1:18:19:ds:Warn:l41: s <= 9 disproved
1:18:19:ds:Warn:l41: -d - s <= 8 disproved
1:18:19:ds:Warn:l41: p - q <= 9 disproved
1:18:19:ds:Warn:l41: -a - p <= 4 disproved
1:18:19:ds:Warn:l41: -b - s <= 8 disproved
1:18:19:ds:Warn:l41: -s <= 9 disproved
1:18:19:ds:Warn:l41: -r - y <= 2 disproved
1:18:19:ds:Warn:l41: p - v <= 4 disproved
1:18:19:ds:Warn:l41: -p + s <= 8 disproved
1:18:19:ds:Warn:l41: p - s <= 9 disproved
1:18:19:ds:Warn:l41: -k + q <= 9 disproved
1:18:20:ds:Warn:l41: p - r <= 9 disproved
1:18:20:ds:Warn:l41: q - x <= 4 disproved
1:18:20:ds:Warn:l41: -a - s <= 6 disproved
1:18:20:ds:Warn:l41: q - s <= 9 disproved
1:18:20:ds:Warn:l41: -r - s <= 8 disproved
1:18:20:ds:Warn:l41: -b - r <= 7 disproved
1:18:20:ds:Warn:l41: -r + s <= 9 disproved
1:18:20:ds:Warn:l41: -c - s <= 6 disproved
1:18:20:ds:Warn:l41: -d - r <= 8 disproved
1:18:20:ds:Warn:l41: q - v <= 8 disproved
1:18:20:ds:Warn:l41: -d - p <= 5 disproved
1:18:20:ds:Warn:l41: -c + r <= 4 disproved
1:18:20:ds:Warn:l41: -b - p <= 5 disproved
1:18:20:ds:Warn:l41: -k - p <= 6 disproved
1:18:20:ds:Warn:l41: -k - r <= 9 disproved
1:18:20:ds:Warn:l41: -b + p <= 4 disproved
1:18:20:ds:Warn:l41: p <= 5 disproved
1:18:20:ds:Warn:l41: r + s <= 7 disproved
1:18:20:ds:Warn:l41: -d + q <= 8 disproved
1:18:20:ds:Warn:l41: -c + q <= 7 disproved
1:18:20:ds:Warn:l41: r - v <= 5 disproved
1:18:21:ds:Warn:l41: -p <= 6 disproved
1:18:21:ds:Warn:l41: -c - q <= 7 disproved
1:18:21:ds:Warn:l41: -r - v <= 7 disproved
1:18:21:ds:Warn:l41: -d - q <= 8 disproved
1:18:21:ds:Warn:l41: r - y <= -1 disproved
1:18:21:ds:Warn:l41: -c - r <= 7 disproved
1:18:21:ds:Warn:l41: -k + p <= 5 disproved
1:18:21:ds:Warn:l41: -q - r <= 9 disproved
1:18:21:ds:Warn:l41: -k + r <= 6 disproved
1:18:21:ds:Warn:l41: q + s <= 6 disproved
1:18:22:ds:Warn:l41: -d + p <= 4 disproved
1:18:22:ds:Warn:l41: -d + r <= 5 disproved
1:18:22:ds:Warn:l41: -a - q <= 7 disproved
1:18:22:ds:Warn:l41: -q - s <= 8 disproved
1:18:22:ds:Warn:l41: -c + s <= 7 disproved
1:18:22:ds:Warn:l41: -b + r <= 5 disproved
1:18:22:ds:Warn:l41: -p - r <= 8 disproved
1:18:22:ds:Warn:l41: r <= 6 disproved
1:18:23:ds:Warn:l41: p + r <= 3 disproved
1:18:23:ds:Warn:l41: -k - q <= 9 disproved
1:18:23:ds:Warn:l41: -p - s <= 9 disproved
1:18:23:ds:Warn:l41: p + s <= 8 disproved
1:18:23:ds:Warn:l41: -p - v <= 5 disproved
1:18:23:ds:Warn:l41: -k + s <= 9 disproved
1:18:24:ds:Warn:l41: q <= 9 disproved
1:18:24:ds:Warn:l41: -b + s <= 8 disproved
1:18:24:ds:Warn:l41: -p - q <= 8 disproved
1:18:24:ds:Warn:l41: -a + p <= 3 disproved
1:18:24:ds:Warn:l41: q + r <= 8 disproved
1:18:24:ds:Warn:l41: -a + r <= 4 disproved
1:18:24:ds:Warn:l41: -q <= 9 disproved
1:18:25:ds:Warn:l41: -q + s <= 9 disproved
1:18:25:ds:Warn:l41: -q - v <= 8 disproved
1:18:25:ds:Warn:l41: -c - p <= 4 disproved
1:18:25:ds:Warn:l41: -p + r <= 9 disproved
1:18:25:ds:Warn:l41: p + q <= 8 disproved
1:18:25:ds:Warn:l41: -b + q <= 8 disproved
1:18:25:ds:Warn:l41: r - s <= 9 disproved
1:18:25:ds:Warn:l41: -s - v <= 8 disproved
1:18:25:ds:Warn:l41: -p + q <= 9 disproved
1:18:26:ds:Warn:l41: -s - y <= 6 disproved
1:18:26:alg:Info:find uniq invs
1:18:26:alg:Info:122 invs:
l21: -b - x <= -1, -r - x <= -1, -a - y <= -2, -y <= -1, -x <= -1, r - x <= 0, -x - y <= -2, q - y <= 0, -a - b <= -1, -a - x <= -2, -q - y <= 0, b - y <= 0, -s - x <= 0, p - y <= 0, -p - x <= 7, -a <= -1, -b - y <= -1, s - x <= 0, -b <= 0, -p - y <= -1, p*x + r*y - a == 0, q*x + s*y - b == 0
l29: -a - c <= -1, p - y <= 0, -s - x <= -1, -a - y <= -2, -a + c <= 0, s - x <= 0, -p - y <= -2, -a - k <= -1, r - x <= 0, -a - b <= -2, -b - y <= -2, -x - y <= -2, -b - c <= -1, -c - y <= -1, -a <= -1, -r - x <= -1, -k - y <= -1, -k <= 0, -b <= -1, -c - x <= -1, q - y <= -1, -k - x <= -1, -a + k <= 0, -p - x <= 3, -y <= -1, -c <= 0, -x <= -1, b - y <= 0, -b - k <= -1, p - x <= 0, -q - y <= -1, -a - x <= -2, -b - x <= -2, -q - x <= 7, -c - k <= -1, p*x + r*y - a == 0, b*k - a + c == 0, q*x + s*y - b == 0
l41: p - y <= 0, -a - c <= -2, -p - y <= -2, -b - d <= -2, -a + c <= 0, -s - x <= -1, -y <= -1, -p - x <= 3, b - x <= 0, -c + v <= 0, -b - v <= -2, -c + d <= 0, -b - c <= -2, -b - x <= -2, -a - y <= -2, -d - y <= -2, -b - k <= -1, -x - y <= -2, p - x <= 0, -c - k <= -1, -q - x <= 7, -k <= 0, -a + b <= 0, -k - y <= -1, -c - v <= -2, b - v <= 0, -c - y <= -2, -v - x <= -2, -k - x <= -1, -d - k <= -1, d - v <= 0, -a - k <= -1, -a - b <= -2, -a - d <= -2, -v - y <= -2, b - c <= 0, r - x <= 0, -b - y <= -2, q - y <= -1, -a - v <= -2, -c - x <= -2, -d - x <= -2, b - y <= 0, -d - v <= -2, -a <= -1, -c <= -1, -a + v <= 0, -c - d <= -2, -r - x <= -1, -x <= -1, -k - v <= -1, -a + d <= 0, -a - x <= -2, -a + k <= -1, s - x <= 0, -b <= -1, -d <= -1, -v <= -1, -q - y <= -1, p*x + r*y - a == 0, b*d - v == 0, q*x + s*y - b == 0
1:18:26:miscs:Debug:workloads 'uniqify' 3: [1, 1, 1]
1:22:52:alg:Debug:src: /var/tmp/DIG2_PNJ_BA/egcd3.c
1:22:52:alg:Info:analyze programs/nla/egcd3.c
1:22:52:alg:Info:set seed to: 11.0 (test 49)
1:22:52:miscs:Info:autodeg 2
1:22:52:alg:Info:check reachability
1:22:52:alg:Info:gen eqts at 3 locs: l21 (int a, int b, int y, int r, int x, int p, int q, int s); l29 (int a, int b, int y, int r, int x, int p, int q, int s, int k, int c); l41 (int a, int b, int y, int r, int x, int p, int q, int s, int d, int v, int k, int c)
1:22:52:alg:Debug:l21: need more traces (20 eqts, need >= 67)
1:22:52:alg:Debug:obtain 25 new traces
1:22:52:alg:Debug:l21: need more traces (45 eqts, need >= 67)
1:22:53:alg:Debug:obtain 25 new traces
1:22:53:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
1:22:53:alg:Debug:l21: infer using 67 exprs
1:22:53:miscs:Debug:solve 45 uks using 67 eqts
1:22:54:alg:Debug:l21: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
1:22:54:alg:Debug:l21: check 2 unchecked (2 candidates)
1:22:54:miscs:Debug:workloads 'prove' 2: [1, 1]
1:22:53:alg:Debug:l29: infer using 99 exprs
1:22:53:miscs:Debug:solve 66 uks using 99 eqts
1:22:55:alg:Debug:l29: 4 candidates:
b*k - a + c == 0
a*p - c*p - k*p + a*r - c*r - k*r - a + c + k == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
1:22:55:alg:Debug:l29: check 4 unchecked (4 candidates)
1:22:55:miscs:Debug:workloads 'prove' 4: [1, 1, 1, 1]
1:22:58:alg:Debug:l21: no disproved candidates -- break
1:22:59:alg:Debug:l29: 1 new cex exprs
1:22:59:alg:Debug:l29: infer using 100 exprs
1:22:59:miscs:Debug:solve 66 uks using 100 eqts
1:23:0:alg:Debug:l29: no new results -- break
1:32:52:alg:Debug:src: /var/tmp/DIG2_OmtJtj/egcd3.c
1:32:52:alg:Info:analyze programs/nla/egcd3.c
1:32:52:alg:Info:set seed to: 12.0 (test 49)
1:32:52:miscs:Info:autodeg 2
1:32:52:alg:Info:check reachability
1:32:52:alg:Info:gen eqts at 3 locs: l21 (int a, int b, int y, int r, int x, int p, int q, int s); l29 (int a, int b, int y, int r, int x, int p, int q, int s, int k, int c); l41 (int a, int b, int y, int r, int x, int p, int q, int s, int d, int v, int k, int c)
1:32:52:alg:Debug:l21: need more traces (25 eqts, need >= 67)
1:32:52:alg:Debug:obtain 23 new traces
1:32:52:alg:Debug:l21: need more traces (48 eqts, need >= 67)
1:32:53:alg:Debug:obtain 22 new traces
1:32:53:alg:Debug:l41: need more traces (131 eqts, need >= 136)
1:32:53:alg:Debug:obtain 116 new traces
1:32:53:miscs:Debug:workloads 'find eqts' 3: [1, 1, 1]
1:32:53:alg:Debug:l21: infer using 67 exprs
1:32:53:miscs:Debug:solve 45 uks using 67 eqts
1:32:55:alg:Debug:l21: 2 candidates:
p*x + r*y - a == 0
q*x + s*y - b == 0
1:32:55:alg:Debug:l21: check 2 unchecked (2 candidates)
1:32:55:miscs:Debug:workloads 'prove' 2: [1, 1]
1:32:53:alg:Debug:l29: infer using 99 exprs
1:32:53:miscs:Debug:solve 66 uks using 99 eqts
1:32:56:alg:Debug:l29: 3 candidates:
b*k - a + c == 0
p*x + r*y - a == 0
q*x + s*y - b == 0
1:32:56:alg:Debug:l29: check 3 unchecked (3 candidates)
1:32:56:miscs:Debug:workloads 'prove' 3: [1, 1, 1]
1:32:58:alg:Debug:l21: no disproved candidates -- break
1:32:59:alg:Debug:l29: no disproved candidates -- break
running lcm2
1:42:52:alg:Debug:src: /var/tmp/DIG2_YEJDFo/lcm2.c
1:42:52:alg:Info:analyze programs/nla/lcm2.c
1:42:52:alg:Info:set seed to: 0.0 (test 11)
1:42:52:miscs:Info:autodeg 3
1:42:52:alg:Info:check reachability
1:42:52:alg:Info:gen eqts at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:42:52:alg:Debug:l16: need more traces (107 eqts, need >= 126)
1:42:52:alg:Debug:obtain 55 new traces
1:42:52:alg:Debug:l16: infer using 126 exprs
1:42:52:miscs:Debug:solve 84 uks using 126 eqts
1:43:31:alg:Debug:l16: 1 candidates:
2*a*b - u*x - v*y == 0
1:43:31:alg:Debug:l16: check 1 unchecked (1 candidates)
1:43:34:alg:Debug:l16: no disproved candidates -- break
1:43:34:alg:Debug:l16: got 1 eqts, 0 new inps
1:43:34:alg:Debug:2*a*b - u*x - v*y == 0
1:43:34:alg:Info:1 invs:
l16: 2*a*b - u*x - v*y == 0
1:43:34:alg:Info:gen ieqs at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:43:34:alg:Info:1 locs: check upperbounds for 72 terms
1:43:34:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
1:43:48:alg:Info:1 locs: compute upperbounds for 27 terms
1:43:48:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
1:43:48:alg:Debug:l16: compute ub for '-u', start w/ min -1, maxV 10)
1:44:3:alg:Debug:got -u <= -1
1:43:48:alg:Debug:l16: compute ub for '-a - b', start w/ min -5, maxV 10)
1:44:0:alg:Debug:got -a - b <= -2
1:44:1:alg:Debug:l16: compute ub for '-b - v', start w/ min -5, maxV 10)
1:44:13:alg:Debug:got -b - v <= -2
1:43:48:alg:Debug:l16: compute ub for '-a - u', start w/ min -5, maxV 10)
1:44:0:alg:Debug:got -a - u <= -2
1:44:1:alg:Debug:l16: compute ub for '-b - x', start w/ min -2, maxV 10)
1:44:16:alg:Debug:got -b - x <= -2
1:43:48:alg:Debug:l16: compute ub for '-u - v', start w/ min -5, maxV 10)
1:44:0:alg:Debug:got -u - v <= -2
1:44:1:alg:Debug:l16: compute ub for '-v - x', start w/ min -2, maxV 10)
1:44:16:alg:Debug:got -v - x <= -2
1:43:48:alg:Debug:l16: compute ub for '-b + y', start w/ min 0, maxV 10)
1:44:3:alg:Debug:got -b + y <= 0
1:44:4:alg:Debug:l16: compute ub for '-x - y', start w/ min -2, maxV 10)
1:44:19:alg:Debug:got -x - y <= -2
1:43:48:alg:Debug:l16: compute ub for 'b - u', start w/ min 0, maxV 10)
1:44:3:alg:Debug:got b - u <= 0
1:44:4:alg:Debug:l16: compute ub for '-a + x', start w/ min 0, maxV 10)
1:44:19:alg:Debug:got -a + x <= 0
1:43:48:alg:Debug:l16: compute ub for 'a - v', start w/ min 0, maxV 10)
1:44:3:alg:Debug:got a - v <= 0
1:44:4:alg:Debug:l16: compute ub for '-a', start w/ min -1, maxV 10)
1:44:19:alg:Debug:got -a <= -1
1:43:48:alg:Debug:l16: compute ub for '-u - y', start w/ min -2, maxV 10)
1:44:3:alg:Debug:got -u - y <= -2
1:44:4:alg:Debug:l16: compute ub for '-v', start w/ min -1, maxV 10)
1:44:19:alg:Debug:got -v <= -1
1:43:48:alg:Debug:l16: compute ub for '-a - x', start w/ min -2, maxV 10)
1:44:3:alg:Debug:got -a - x <= -2
1:44:4:alg:Debug:l16: compute ub for '-b', start w/ min -1, maxV 10)
1:44:19:alg:Debug:got -b <= -1
1:43:48:alg:Debug:l16: compute ub for '-a - v', start w/ min -2, maxV 10)
1:44:3:alg:Debug:got -a - v <= -2
1:44:4:alg:Debug:l16: compute ub for '-x', start w/ min -1, maxV 10)
1:44:19:alg:Debug:got -x <= -1
1:43:48:alg:Debug:l16: compute ub for '-u - x', start w/ min -2, maxV 10)
1:44:3:alg:Debug:got -u - x <= -2
1:44:4:alg:Debug:l16: compute ub for '-b - u', start w/ min -2, maxV 10)
1:44:19:alg:Debug:got -b - u <= -2
1:43:48:alg:Debug:l16: compute ub for '-u + y', start w/ min 0, maxV 10)
1:44:3:alg:Debug:got -u + y <= 0
1:44:4:alg:Debug:l16: compute ub for '-b - y', start w/ min -2, maxV 10)
1:44:19:alg:Debug:got -b - y <= -2
1:43:48:alg:Debug:l16: compute ub for '-y', start w/ min -1, maxV 10)
1:44:3:alg:Debug:got -y <= -1
1:44:4:alg:Debug:l16: compute ub for '-v + x', start w/ min 0, maxV 10)
1:44:19:alg:Debug:got -v + x <= 0
1:43:48:alg:Debug:l16: compute ub for '-v - y', start w/ min -2, maxV 10)
1:44:3:alg:Debug:got -v - y <= -2
1:44:4:alg:Debug:l16: compute ub for '-a - y', start w/ min -2, maxV 10)
1:44:19:alg:Debug:got -a - y <= -2
1:44:19:alg:Info:28 invs:
l16: -x <= -1, -b - u <= -2, -b - v <= -2, -a + x <= 0, -b - x <= -2, -a <= -1, -x - y <= -2, -v <= -1, -v - x <= -2, -b <= -1, -u <= -1, -u - x <= -2, -u + y <= 0, -a - u <= -2, a - v <= 0, -u - v <= -2, -u - y <= -2, b - u <= 0, -a - x <= -2, -b + y <= 0, -a - v <= -2, -a - b <= -2, -y <= -1, -b - y <= -2, -a - y <= -2, -v + x <= 0, -v - y <= -2, 2*a*b - u*x - v*y == 0
1:44:19:alg:Info:test 28 invs on all 1333 traces
1:44:21:alg:Info:find uniq invs
1:44:21:alg:Info:28 invs:
l16: -x <= -1, -b - u <= -2, -b - v <= -2, -a + x <= 0, -b - x <= -2, -a <= -1, -x - y <= -2, -v <= -1, -v - x <= -2, -b <= -1, -u <= -1, -u - x <= -2, -u + y <= 0, -a - u <= -2, a - v <= 0, -u - v <= -2, -u - y <= -2, b - u <= 0, -a - x <= -2, -b + y <= 0, -a - v <= -2, -a - b <= -2, -y <= -1, -b - y <= -2, -a - y <= -2, -v + x <= 0, -v - y <= -2, 2*a*b - u*x - v*y == 0
1:44:22:alg:Info:removed 21 redundant invs
1:44:22:alg:Info:got 7 invs, 169 inps (test 51): 
l16: -a + x <= 0, -y <= -1, 2*a*b - u*x - v*y == 0, b - u <= 0, -x <= -1, -b + y <= 0, a - v <= 0
1:44:22:alg:Info:*done* prog programs/nla/lcm2.c, invs 7, time 90.0147509575 s
1:44:22:alg:Debug:rm -rf /var/tmp/DIG2_YEJDFo
1:44:23:alg:Debug:src: /var/tmp/DIG2_4LRy4h/lcm2.c
1:44:23:alg:Info:analyze programs/nla/lcm2.c
1:44:23:alg:Info:set seed to: 1.0 (test 83)
1:44:23:miscs:Info:autodeg 3
1:44:23:alg:Info:check reachability
1:44:23:alg:Info:gen eqts at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:44:24:alg:Debug:l16: infer using 126 exprs
1:44:24:miscs:Debug:solve 84 uks using 126 eqts
1:44:32:alg:Debug:l16: 1 candidates:
2*a*b - u*x - v*y == 0
1:44:32:alg:Debug:l16: check 1 unchecked (1 candidates)
1:44:35:alg:Debug:l16: no disproved candidates -- break
1:44:35:alg:Debug:l16: got 1 eqts, 0 new inps
1:44:35:alg:Debug:2*a*b - u*x - v*y == 0
1:44:35:alg:Info:1 invs:
l16: 2*a*b - u*x - v*y == 0
1:44:35:alg:Info:gen ieqs at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:44:35:alg:Info:1 locs: check upperbounds for 72 terms
1:44:35:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
1:44:49:alg:Info:1 locs: compute upperbounds for 27 terms
1:44:49:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
1:44:50:alg:Debug:l16: compute ub for '-u', start w/ min -1, maxV 10)
1:45:5:alg:Debug:got -u <= -1
1:44:50:alg:Debug:l16: compute ub for '-v - x', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -v - x <= -2
1:45:5:alg:Debug:l16: compute ub for '-a - b', start w/ min -5, maxV 10)
1:45:18:alg:Debug:got -a - b <= -2
1:44:50:alg:Debug:l16: compute ub for '-u - v', start w/ min -5, maxV 10)
1:45:2:alg:Debug:got -u - v <= -2
1:45:2:alg:Debug:l16: compute ub for '-a + x', start w/ min 0, maxV 10)
1:45:18:alg:Debug:got -a + x <= 0
1:44:50:alg:Debug:l16: compute ub for '-a - u', start w/ min -5, maxV 10)
1:45:2:alg:Debug:got -a - u <= -2
1:45:2:alg:Debug:l16: compute ub for '-b', start w/ min -1, maxV 10)
1:45:18:alg:Debug:got -b <= -1
1:44:50:alg:Debug:l16: compute ub for '-b - v', start w/ min -5, maxV 10)
1:45:2:alg:Debug:got -b - v <= -2
1:45:2:alg:Debug:l16: compute ub for '-a - x', start w/ min -2, maxV 10)
1:45:18:alg:Debug:got -a - x <= -2
1:44:50:alg:Debug:l16: compute ub for '-x - y', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -x - y <= -2
1:45:5:alg:Debug:l16: compute ub for 'b - u', start w/ min 0, maxV 10)
1:45:21:alg:Debug:got b - u <= 0
1:44:50:alg:Debug:l16: compute ub for '-x', start w/ min -1, maxV 10)
1:45:5:alg:Debug:got -x <= -1
1:45:5:alg:Debug:l16: compute ub for '-v - y', start w/ min -2, maxV 10)
1:45:21:alg:Debug:got -v - y <= -2
1:44:50:alg:Debug:l16: compute ub for '-a - y', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -a - y <= -2
1:45:5:alg:Debug:l16: compute ub for '-u - y', start w/ min -2, maxV 10)
1:45:21:alg:Debug:got -u - y <= -2
1:44:50:alg:Debug:l16: compute ub for 'a - v', start w/ min 0, maxV 10)
1:45:5:alg:Debug:got a - v <= 0
1:45:5:alg:Debug:l16: compute ub for '-b + y', start w/ min 0, maxV 10)
1:45:21:alg:Debug:got -b + y <= 0
1:44:50:alg:Debug:l16: compute ub for '-u - x', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -u - x <= -2
1:45:5:alg:Debug:l16: compute ub for '-y', start w/ min -1, maxV 10)
1:45:21:alg:Debug:got -y <= -1
1:44:50:alg:Debug:l16: compute ub for '-v + x', start w/ min 0, maxV 10)
1:45:5:alg:Debug:got -v + x <= 0
1:45:5:alg:Debug:l16: compute ub for '-a', start w/ min -1, maxV 10)
1:45:21:alg:Debug:got -a <= -1
1:44:50:alg:Debug:l16: compute ub for '-b - u', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -b - u <= -2
1:45:6:alg:Debug:l16: compute ub for '-v', start w/ min -1, maxV 10)
1:45:21:alg:Debug:got -v <= -1
1:44:50:alg:Debug:l16: compute ub for '-u + y', start w/ min 0, maxV 10)
1:45:5:alg:Debug:got -u + y <= 0
1:45:6:alg:Debug:l16: compute ub for '-b - x', start w/ min -2, maxV 10)
1:45:21:alg:Debug:got -b - x <= -2
1:44:50:alg:Debug:l16: compute ub for '-b - y', start w/ min -2, maxV 10)
1:45:5:alg:Debug:got -b - y <= -2
1:45:6:alg:Debug:l16: compute ub for '-a - v', start w/ min -2, maxV 10)
1:45:21:alg:Debug:got -a - v <= -2
1:45:21:alg:Info:28 invs:
l16: -a - v <= -2, -a - b <= -2, -b <= -1, -b + y <= 0, -b - x <= -2, -a + x <= 0, -v <= -1, b - u <= 0, -v - y <= -2, -a - x <= -2, -y <= -1, -u - y <= -2, -a <= -1, -u <= -1, -u - v <= -2, -b - v <= -2, -u - x <= -2, -b - y <= -2, -a - u <= -2, -u + y <= 0, -x <= -1, -a - y <= -2, -x - y <= -2, -v + x <= 0, a - v <= 0, -b - u <= -2, -v - x <= -2, 2*a*b - u*x - v*y == 0
1:45:21:alg:Info:test 28 invs on all 1283 traces
1:45:23:alg:Info:find uniq invs
1:45:23:alg:Info:28 invs:
l16: -a - v <= -2, -a - b <= -2, -b <= -1, -b + y <= 0, -b - x <= -2, -a + x <= 0, -v <= -1, b - u <= 0, -v - y <= -2, -a - x <= -2, -y <= -1, -u - y <= -2, -a <= -1, -u <= -1, -u - v <= -2, -b - v <= -2, -u - x <= -2, -b - y <= -2, -a - u <= -2, -u + y <= 0, -x <= -1, -a - y <= -2, -x - y <= -2, -v + x <= 0, a - v <= 0, -b - u <= -2, -v - x <= -2, 2*a*b - u*x - v*y == 0
1:45:24:alg:Info:removed 21 redundant invs
1:45:24:alg:Info:got 7 invs, 159 inps (test 60): 
l16: b - u <= 0, -y <= -1, -b + y <= 0, a - v <= 0, -a + x <= 0, 2*a*b - u*x - v*y == 0, -x <= -1
1:45:24:alg:Info:*done* prog programs/nla/lcm2.c, invs 7, time 60.6958220005 s
1:45:24:alg:Debug:rm -rf /var/tmp/DIG2_4LRy4h
1:45:25:alg:Debug:src: /var/tmp/DIG2_XFpW8C/lcm2.c
1:45:25:alg:Info:analyze programs/nla/lcm2.c
1:45:25:alg:Info:set seed to: 2.0 (test 98)
1:45:25:miscs:Info:autodeg 3
1:45:25:alg:Info:check reachability
1:45:25:alg:Info:gen eqts at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:45:25:alg:Debug:l16: infer using 126 exprs
1:45:25:miscs:Debug:solve 84 uks using 126 eqts
1:45:32:alg:Debug:l16: 1 candidates:
2*a*b - u*x - v*y == 0
1:45:32:alg:Debug:l16: check 1 unchecked (1 candidates)
1:45:35:alg:Debug:l16: no disproved candidates -- break
1:45:35:alg:Debug:l16: got 1 eqts, 0 new inps
1:45:35:alg:Debug:2*a*b - u*x - v*y == 0
1:45:35:alg:Info:1 invs:
l16: 2*a*b - u*x - v*y == 0
1:45:35:alg:Info:gen ieqs at 1 locs: l16 (int a, int b, int x, int y, int u, int v)
1:45:35:alg:Info:1 locs: check upperbounds for 72 terms
1:45:35:miscs:Debug:workloads 'prove' 18: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
1:45:49:alg:Info:1 locs: compute upperbounds for 27 terms
1:45:49:miscs:Debug:workloads 'guesscheck' 14: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1]
1:45:49:alg:Debug:l16: compute ub for '-u - y', start w/ min -2, maxV 10)
1:46:4:alg:Debug:got -u - y <= -2
1:45:49:alg:Debug:l16: compute ub for '-a - u', start w/ min -5, maxV 10)
1:46:1:alg:Debug:got -a - u <= -2
1:46:1:alg:Debug:l16: compute ub for '-a + x', start w/ min 0, maxV 10)
1:46:17:alg:Debug:got -a + x <= 0
1:45:49:alg:Debug:l16: compute ub for '-v - x', start w/ min -2, maxV 10)
1:46:4:alg:Debug:got -v - x <= -2
1:46:5:alg:Debug:l16: compute ub for '-a - b', start w/ min -5, maxV 10)
1:46:17:alg:Debug:got -a - b <= -2
1:45:49:alg:Debug:l16: compute ub for '-b', start w/ min -1, maxV 10)
1:46:4:alg:Debug:got -b <= -1
1:46:5:alg:Debug:l16: compute ub for '-u - v', start w/ min -5, maxV 10)
1:46:17:alg:Debug:got -u - v <= -2
1:45:49:alg:Debug:l16: compute ub for '-b - v', start w/ min -5, maxV 10)
1:46:1:alg:Debug:got -b - v <= -2
1:46:2:alg:Debug:l16: compute ub for '-a - x', start w/ min -2, maxV 10)
1:46:17:alg:Debug:got -a - x <= -2
1:45:49:alg:Debug:l16: compute ub for '-u - x', start w/ min -2, maxV 10)
1:46:4:alg:Debug:got -u - x <= -2
1:46:4:alg:Debug:l16: compute ub for '-y', start w/ min -1, maxV 10)
1:46:20:alg:Debug:got -y <= -1
1:45:49:alg:Debug:l16: compute ub for '-a - y', start w/ min -2, maxV 10)
1:46:4:alg:Debug:got -a - y <= -2
1:46:5:alg:Debug:l16: compute ub for '-u', start w/ min -1, maxV 10)
1:46:20:alg:Debug:got -u <= -1
1:45:49:alg:Debug:l16: compute ub for '-b - u', start w/ min -2, maxV 10)
1:46:4:alg:Debug:got -b - u <= -2
1:46:5:alg:Debug:l16: compute ub for '-v', start w/ min -1, maxV 10)
1:46:20:alg:Debug:got -v <= -1
1:45:49:alg:Debug:l16: compute ub for '-v + x', start w/ min 0, maxV 10)
1:46:4:alg:Debug:got -v + x <= 0
1:46:5:alg:Debug:l16: compute ub for '-x - y', start w/ min -2, maxV 10)
1:46:20:alg:Debug:got -x - y <= -2
1:45:49:alg:Debug:l16: compute ub for 'a - v', start w/ min 0, maxV 10)
1:46:4:alg:Debug:got a - v <= 0
1:46:5:alg:Debug:l16: compute ub for '-b + y', start w/ min 0, maxV 10)
1:46:20:alg:Debug:got -b + y <= 0
1:45:49:alg:Debug:l16: compute ub for 'b - u', start w/ min 0, maxV 10)
1:46:4:alg:Debug:got b - u <= 0
1:46:5:alg:Debug:l16: compute ub for '-b - y', start w/ min -2, maxV 10)
1:46:20:alg:Debug:got -b - y <= -2
1:45:49:alg:Debug:l16: compute ub for '-a', start w/ min -1, maxV 10)
1:46:4:alg:Debug:got -a <= -1
1:46:5:alg:Debug:l16: compute ub for '-v - y', start w/ min -2, maxV 10)
1:46:20:alg:Debug:got -v - y <= -2
1:45:49:alg:Debug:l16: compute ub for '-x', start w/ min -1, maxV 10)
1:46:4:alg:Debug:got -x <= -1
1:46:5:alg:Debug:l16: compute ub for '-a - v', start w/ min -2, maxV 10)
1:46:20:alg:Debug:got -a - v <= -2
1:45:49:alg:Debug:l16: compute ub for '-u + y', start w/ min 0, maxV 10)
1:46:4:alg:Debug:got -u + y <= 0
1:46:5:alg:Debug:l16: compute ub for '-b - x', start w/ min -2, maxV 10)
1:46:20:alg:Debug:got -b - x <= -2
1:46:20:alg:Info:28 invs:
l16: b - u <= 0, -a - x <= -2, -a <= -1, -v - x <= -2, -u <= -1, -u + y <= 0, -a - u <= -2, -b <= -1, -x - y <= -2, -y <= -1, -a - y <= -2, -v + x <= 0, -b + y <= 0, -a - v <= -2, -b - v <= -2, -v <= -1, -u - y <= -2, -x <= -1, -b - y <= -2, -u - x <= -2, -v - y <= -2, -a - b <= -2, -b - u <= -2, -b - x <= -2, -a + x <= 0, -u - v <= -2, a - v <= 0, 2*a*b - u*x - v*y == 0
1:46:20:alg:Info:test 28 invs on all 1486 traces
1:46:22:alg:Info:find uniq invs
1:46:22:alg:Info:28 invs:
l16: b - u <= 0, -a - x <= -2, -a <= -1, -v - x <= -2, -u <= -1, -u + y <= 0, -a - u <= -2, -b <= -1, -x - y <= -2, -y <= -1, -a - y <= -2, -v + x <= 0, -b + y <= 0, -a - v <= -2, -b - v <= -2, -v <= -1, -u - y <= -2, -x <= -1, -b - y <= -2, -u - x <= -2, -v - y <= -2, -a - b <= -2, -b - u <= -2, -b - x <= -2, -a + x <= 0, -u - v <= -2, a - v <= 0, 2*a*b - u*x - v*y == 0
1:46:23:alg:Info:removed 21 redundant invs
1:46:23:alg:Info:got 7 invs, 161 inps (test 45): 
l16: -b + y <= 0, 2*a*b - u*x - v*y == 0, -y <= -1, a - v <= 0, b - u <= 0, -a + x <= 0, -x <= -1
1:46:23:alg:Info:*done* prog programs/nla/lcm2.c, invs 7, time 57.9660480022 s
1:46:23:alg:Debug:rm -rf /var/tmp/DIG2_XFpW8C
